(function() {var implementors = {};
implementors["actix_codec"] = [{"text":"impl&lt;T, U&gt; Stream for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AsyncRead,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Decoder,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["actix_http"] = [{"text":"impl&lt;B:&nbsp;MessageBody&gt; Stream for ResponseBody&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Stream for Payload&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Stream for Payload","synthetic":false,"types":[]},{"text":"impl Stream for Payload","synthetic":false,"types":[]}];
implementors["actix_utils"] = [{"text":"impl&lt;T&gt; Stream for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Stream for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Stream for UnboundedReceiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_core"] = [];
implementors["glib"] = [{"text":"impl&lt;F, T&gt; Stream for SourceStream&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(UnboundedSender&lt;T&gt;) -&gt; Source + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl&lt;T, U&gt; Stream for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AsyncRead,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Decoder,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, D&gt; Stream for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AsyncRead,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Decoder,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, D&gt; Stream for FramedWrite&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Stream,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["trust_dns_proto"] = [{"text":"impl&lt;S:&nbsp;AsyncRead + AsyncWrite + Send + Unpin&gt; Stream for TcpClientStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;AsyncRead + AsyncWrite + Unpin&gt; Stream for TcpStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Send, MF:&nbsp;MessageFinalizer&gt; Stream for UdpClientStream&lt;S, MF&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;UdpSocket + Send + 'static&gt; Stream for UdpStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, MF&gt; Stream for DnsMultiplexer&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: DnsClientStream + Unpin + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;MF: MessageFinalizer + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()