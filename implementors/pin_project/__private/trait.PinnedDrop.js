(function() {var implementors = {};
implementors["actix"] = [{"text":"impl&lt;A, F&gt; PinnedDrop for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: ActorFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; PinnedDrop for StreamFold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: IntoActorFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, F&gt; PinnedDrop for StreamMap&lt;S, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, F:&nbsp;'static, U&gt; PinnedDrop for StreamThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: IntoActorFuture,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: ActorStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A, B, F:&nbsp;'static&gt; PinnedDrop for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: ActorFuture,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: IntoActorFuture&lt;Actor = A::Actor&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; PinnedDrop for Timeout&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: ActorFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F, A&gt; PinnedDrop for FutureWrap&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, A&gt; PinnedDrop for StreamWrap&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Stream,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["actix_http"] = [{"text":"impl&lt;B&gt; PinnedDrop for ResponseBody&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S, E&gt; PinnedDrop for BodyStream&lt;S, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; PinnedDrop for SizedStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, B&gt; PinnedDrop for SendResponse&lt;T, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S:&nbsp;Service&lt;Request = Request&gt;, B:&nbsp;MessageBody&gt; PinnedDrop for Dispatcher&lt;T, S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AsyncRead + AsyncWrite + Unpin,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["actix_utils"] = [{"text":"impl&lt;S, T, U&gt; PinnedDrop for Dispatcher&lt;S, T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Service&lt;Request = &lt;U as Decoder&gt;::Item, Response = &lt;U as Encoder&gt;::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::Error: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::Future: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AsyncRead + AsyncWrite,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Encoder + Decoder,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Item: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Error: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, T&gt; PinnedDrop for Dispatcher&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Service&lt;Request = S::Item, Response = ()&gt; + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Service&gt; PinnedDrop for TimeoutServiceResponse&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()