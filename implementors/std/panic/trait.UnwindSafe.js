(function() {var implementors = {};
implementors["actix"] = [{"text":"impl UnwindSafe for ActorState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Running","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpawnHandle","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for Context&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for ContextParts&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; !UnwindSafe for ContextFut&lt;A, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; UnwindSafe for MessageResult&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Message&gt;::Result: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; !UnwindSafe for Response&lt;I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, I, E&gt; !UnwindSafe for ActorResponse&lt;A, I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for Supervisor&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for AddressSender&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for AddressReceiver&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for Envelope&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, M&gt; !UnwindSafe for Request&lt;A, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !UnwindSafe for RecipientRequest&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MailboxError","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for Addr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for WeakAddr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !UnwindSafe for Recipient&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for Mailbox&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Mocker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Resolve","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectAddr","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ResolverError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Resolver","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TcpConnector","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for Finish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; UnwindSafe for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; UnwindSafe for Ready&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E, A&gt; UnwindSafe for FutureResult&lt;T, E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for StreamFinish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; UnwindSafe for StreamFold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoActorFuture&gt;::Future: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; UnwindSafe for StreamMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; UnwindSafe for StreamThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoActorFuture&gt;::Future: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for StreamTimeout&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; UnwindSafe for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoActorFuture&gt;::Future: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for Timeout&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; UnwindSafe for FutureWrap&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, A&gt; UnwindSafe for StreamWrap&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !UnwindSafe for Writer&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; !UnwindSafe for FramedWrite&lt;T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; !UnwindSafe for SinkWrite&lt;I, S&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Registry","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SystemRegistry","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for SyncArbiter&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for SyncContext&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Condition&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for TimerFunc&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !UnwindSafe for IntervalFunc&lt;A&gt;","synthetic":true,"types":[]}];
implementors["actix_codec"] = [{"text":"impl UnwindSafe for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_connect"] = [{"text":"impl&lt;T&gt; UnwindSafe for Connect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Connection&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TcpConnectorFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TcpConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ResolverFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Resolver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ConnectServiceFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ConnectService&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for TcpConnectService&lt;T&gt;","synthetic":true,"types":[]}];
implementors["actix_http"] = [{"text":"impl UnwindSafe for BodySize","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for ResponseBody&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Body","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; UnwindSafe for BodyStream&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for SizedStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !UnwindSafe for HttpServiceBuilder&lt;T, S, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Connector&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidUrl","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SendRequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FreezeRequestError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ServiceConfig","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcceptCharset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Accept","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Allow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheControl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheDirective","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispositionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DispositionParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentDisposition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Date","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ETag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expires","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfMatch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LastModified","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentEncoding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtendedValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConnectionType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RequestHead","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RequestHeadType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ResponseHead","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !UnwindSafe for Payload&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !UnwindSafe for Request&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !UnwindSafe for Response&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ResponseBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !UnwindSafe for HttpService&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CookieBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SameSite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CookieJar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Delta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; UnwindSafe for Cookie&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'c&gt; UnwindSafe for EncodedCookie&lt;'a, 'c&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PayloadError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContentTypeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for InternalError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ClientCodec","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ClientPayloadCodec","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Codec","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !UnwindSafe for Dispatcher&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpectHandler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !UnwindSafe for H1Service&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !UnwindSafe for H1ServiceHandler&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for OneRequest&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for UpgradeHandler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !UnwindSafe for SendResponse&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !UnwindSafe for Dispatcher&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !UnwindSafe for H2Service&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TestRequest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TestBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Codec","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !UnwindSafe for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CloseCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CloseReason","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ProtocolError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Protocol","synthetic":true,"types":[]}];
implementors["actix_rt"] = [{"text":"impl !UnwindSafe for Arbiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SystemRunner","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for System","synthetic":true,"types":[]}];
implementors["actix_service"] = [{"text":"impl&lt;T, F, R, In, Out, Err&gt; UnwindSafe for Apply&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;In: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Out: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R, In, Out, Err&gt; UnwindSafe for ApplyServiceFactory&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;In: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Out: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, Req, Res, Err, InitErr&gt; !UnwindSafe for BoxServiceFactory&lt;C, Req, Res, Err, InitErr&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err&gt; UnwindSafe for FnService&lt;F, Fut, Req, Res, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err, Cfg&gt; UnwindSafe for FnServiceFactory&lt;F, Fut, Req, Res, Err, Cfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cfg: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Cfg, Srv, Err&gt; UnwindSafe for FnServiceConfig&lt;F, Fut, Cfg, Srv, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cfg: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Err: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Srv: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, C, S, R, E&gt; UnwindSafe for FnServiceNoConfig&lt;F, C, S, R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Response&gt; UnwindSafe for Map&lt;A, F, Response&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Response: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Res&gt; UnwindSafe for MapServiceFactory&lt;A, F, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, C&gt; UnwindSafe for MapConfig&lt;A, F, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; UnwindSafe for UnitConfig&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; UnwindSafe for MapErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; UnwindSafe for MapErrServiceFactory&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; UnwindSafe for MapInitErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pipeline&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for PipelineFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for ApplyTransform&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, F, E&gt; UnwindSafe for TransformMapInitErr&lt;T, S, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_threadpool"] = [{"text":"impl&lt;E&gt; UnwindSafe for BlockingError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; !UnwindSafe for CpuFuture&lt;I, E&gt;","synthetic":true,"types":[]}];
implementors["actix_utils"] = [{"text":"impl !UnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Waiter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Counter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CounterGuard","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for EitherService&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, U&gt; UnwindSafe for DispatcherError&lt;E, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Decoder&gt;::Error: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Error: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T, U&gt; !UnwindSafe for Dispatcher&lt;S, T, U&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InFlight","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for InFlightService&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; !UnwindSafe for KeepAlive&lt;R, E, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; !UnwindSafe for KeepAliveService&lt;R, E, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Pool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for PSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for PReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for InOrderError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for InOrder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for InOrderService&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !UnwindSafe for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalWaker","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LowResTime","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LowResTimeService","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SystemTime","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SystemTimeService","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for Timeout&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for TimeoutError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for TimeoutService&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for TimeoutServiceResponse&lt;T&gt;","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; UnwindSafe for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; UnwindSafe for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; UnwindSafe for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; UnwindSafe for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; UnwindSafe for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["atk"] = [{"text":"impl UnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Component","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Document","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EditableText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GObjectAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hyperlink","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HyperlinkClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HyperlinkImpl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hypertext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Misc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MiscClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoOpObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoOpObjectClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Object","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectFactory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Plug","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlugClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Registry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegistryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Relation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelationSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelationSetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Selection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateSetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamableContent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableCell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Text","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Util","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UtilClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoordType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelationType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextBoundary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextClipType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextGranularity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HyperlinkStateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextRectangle","synthetic":true,"types":[]}];
implementors["atk_sys"] = [{"text":"impl UnwindSafe for AtkActionIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkComponentIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkDocumentIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkEditableTextIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkGObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkHyperlinkClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkHyperlinkImplIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkHypertextIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkImageIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _AtkImplementor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkKeyEventStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkMiscClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkNoOpObjectClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkNoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkObjectClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkPlugClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkPropertyValues","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRegistryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRelationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRelationSetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkSelectionIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkSocketClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkStateSetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkStreamableContentIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTableCellIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTextIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTextRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTextRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkUtilClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkValueIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkWindowIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkGObjectAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkHyperlink","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkMisc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkNoOpObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkNoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkObjectFactory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkPlug","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRegistry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRelation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkRelationSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkSocket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkStateSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkUtil","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkComponent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkDocument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkEditableText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkHyperlinkImpl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkHypertext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkImplementorIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkStreamableContent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkTableCell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AtkWindow","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !UnwindSafe for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintFmt","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !UnwindSafe for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BacktraceSymbol","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharacterSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl UnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; UnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UninitSlice","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BytesMut","synthetic":true,"types":[]}];
implementors["cairo"] = [{"text":"impl&lt;T&gt; UnwindSafe for UserDataKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RectangleList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Antialias","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FillRule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LineCap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LineJoin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Operator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathDataType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Content","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontSlant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextClusterFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubpixelOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HintStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HintMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegionOverlap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PdfOutline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MeshCorner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FtSynthesize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IoError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaledFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageSurface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ImageSurfaceData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PathSegments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SolidPattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadialGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfacePattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mesh","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecordingSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RectangleInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Region","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappedImageSurface","synthetic":true,"types":[]}];
implementors["cairo_sys"] = [{"text":"impl UnwindSafe for cairo_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_surface_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_device_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_pattern_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_rectangle_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_rectangle_int_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_rectangle_list_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_path_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_path_data_header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_path_data","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_glyph_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_region_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_font_face_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_scaled_font_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_font_options_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontExtents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glyph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextCluster","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextExtents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_user_data_key_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for cairo_bool_t","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl UnwindSafe for FixedOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NaiveDate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsoWeek","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; UnwindSafe for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; UnwindSafe for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pad","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Numeric","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalNumeric","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoundingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weekday","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Month","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseMonthError","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; UnwindSafe for BoxAllocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VecAllocation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VecEntry&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrySelectError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryReadyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; UnwindSafe for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Backoff","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Parker","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !UnwindSafe for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; !UnwindSafe for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; UnwindSafe for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; UnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl UnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !UnwindSafe for Context&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SyncFailure&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; !UnwindSafe for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl UnwindSafe for FnvHasher","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Serializer&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl !UnwindSafe for LocalPool","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalSpawner","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Enter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl UnwindSafe for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; UnwindSafe for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Remote&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for WeakShared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; UnwindSafe for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; UnwindSafe for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnwindSafe for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; UnwindSafe for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; UnwindSafe for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; UnwindSafe for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; UnwindSafe for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; UnwindSafe for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; UnwindSafe for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; UnwindSafe for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnwindSafe for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; UnwindSafe for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; UnwindSafe for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; UnwindSafe for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for Abortable&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AbortRegistration","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for AbortHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; UnwindSafe for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, FromA, FromB&gt; UnwindSafe for Unzip&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Cycle&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnwindSafe for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for Next&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for Peek&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; UnwindSafe for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; UnwindSafe for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !UnwindSafe for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; !UnwindSafe for SplitSink&lt;S, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; !UnwindSafe for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; UnwindSafe for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; UnwindSafe for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; !UnwindSafe for TryNext&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; UnwindSafe for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnwindSafe for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnwindSafe for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnwindSafe for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for TryBuffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !UnwindSafe for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; UnwindSafe for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; UnwindSafe for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for RepeatWith&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; UnwindSafe for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; UnwindSafe for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnwindSafe for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !UnwindSafe for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !UnwindSafe for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !UnwindSafe for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Close&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; UnwindSafe for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Feed&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Flush&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; UnwindSafe for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; UnwindSafe for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, Item&gt; !UnwindSafe for Send&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si, St&gt; !UnwindSafe for SendAll&lt;'a, Si, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R&gt; UnwindSafe for Unfold&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; UnwindSafe for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; UnwindSafe for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; UnwindSafe for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Close&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for Copy&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for CopyBuf&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for FillBuf&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Flush&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; UnwindSafe for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for Read&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadVectored&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadExact&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadLine&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadToEnd&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadToString&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReadUntil&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; !UnwindSafe for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for Write&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for WriteVectored&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !UnwindSafe for WriteAll&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, U&gt; !UnwindSafe for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl UnwindSafe for FxHasher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FxHasher64","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FxHasher32","synthetic":true,"types":[]}];
implementors["gdk"] = [{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceManagerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayManagerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DragContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DragContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameClock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameClockClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Keymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeymapClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScreenClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisualClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventSequence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameTimings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AxisUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ByteOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CrossingMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CursorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DragProtocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullscreenMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrabOwnership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GrabStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifierIntent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotifyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnerChange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropertyState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisibilityState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisualType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowEdge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowTypeHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DragAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameClockPhase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifierType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WMDecoration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WMFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Atom","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ChangeData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventConfigure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventCrossing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventDND","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventExpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventFocus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventGrabBroken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventMotion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventOwnerChange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventProximity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventScroll","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventSetting","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventTouch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventVisibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventWindowState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Geometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeymapKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RgbaParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RGBA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowAttr","synthetic":true,"types":[]}];
implementors["gdk_pixbuf"] = [{"text":"impl UnwindSafe for Pixbuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufLoader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colorspace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterpType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufAlphaMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufRotation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PixbufAnimation","synthetic":true,"types":[]}];
implementors["gdk_pixbuf_sys"] = [{"text":"impl UnwindSafe for GdkPixbufFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkPixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbufAnimation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbufLoader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPixbufSimpleAnimIter","synthetic":true,"types":[]}];
implementors["gdk_sys"] = [{"text":"impl UnwindSafe for GdkEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkAtom","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkDevicePadInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkDrawingContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventAny","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventConfigure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventCrossing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventDND","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventExpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventFocus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventGrabBroken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventMotion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventOwnerChange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventPadAxis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventPadButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventPadGroupMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventProximity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventScroll","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventSequence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventSetting","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventTouch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventTouchpadPinch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventTouchpadSwipe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventVisibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkEventWindowState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkFrameClockClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkFrameClockPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkFrameTimings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkKeymapKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkRGBA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkTimeCoord","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkWindowAttr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GdkWindowRedirect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkAppLaunchContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkCursor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDevice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDeviceManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDeviceTool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDisplayManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDragContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDrawingContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkFrameClock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkGLContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkKeymap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkScreen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkSeat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkVisual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GdkDevicePad","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]}];
implementors["gio"] = [{"text":"impl UnwindSafe for OwnerId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegistrationId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WatcherId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ActionGroupExportId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuModelExportId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalSubscriptionId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileAttributematcherIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for InetAddressBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for IOStreamAsyncReadWrite&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for InputStreamRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for InputStreamAsyncBufRead&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for OutputStreamWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for InputStreamAsyncRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for OutputStreamAsyncWrite&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UnixSocketAddressPath&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ActionMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppInfoMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppInfoMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Application","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BufferedOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BytesIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BytesIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cancellable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CancellableClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharsetConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharsetConverterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharsetConverterBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Converter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Credentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CredentialsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusAuthObserver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusAuthObserverClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMenuModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMenuModelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMessageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMethodInvocationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusProxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusProxyClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusServer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusServerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DesktopAppInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Drive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Emblem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmblemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmblemedIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmblemedIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for File","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileEnumerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileIOStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileIOStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileInfoClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilenameCompleter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Icon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetAddressMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetSocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoadableIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Menu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuAttributeIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuLinkIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuModelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountOperationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NetworkServiceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Notification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotificationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Permission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PermissionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollableInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollableOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropertyAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropertyActionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Proxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemoteActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Resolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolverClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Seekable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Settings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsBackendClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimpleAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimpleActionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimpleActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimplePermission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimplePermissionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketClientClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketConnectable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketListenerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketServiceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subprocess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubprocessClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubprocessLauncher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubprocessLauncherClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThemedIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThemedIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadedSocketService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsCertificate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsCertificateClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsClientConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsDatabase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsFileDatabase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsInteraction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsInteractionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsPassword","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsPasswordClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsServerConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixFDList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixFDListClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixSocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vfs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VfsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Volume","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VolumeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZlibCompressor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZlibDecompressor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusArgInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMethodInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusNodeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusSignalInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Resource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsSchema","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SrvTarget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BusType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CredentialsType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMessageByteOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMessageHeaderField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMessageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataStreamByteOrder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataStreamNewlineType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DriveStartStopType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmblemOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileAttributeStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileAttributeType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileMonitorEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOErrorEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountOperationResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotificationPriority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PasswordSave","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolverRecordType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketClientEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketProtocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsAuthenticationMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsCertificateRequestFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsDatabaseLookupFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsInteractionResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsRehandshakeMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixSocketAddressType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZlibCompressorFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppInfoCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AskPasswordFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BusNameOwnerFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BusNameWatcherFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConverterFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusCallFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusCapabilityFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusConnectionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusInterfaceSkeletonFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusMessageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusProxyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusSendMessageFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusServerFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DBusSignalFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DriveStartFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileCopyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileCreateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileMeasureFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileMonitorFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileQueryInfoFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountMountFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountUnmountFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceLookupFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsBindFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubprocessFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsCertificateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsDatabaseVerifyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TlsPasswordFlags","synthetic":true,"types":[]},{"text":"impl&lt;F, O, T, E&gt; !UnwindSafe for GioFuture&lt;F, O, T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !UnwindSafe for GioFutureResult&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArgumentList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteOutputStream","synthetic":true,"types":[]}];
implementors["gio_sys"] = [{"text":"impl UnwindSafe for GActionEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GActionGroupInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GActionInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GActionMapInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAppInfoIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GAppLaunchContextPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GApplicationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GApplicationCommandLinePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GApplicationPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAsyncInitableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAsyncResultIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GBufferedInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GBufferedOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCancellableClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GCancellablePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCharsetConverterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GConverterIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GConverterInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GConverterOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GCredentialsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusAnnotationInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusArgInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusErrorEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusInterfaceIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDBusInterfaceSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusInterfaceVTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusMethodInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusNodeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectManagerClientClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDBusObjectManagerClientPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectManagerIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectManagerServerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDBusObjectManagerServerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectProxyClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDBusObjectProxyPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectSkeletonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDBusObjectSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusProxyClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDBusProxyPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusSignalInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusSubtreeVTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDataInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDataInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDataOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDatagramBasedInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDesktopAppInfoLookupIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDriveIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDtlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDtlsConnectionInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDtlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GEmblemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GEmblemedIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GEmblemedIconPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileAttributeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileAttributeInfoList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileDescriptorBasedIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileIOStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileInfoClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileMonitorPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GFileOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOExtension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOExtensionPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOModuleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOModuleScope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOSchedulerJob","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOStreamAdapter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIOStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIconIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInetAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GInetAddressMaskPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GInetAddressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GInetSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInitableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInputMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInputVector","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GListModelInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GListStoreClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLoadableIconIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GMemoryInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemoryMonitorInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GMemoryOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GMenuAttributeIterPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GMenuLinkIterPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuModelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GMenuModelPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMountIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMountOperationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNativeSocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GNativeSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNativeVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNetworkAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GNetworkAddressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNetworkMonitorInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNetworkServiceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GNetworkServicePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOutputMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOutputVector","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPermissionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GPermissionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPollableInputStreamInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPollableOutputStreamInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GProxyAddressEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GProxyAddressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyResolverInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GRemoteActionGroupInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GResolverClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GResolverPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSeekableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettingsBackendClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSettingsBackendPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettingsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSettingsPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettingsSchema","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSimpleActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSimpleAsyncResultClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleProxyResolverClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSimpleProxyResolverPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketClientClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSocketClientPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketConnectableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSocketConnectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketControlMessageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSocketControlMessagePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketListenerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSocketListenerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSocketPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketServiceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSrvTarget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GStaticResource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTaskClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTcpConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTcpConnectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTcpWrapperConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTcpWrapperConnectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GThemedIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GThreadedSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsBackendInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsCertificateClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTlsCertificatePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTlsConnectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTlsDatabasePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsFileDatabaseInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsInteractionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTlsInteractionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsPasswordClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTlsPasswordPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixConnectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixConnectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixCredentialsMessageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixCredentialsMessagePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixFDListClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixFDListPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixFDMessageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixFDMessagePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixMountEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixMountMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixMountPoint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GUnixSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVfsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVolumeIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAppInfoMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAppLaunchContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GApplication","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBufferedInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBufferedOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBytesIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCancellable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCharsetConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GConverterInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GConverterOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCredentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusAuthObserver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusMenuModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectManagerClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectManagerServer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectProxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectSkeleton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusProxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusServer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDataInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDataOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDesktopAppInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GEmblem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GEmblemedIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileEnumerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileIOStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFilenameCompleter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFilterInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFilterOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIOModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIOStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInetAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInetAddressMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInetSocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GListStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemoryInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemoryOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuAttributeIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuLinkIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMenuModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMountOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNativeSocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNativeVolumeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNetworkAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNetworkService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNotification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPermission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPropertyAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyAddressEnumerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSettingsBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleAsyncResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleIOStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimplePermission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSimpleProxyResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketControlMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSubprocess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSubprocessLauncher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTcpConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTcpWrapperConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTestDBus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GThemedIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GThreadedSocketService","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsCertificate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsDatabase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsInteraction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsPassword","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixCredentialsMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixFDList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixFDMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixMountMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GUnixSocketAddress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVfs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVolumeMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GZlibCompressor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GZlibDecompressor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GActionMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAppInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAsyncInitable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GAsyncResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDBusObjectManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDatagramBased","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDesktopAppInfoLookup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDrive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDtlsClientConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDtlsConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDtlsServerConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFileDescriptorBased","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInitable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GListModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLoadableIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemoryMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNetworkMonitor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPollableInputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPollableOutputStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GProxyResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GRemoteActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSeekable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSocketConnectable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsBackend","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsClientConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsFileDatabase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTlsServerConnection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVolume","synthetic":true,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T, MM&gt; UnwindSafe for Boxed&lt;T, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, MM&gt; UnwindSafe for Shared&lt;T, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoolError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ClassRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Object","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitiallyUnowned","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for WeakRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendWeakRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Checksum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DateTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MainContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MainLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeZone","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChecksumType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DateMonth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DateWeekday","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyFileError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OptionArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeekType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileTest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormatSizeFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IOCondition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyFileFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogLevelFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OptionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpawnFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindingFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParamFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ByteArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Char","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UChar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for String","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Closure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UserDirectory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnumClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnumValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlagsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlagsValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FlagsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalHandlerId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inhibit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Priority","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; UnwindSafe for Stash&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtr&lt;'a, P&gt;&gt;::Storage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; UnwindSafe for StashMut&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtrMut&lt;'a, P&gt;&gt;::Storage: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Borrowed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for List","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HashTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Array","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PtrArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueArray","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TypedValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VariantDict","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VariantType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VariantTy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Date","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParamSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Quark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogHandlerId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogLevels","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendUniqueCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorrowError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for InstanceStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibType: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ClassStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibClassType: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for InitializingType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalInvocationHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalClassHandlerToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Property&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Boxed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; !UnwindSafe for SourceFuture&lt;F, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; !UnwindSafe for SourceStream&lt;F, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadPool","synthetic":true,"types":[]}];
implementors["glib_sys"] = [{"text":"impl UnwindSafe for GPollFD","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDoubleIEEE754","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFloatIEEE754","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTokenValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantBuilder_u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantDict_u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GAsyncQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GBookmarkFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GByteArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBytes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GChecksum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCond","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDateTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDebugKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GDir","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GDoubleIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFloatIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GHashTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GHashTableIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GHmac","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GHook","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GHookList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GIConv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIOChannel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GIOFuncs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GKeyFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GLogField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMainContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMainLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMappedFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMarkupParseContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMarkupParser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMatchInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GMemVTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOnce","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GOptionContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOptionEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GOptionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GPatternSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPtrArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GRWLock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GRand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GRecMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GRegex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GScanner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GScannerConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSequence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSequenceIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSourceCallbackFuncs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSourceFuncs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GSourcePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GStatBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GStringChunk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTestCase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTestConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTestLogBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTestLogMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTestSuite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GThread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GThreadPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTimeVal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTimeZone","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTimer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTrashStack","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantBuilder_u_s","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantDict","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantDict_u_s","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GVariantType","synthetic":true,"types":[]}];
implementors["gobject_sys"] = [{"text":"impl UnwindSafe for GTypeCValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GValue_data","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GWeakRef_priv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GCClosure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GClosure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GClosureNotifyData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GEnumClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GEnumValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFlagsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GFlagsValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInterfaceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GObjectClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GObjectConstructParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GParamSpecPool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecTypeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParameter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSignalInvocationHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GSignalQuery","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeFundamentalInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeInstance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeModuleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypePluginClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeQuery","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeValueTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GValueArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GWeakRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GBinding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GInitiallyUnowned","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecBoolean","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecBoxed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecChar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecDouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecFloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecGType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecInt64","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecLong","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecOverride","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecPointer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecUChar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecUInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecUInt64","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecULong","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecUnichar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecValueArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GParamSpecVariant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypeModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GTypePlugin","synthetic":true,"types":[]}];
implementors["gtk"] = [{"text":"impl UnwindSafe for AboutDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AboutDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AboutDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelLabelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelLabelBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ActionBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ActionBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ActionBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Actionable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Adjustment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdjustmentClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdjustmentBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Application","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationWindowBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectFrameClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AspectFrameBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Assistant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssistantClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssistantBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Buildable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuilderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonBoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Calendar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CalendarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CalendarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellAreaClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellAreaBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellAreaBoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellAreaContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellAreaContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellEditable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRenderer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererAccel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererAccelBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererCombo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererComboClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererComboBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererPixbufBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererProgress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererProgressBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererSpin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererSpinBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererSpinner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererSpinnerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererTextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererTextBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererToggle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererToggleBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellViewBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClipboardClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComboBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComboBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComboBoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComboBoxText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ComboBoxTextBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Container","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContainerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CssProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CssProviderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawingArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawingAreaClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DrawingAreaBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Editable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryCompletion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryCompletionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryCompletionBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventBoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventControllerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expander","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpanderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpanderBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileFilterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowBoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowBoxChild","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowBoxChildBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gesture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureDrag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureDragClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureDragBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureLongPress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureLongPressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureLongPressBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureMultiPress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureMultiPressBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GesturePan","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GesturePanClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GesturePanBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureRotate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureRotateClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureRotateBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureSingle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureSingleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureSwipe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureSwipeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureSwipeBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureZoom","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureZoomClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GestureZoomBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Grid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GridClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GridBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMContextSimple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMContextSimpleBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMMulticontext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMMulticontextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMMulticontextBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconInfoClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconTheme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconThemeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconViewBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InfoBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InfoBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InfoBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Invisible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvisibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvisibleBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LabelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LabelBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListBoxBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListBoxRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListBoxRowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListBoxRowBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListStoreClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LockButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LockButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LockButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Menu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuItemBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuShellClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Misc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MiscClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountOperationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MountOperationBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Notebook","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotebookClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotebookBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OffscreenWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OffscreenWindowBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Orientable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Overlay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OverlayClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OverlayBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageSetup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageSetupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Paned","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PanedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PanedBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlacesSidebar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlacesSidebarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Plug","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlugClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlugBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Popover","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PopoverClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PopoverBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintOperationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintOperationBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintOperationPreview","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintSettingsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgressBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgressBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProgressBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RadioToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RangeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserMenu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserMenuBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentFilterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentManagerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentManagerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Revealer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RevealerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RevealerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaleBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaleButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaleButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScaleButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scrollable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scrollbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollbarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrolledWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrolledWindowBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SearchBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SearchBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SearchBarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SearchEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SearchEntryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SearchEntryBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Separator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorToolItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeparatorToolItemBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Settings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SettingsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SizeGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SizeGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SizeGroupBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Spinner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinnerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinnerBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stack","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackSwitcher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackSwitcherClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackSwitcherBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statusbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatusbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatusbarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StyleContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StyleContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StyleContextBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StyleProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StylePropertiesClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StyleProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Switch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwitchClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwitchBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextBufferClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextBufferBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextChildAnchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextMark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextMarkClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextMarkBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextTag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextTagClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextTagBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextTagTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextTagTableClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextViewBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToggleButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToggleButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToggleButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToggleToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToggleToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolItemBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolItemGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolItemGroupBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolPalette","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolPaletteClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolPaletteBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Toolbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolbarBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tooltip","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TooltipClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeDragDest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeDragSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeModelFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeModelSort","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeModelSortClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeSelectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeSortable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeStoreClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewColumn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewColumnBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ViewportBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VolumeButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VolumeButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VolumeButtonBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Widget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CssSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PaperSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectionData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeRowReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WidgetPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Align","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArrowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssistantPageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaselinePosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BorderStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuilderError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonBoxStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ButtonsType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererAccelMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CornerType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CssProviderError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CssSectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeleteType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DirectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DragResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryIconPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventSequenceState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserConfirmation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileChooserError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMPreeditStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMStatusStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconThemeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconViewDropPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputPurpose","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Justification","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelBarMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for License","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MenuDirectionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MovementStep","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotebookTab","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NumberUpLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Orientation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PackDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PackType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageOrientation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PanDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolicyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PositionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintDuplex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintOperationAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintOperationResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintPages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintQuality","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrintStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropagationPhase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentChooserError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentManagerError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentSortType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReliefStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResizeMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RevealerTransitionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollStep","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrollablePolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectionMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SensitivityType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShadowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SizeGroupMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SizeRequestMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SortType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinButtonUpdatePolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StackTransitionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextViewLayer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextWindowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolbarStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewColumnSizing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewDropPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeViewGridLines","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WidgetHelpType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AccelFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ApplicationInhibitFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CalendarDisplayOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CellRendererState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DestDefaults","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DialogFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileFilterFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IconLookupFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InputHints","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JunctionSides","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlacesOpenFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentFilterFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StateFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextSearchFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToolPaletteDragTargets","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TreeModelFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Border","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntryBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecentData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Requisition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResponseType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SortColumn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TickCallbackId","synthetic":true,"types":[]}];
implementors["gtk_sys"] = [{"text":"impl UnwindSafe for GtkBindingArg_d","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextAppearance_u1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextAttributes_u1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAboutDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAboutDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelGroupEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAccelGroupPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelLabelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAccelLabelPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAccelMapClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkActionBarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkActionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionableInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActivatableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAdjustmentClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAdjustmentPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAlignmentClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAlignmentPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAppChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAppChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAppChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkApplicationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkApplicationPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkApplicationWindowPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkArrowAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkArrowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkArrowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkArrowPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAspectFrameClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAspectFramePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAssistantClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkAssistantPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBinClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkBinPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBindingArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBindingEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBindingSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBindingSignal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBooleanCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkBooleanCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBorder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkBoxPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBuildableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBuilderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkBuilderPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkButtonBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkButtonBoxPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCalendarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCalendarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAccessibleParentIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellAreaBoxPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAreaClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAreaContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellAreaContextPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellAreaPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellEditableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellLayoutIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererAccelPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererClassPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererComboClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererComboPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererPixbufPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererProgressPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererSpinPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererTextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererTextPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellRendererTogglePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCellViewPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCheckButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCheckMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCheckMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCheckMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkColorButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkColorChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorChooserInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkColorChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorSelectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkColorSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkColorSelectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkComboBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkComboBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkComboBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkComboBoxPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkComboBoxTextPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkContainerAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkContainerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkContainerCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkContainerCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkContainerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkContainerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCssProviderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkCssProviderPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCssSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkDrawingAreaClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEditableInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEntryAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryBufferClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEntryBufferPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryCompletionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEntryCompletionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEntryPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEventBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEventBoxPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEventControllerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEventControllerKeyClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEventControllerMotionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkEventControllerScrollClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkExpanderAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkExpanderAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkExpanderClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkExpanderPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFileChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFileChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserNativeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFileChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileFilterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFixedChild","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFixedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFixedPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFlowBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxChildAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFontButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFontChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontChooserIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFontChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontSelectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFontSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFontSelectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFrameAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFrameAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFrameClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkFramePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGLAreaClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureDragClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureLongPressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGesturePanClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureRotateClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureSingleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureStylusClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureSwipeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGestureZoomClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGradient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGridClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkGridPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHButtonBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHPanedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHSVClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkHSVPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHScaleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHScrollbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHSeparatorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHandleBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkHandleBoxPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHeaderBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkHeaderBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHeaderBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkHeaderBarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMContextInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIMContextSimplePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMMulticontextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIMMulticontextPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconFactoryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIconFactoryPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIconInfoClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconThemeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIconThemePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIconViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkIconViewPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkImageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkImageCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkImageMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkImagePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkInfoBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkInfoBarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkInvisibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkInvisiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLabelAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLabelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLabelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLabelPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLabelSelectionInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLayoutClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLayoutPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLevelBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLevelBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLevelBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLevelBarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLinkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLinkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLinkButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLinkButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkListBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxRowAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxRowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListStoreClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkListStorePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLockButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLockButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLockButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkLockButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuBarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuShellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuShellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuShellClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuShellPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMenuToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMessageDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMessageDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMiscClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMiscPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMountOperationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNativeDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNotebookAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkNotebookAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNotebookClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNotebookPageAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkNotebookPageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkNotebookPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNumerableIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkNumerableIconPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkOffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkOrientableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkOverlayClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkOverlayPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPadActionEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPadControllerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPageRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPanedAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPanedAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPanedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPanedPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPaperSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPlugClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPlugPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPopoverAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPopoverClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPopoverMenuClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPopoverPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPrintOperationClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPrintOperationPreviewIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkPrintOperationPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkProgressBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkProgressBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkProgressBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkProgressBarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioActionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioActionEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRadioActionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRadioButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRadioButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRadioMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRadioMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRangeAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRangeAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRangeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRangePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRcContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRcProperty","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRcStyleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentActionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRecentActionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRecentChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRecentChooserMenuPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRecentChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentFilterInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentManagerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRecentManagerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRendererCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkRendererCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRequestedSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRequisition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRevealerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkScaleAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkScaleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkScaleButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkScalePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrollableInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrollbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrolledWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkScrolledWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkScrolledWindowPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSearchBarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSearchEntryClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSelectionData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSeparatorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSeparatorPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSeparatorToolItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSettingsClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSettingsPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSettingsValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkShortcutLabelClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkShortcutsGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkShortcutsSectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkShortcutsShortcutClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkShortcutsWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSizeGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSizeGroupPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSocketClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSocketPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSpinButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSpinButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinnerAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSpinnerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinnerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackSidebarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkStackSidebarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackSwitcherClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStatusIconClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkStatusIconPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStatusbarAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkStatusbarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStatusbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkStatusbarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStockItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyleContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkStyleContextPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStylePropertiesClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkStylePropertiesPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyleProviderIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSwitchAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSwitchAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSwitchClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkSwitchPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSymbolicColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTableChild","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTableClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTablePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTableRowCol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTargetEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTargetList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTargetPair","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTearoffMenuItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTearoffMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextAppearance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextBTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextBufferClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextBufferPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextMarkClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextTagClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextTagPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextTagTableClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextTagTablePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTextViewPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkThemeEngine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkThemingEngineClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkThemingEnginePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleActionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleActionEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToggleActionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToggleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToggleButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToggleToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolItemClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToolItemGroupPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToolItemPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolPaletteClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToolPalettePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolShellIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToolbarPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToplevelAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkToplevelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeDragDestIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeDragSourceIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeModelFilterPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeModelIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeModelSortClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeModelSortPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeRowReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeSelectionClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeSelectionPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeSortableIface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeStoreClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeStorePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeViewClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeViewColumnPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkTreeViewPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkUIManagerClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkUIManagerPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVButtonBoxClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVPanedClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVScaleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVScrollbarClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVSeparatorClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkViewportClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkViewportPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVolumeButtonClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWidgetAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWidgetAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWidgetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWidgetClassPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWidgetPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWidgetPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWindowClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWindowGeometryInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWindowGroupClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWindowGroupPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _GtkWindowPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAboutDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccelMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAdjustment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAlignment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooserButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkApplication","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkApplicationWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkArrowAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAspectFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAssistant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBooleanCellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkButtonBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCalendar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAreaBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAreaContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRenderer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererAccel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererCombo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererProgress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererSpin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererSpinner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellRendererToggle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCheckButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCheckMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCheckMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkClipboard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorSelectionDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkComboBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkComboBoxAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkComboBoxText","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkContainer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkContainerAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkContainerCellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCssProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkDrawingArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryCompletion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEntryIconAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEventBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEventController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEventControllerKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEventControllerMotion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEventControllerScroll","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkExpander","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkExpanderAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserNative","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxChild","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFlowBoxChildAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontSelectionDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFrameAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGLArea","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGesture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureDrag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureLongPress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureMultiPress","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGesturePan","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureRotate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureSingle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureStylus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureSwipe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGestureZoom","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkGrid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHButtonBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHPaned","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHSV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHScale","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHScrollbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHSeparator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHandleBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHeaderBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkHeaderBarAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMContextSimple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIMMulticontext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconFactory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconTheme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkIconViewAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageCellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkImageMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkInfoBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkInvisible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLabelAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLevelBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLevelBarAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLinkButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLinkButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxRow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListBoxRowAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkListStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLockButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkLockButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuShellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMenuToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMessageDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMisc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkModelButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkMountOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNativeDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNotebook","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNotebookAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNotebookPageAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkNumerableIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkOffscreenWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkOverlay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPadController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPageSetup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPaned","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPanedAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPlacesSidebar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPlug","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPopover","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPopoverAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPopoverMenu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPrintContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPrintOperation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPrintSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkProgressBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkProgressBarAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRadioToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRangeAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRcStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserDialog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserMenu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooserWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRendererCellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRevealer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScale","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScaleButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrollbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrolledWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrolledWindowAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSearchBar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSearchEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSeparator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSeparatorToolItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSettings","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkShortcutLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkShortcutsGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkShortcutsSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkShortcutsShortcut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkShortcutsWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSizeGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSocket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSpinnerAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStack","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackSidebar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStackSwitcher","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStatusIcon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStatusbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStatusbarAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyleContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyleProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSwitch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkSwitchAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTearoffMenuItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextBuffer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextCellAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextChildAnchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextMark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextTag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextTagTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTextViewAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkThemingEngine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleButtonAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToggleToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolItemGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolPalette","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTooltip","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToplevelAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeModelFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeModelSort","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeSelection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeView","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeViewAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeViewColumn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkUIManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVButtonBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVPaned","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVScale","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVScrollbar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVSeparator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkViewport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkVolumeButton","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWidget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWidgetAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWindow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWindowAccessible","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkWindowGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActionable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkActivatable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkAppChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkBuildable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellAccessibleParent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellEditable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkCellLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkColorChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkEditable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFileChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkFontChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkOrientable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkPrintOperationPreview","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkRecentChooser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkScrollable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkStyleProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkToolShell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeDragDest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeDragSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeModel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtkTreeSortable","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for ReadySendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !UnwindSafe for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResponseFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PushPromise","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PushPromises","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !UnwindSafe for Handshake&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !UnwindSafe for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for SendResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for SendPushedResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for SendStream&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlowControl","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PingPong","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pong","synthetic":true,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; UnwindSafe for HeaderMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Keys&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Values&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for ValuesMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for GetAll&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for ValueIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for ValueIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for ValueDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ToStrError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Method","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Request&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Parts","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Response&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Parts","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatusCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Authority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scheme","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Uri","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidUri","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Extensions","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; !UnwindSafe for Request&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; !UnwindSafe for Response&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl UnwindSafe for Idna","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for OccupiedEntry&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for Entry&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for VacantEntry&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; UnwindSafe for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; UnwindSafe for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; UnwindSafe for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; UnwindSafe for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; UnwindSafe for SymmetricDifference&lt;'a, T, S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; UnwindSafe for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl UnwindSafe for IoVec","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, Pred&gt; UnwindSafe for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; UnwindSafe for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; UnwindSafe for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; !UnwindSafe for TakeWhileRef&lt;'a, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; UnwindSafe for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for Format&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; UnwindSafe for FormatWith&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for IntoChunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !UnwindSafe for Chunk&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !UnwindSafe for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; UnwindSafe for GroupBy&lt;K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; !UnwindSafe for Group&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; !UnwindSafe for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; UnwindSafe for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; UnwindSafe for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; !UnwindSafe for PeekingTakeWhile&lt;'a, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; !UnwindSafe for ProcessResults&lt;'a, I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !UnwindSafe for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; UnwindSafe for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !UnwindSafe for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; UnwindSafe for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; UnwindSafe for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; UnwindSafe for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; UnwindSafe for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl UnwindSafe for Buffer","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LanguageTag","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; UnwindSafe for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for Entry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; UnwindSafe for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !UnwindSafe for VacantEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]}];
implementors["lru_cache"] = [{"text":"impl&lt;K, V, S&gt; UnwindSafe for LruCache&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; UnwindSafe for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl UnwindSafe for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl UnwindSafe for PollOpt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ready","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SetReadiness","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixReady","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_uds"] = [{"text":"impl UnwindSafe for UnixDatagram","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixListener","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixStream","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl UnwindSafe for TcpBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UdpBuilder","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T, F&gt; UnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; UnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for OnceBox&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnceNonZeroUsize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnceBool","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;UnwindSafe&gt; UnwindSafe for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pango"] = [{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EngineLang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EngineLangClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EngineShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EngineShapeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Font","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontFaceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontFamilyClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontMapClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fontset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontsetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontsetSimple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RendererClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphItemIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TabArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alignment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BidiType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CoverageLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EllipsizeMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GravityHint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RenderPart","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stretch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TabAlign","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Underline","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FontMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Analysis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Language","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlyphGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Coverage","synthetic":true,"types":[]}];
implementors["pango_sys"] = [{"text":"impl UnwindSafe for PangoAnalysis","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrFloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrFontDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrFontFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrIterator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttrString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoAttribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoColor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _PangoContextClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineLangClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineScriptInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineShapeClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontDescription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontFaceClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontFamilyClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontMapClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontMetrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontsetClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _PangoFontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoGlyphGeometry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoGlyphInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoGlyphItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoGlyphItemIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoGlyphString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoGlyphVisAttr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoIncludedModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoLanguage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _PangoLayoutClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoLayoutIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoLayoutLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoLogAttr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _PangoMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _PangoMapEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoMatrix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoRectangle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoRendererClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for _PangoRendererPrivate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoScriptIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoTabArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoCoverage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineLang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoEngineShape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFont","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontFace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontFamily","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoFontsetSimple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoLayout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PangoRenderer","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl UnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnceState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawFairMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawThreadId","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl UnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequeueOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinWait","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl UnwindSafe for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpanRange","synthetic":true,"types":[]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; UnwindSafe for Context&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["quick_xml"] = [{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BytesStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BytesDecl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BytesEnd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BytesText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; UnwindSafe for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl UnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; UnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; UnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; UnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; UnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl UnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; UnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OsRng","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl UnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; UnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; UnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; UnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; UnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !UnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; !UnwindSafe for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; UnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl UnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WithComments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Alternation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Concat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LiteralKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassPerl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassAscii","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassBracketed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Assertion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssertionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaptureName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlagsItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Translator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaseFoldError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hir","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HirKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WordBoundary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utf8Range","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Utf8Sequences","synthetic":true,"types":[]}];
implementors["resolv_conf"] = [{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Network","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScopedIp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddrParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DomainIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lookup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Family","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; UnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; UnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; UnwindSafe for BytesDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; UnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; UnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; UnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; UnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; UnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; UnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; UnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; UnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Serializer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; UnwindSafe for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !UnwindSafe for Serializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !UnwindSafe for SeqSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !UnwindSafe for TupleSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !UnwindSafe for TupleStructSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !UnwindSafe for TupleVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !UnwindSafe for MapSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !UnwindSafe for StructSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !UnwindSafe for StructVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl UnwindSafe for SigId","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; UnwindSafe for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["socket2"] = [{"text":"impl UnwindSafe for SockAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Domain","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Protocol","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl UnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl UnwindSafe for As","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Await","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for For","synthetic":true,"types":[]},{"text":"impl UnwindSafe for If","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for In","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl UnwindSafe for While","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for And","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for At","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprAwait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RangeLimits","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemConst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemImpl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemMacro2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemMod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemStatic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemTrait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ItemUse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UsePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseRename","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseGlob","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UseGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemConst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemConst","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FnArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Receiver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for File","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Variadic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatBox","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatIdent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatLit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatMacro","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatOr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatRest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatSlice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatWild","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldPat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; UnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; !UnwindSafe for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe + UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; UnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl UnwindSafe for AddBounds","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BindStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Structure&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;'a, T&gt; !UnwindSafe for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for CachedIntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send + UnwindSafe&gt; UnwindSafe for CachedThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send + UnwindSafe&gt; UnwindSafe for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["threadpool"] = [{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ThreadPool","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl UnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timespec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreciseTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SteadyTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl&lt;E&gt; !UnwindSafe for PollEvented&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; !UnwindSafe for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RW&gt; UnwindSafe for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; UnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W&gt; !UnwindSafe for Copy&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DuplexStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, B&gt; UnwindSafe for StreamReader&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for ReaderStream&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UdpSocket","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SendHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RecvHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for RecvHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SendHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedSendHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedRecvHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnixStream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UCred","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JoinError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for JoinHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryCurrentError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for StreamMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Barrier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClosedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for OwnedMutexGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryLockError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Notify","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; UnwindSafe for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !UnwindSafe for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for DelayQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Delay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instant","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Timeout&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Throttle&lt;T&gt;","synthetic":true,"types":[]}];
implementors["tokio_util"] = [{"text":"impl UnwindSafe for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; UnwindSafe for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; UnwindSafe for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; UnwindSafe for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinesCodec","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LinesCodecError","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; UnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Datetime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; !UnwindSafe for WithDispatch&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Instrumented&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Entered&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EnteredSpan","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl !UnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Dispatch","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DefaultGuard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Current","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Interest","synthetic":true,"types":[]}];
implementors["tracing_futures"] = [{"text":"impl&lt;T&gt; !UnwindSafe for Instrumented&lt;T&gt;","synthetic":true,"types":[]}];
implementors["trust_dns_proto"] = [{"text":"impl UnwindSafe for SslErrorStack","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Unspecified","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProtoErrorKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ProtoError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Edns","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderCounts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NoopMessageFinalizer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Query","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResponseCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DNSClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Name","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DEFAULT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IN_ADDR_ARPA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IP6_ARPA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LOCALHOST","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IN_ADDR_ARPA_127","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IP6_ARPA_1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LOCAL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IN_ADDR_ARPA_169_254","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IP6_ARPA_FE_8","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IP6_ARPA_FE_9","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IP6_ARPA_FE_B","synthetic":true,"types":[]},{"text":"impl UnwindSafe for INVALID","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UserUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolverUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AuthUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegistryUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ZoneUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CAA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Property","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MX","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NAPTR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NULL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OPENPGPKEY","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OPT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EdnsCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EdnsOption","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SOA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SRV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SSHFP","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Algorithm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FingerprintType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TLSA","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CertUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Selector","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Matching","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TXT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecordType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Record","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecordSet","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; UnwindSafe for RrsetRecords&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for BinDecoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for BinEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EncodeMode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Restrict&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Verified&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for TcpClientStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for TcpClientConnect&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for TcpStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; UnwindSafe for UdpClientStream&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MF: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UdpResponse","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; UnwindSafe for UdpClientConnect&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MF: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !UnwindSafe for UdpStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; !UnwindSafe for DnsExchange&lt;S, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, S, R&gt; !UnwindSafe for DnsExchangeConnect&lt;F, S, R&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for StreamHandle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BasicDnsHandle","synthetic":true,"types":[]},{"text":"impl&lt;S, MF, D&nbsp;=&nbsp;Box&lt;dyn DnsStreamHandle + 'static, Global&gt;&gt; !UnwindSafe for DnsMultiplexer&lt;S, MF, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, S, MF&gt; !UnwindSafe for DnsMultiplexerConnect&lt;F, S, MF&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DnsMultiplexerSerialResponse","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DnsRequestOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DnsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DnsResponse","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; UnwindSafe for RetryDnsHandle&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerialMessage","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BufStreamHandle","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BufDnsStreamHandle","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for DnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for BufDnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for OneshotDnsRequest&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !UnwindSafe for OneshotDnsResponseReceiver&lt;F&gt;","synthetic":true,"types":[]}];
implementors["trust_dns_resolver"] = [{"text":"impl !UnwindSafe for AsyncResolver","synthetic":true,"types":[]},{"text":"impl&lt;F, G&nbsp;=&nbsp;F&gt; !UnwindSafe for Background&lt;F, G&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolverConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NameServerConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NameServerConfigGroup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LookupIpStrategy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolverOpts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResolveErrorKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ResolveError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hosts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LookupIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LookupRecordIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LookupIntoIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SrvLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for SrvLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SrvLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SrvLookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReverseLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for ReverseLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReverseLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ReverseLookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv4Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for Ipv4LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv4LookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Ipv4LookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for Ipv6LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ipv6LookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Ipv6LookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MxLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for MxLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MxLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MxLookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TxtLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for TxtLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TxtLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TxtLookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoaLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for SoaLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoaLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SoaLookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NsLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for NsLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NsLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NsLookupFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LookupIp","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for LookupIpIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LookupIpIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;C&nbsp;=&nbsp;LookupEither&lt;ConnectionHandle, StandardConnection&gt;&gt; !UnwindSafe for LookupIpFuture&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Resolver","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BidiClass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; UnwindSafe for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; UnwindSafe for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; UnwindSafe for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for Replacements&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; UnwindSafe for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["woab"] = [{"text":"impl UnwindSafe for BuilderFactory","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BuilderConnector","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !UnwindSafe for ActorBuilder&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !UnwindSafe for ActorBuilderContext&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T, I&gt; UnwindSafe for BuilderSingalConnector&lt;S, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; !UnwindSafe for SignalRouter&lt;S, I&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Remove","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()