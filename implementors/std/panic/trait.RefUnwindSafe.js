(function() {var implementors = {};
implementors["actix"] = [{"text":"impl RefUnwindSafe for ActorState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Running","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpawnHandle","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for Context&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for ContextParts&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; !RefUnwindSafe for ContextFut&lt;A, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; RefUnwindSafe for MessageResult&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Message&gt;::Result: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; !RefUnwindSafe for Response&lt;I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, I, E&gt; !RefUnwindSafe for ActorResponse&lt;A, I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for Supervisor&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for AddressSender&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for AddressReceiver&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for Envelope&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, M&gt; !RefUnwindSafe for Request&lt;A, M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !RefUnwindSafe for RecipientRequest&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MailboxError","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for Addr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for WeakAddr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !RefUnwindSafe for Recipient&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for Mailbox&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Mocker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Resolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectAddr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResolverError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Resolver","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TcpConnector","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for Finish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; RefUnwindSafe for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; RefUnwindSafe for Ready&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E, A&gt; RefUnwindSafe for FutureResult&lt;T, E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for StreamFinish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; RefUnwindSafe for StreamFold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoActorFuture&gt;::Future: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; RefUnwindSafe for StreamMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; RefUnwindSafe for StreamThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoActorFuture&gt;::Future: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for StreamTimeout&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; RefUnwindSafe for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoActorFuture&gt;::Future: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for Timeout&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; RefUnwindSafe for FutureWrap&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, A&gt; RefUnwindSafe for StreamWrap&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !RefUnwindSafe for Writer&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; !RefUnwindSafe for FramedWrite&lt;T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; !RefUnwindSafe for SinkWrite&lt;I, S&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Registry","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SystemRegistry","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for SyncArbiter&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for SyncContext&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Condition&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for TimerFunc&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for IntervalFunc&lt;A&gt;","synthetic":true,"types":[]}];
implementors["actix_codec"] = [{"text":"impl RefUnwindSafe for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_connect"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Connect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for Connection&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TcpConnectorFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TcpConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ResolverFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Resolver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ConnectServiceFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ConnectService&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for TcpConnectService&lt;T&gt;","synthetic":true,"types":[]}];
implementors["actix_http"] = [{"text":"impl RefUnwindSafe for BodySize","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ResponseBody&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Body","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; RefUnwindSafe for BodyStream&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for SizedStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !RefUnwindSafe for HttpServiceBuilder&lt;T, S, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for Connector&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidUrl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SendRequestError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FreezeRequestError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ServiceConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcceptCharset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Accept","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Allow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheDirective","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispositionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispositionParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentDisposition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Date","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expires","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LastModified","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentEncoding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtendedValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RequestHead","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RequestHeadType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResponseHead","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Message&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !RefUnwindSafe for Payload&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !RefUnwindSafe for Request&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !RefUnwindSafe for Response&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResponseBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !RefUnwindSafe for HttpService&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CookieBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SameSite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CookieJar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Delta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; RefUnwindSafe for Cookie&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'c&gt; RefUnwindSafe for EncodedCookie&lt;'a, 'c&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PayloadError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentTypeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for InternalError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientCodec","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientPayloadCodec","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Codec","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !RefUnwindSafe for Dispatcher&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpectHandler","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !RefUnwindSafe for H1Service&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !RefUnwindSafe for H1ServiceHandler&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for OneRequest&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for UpgradeHandler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !RefUnwindSafe for SendResponse&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !RefUnwindSafe for Dispatcher&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !RefUnwindSafe for H2Service&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Codec","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !RefUnwindSafe for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloseCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloseReason","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ProtocolError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]}];
implementors["actix_rt"] = [{"text":"impl !RefUnwindSafe for Arbiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SystemRunner","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for System","synthetic":true,"types":[]}];
implementors["actix_service"] = [{"text":"impl&lt;T, F, R, In, Out, Err&gt; RefUnwindSafe for Apply&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;In: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Out: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R, In, Out, Err&gt; RefUnwindSafe for ApplyServiceFactory&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;In: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Out: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, Req, Res, Err, InitErr&gt; !RefUnwindSafe for BoxServiceFactory&lt;C, Req, Res, Err, InitErr&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err&gt; RefUnwindSafe for FnService&lt;F, Fut, Req, Res, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err, Cfg&gt; RefUnwindSafe for FnServiceFactory&lt;F, Fut, Req, Res, Err, Cfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cfg: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Cfg, Srv, Err&gt; RefUnwindSafe for FnServiceConfig&lt;F, Fut, Cfg, Srv, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cfg: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Err: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Srv: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, C, S, R, E&gt; RefUnwindSafe for FnServiceNoConfig&lt;F, C, S, R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Response&gt; RefUnwindSafe for Map&lt;A, F, Response&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Response: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Res&gt; RefUnwindSafe for MapServiceFactory&lt;A, F, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, C&gt; RefUnwindSafe for MapConfig&lt;A, F, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; RefUnwindSafe for UnitConfig&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; RefUnwindSafe for MapErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; RefUnwindSafe for MapErrServiceFactory&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; RefUnwindSafe for MapInitErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pipeline&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for PipelineFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; !RefUnwindSafe for ApplyTransform&lt;T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, F, E&gt; RefUnwindSafe for TransformMapInitErr&lt;T, S, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_threadpool"] = [{"text":"impl&lt;E&gt; RefUnwindSafe for BlockingError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; !RefUnwindSafe for CpuFuture&lt;I, E&gt;","synthetic":true,"types":[]}];
implementors["actix_utils"] = [{"text":"impl !RefUnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Waiter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Counter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CounterGuard","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for EitherService&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, U&gt; RefUnwindSafe for DispatcherError&lt;E, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Decoder&gt;::Error: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Error: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T, U&gt; !RefUnwindSafe for Dispatcher&lt;S, T, U&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InFlight","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for InFlightService&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; !RefUnwindSafe for KeepAlive&lt;R, E, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; !RefUnwindSafe for KeepAliveService&lt;R, E, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Pool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for PSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for PReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for InOrderError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for InOrder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for InOrderService&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !RefUnwindSafe for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalWaker","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LowResTime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LowResTimeService","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SystemTime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SystemTimeService","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for Timeout&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for TimeoutError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for TimeoutService&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for TimeoutServiceResponse&lt;T&gt;","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; RefUnwindSafe for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; RefUnwindSafe for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; RefUnwindSafe for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; RefUnwindSafe for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; RefUnwindSafe for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Match","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["atk"] = [{"text":"impl RefUnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Component","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Document","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EditableText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GObjectAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hyperlink","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HyperlinkClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HyperlinkImpl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hypertext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Misc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MiscClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoOpObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoOpObjectClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Object","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectFactory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Plug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlugClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Registry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegistryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Relation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelationSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelationSetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Selection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateSetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamableContent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TableCell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Text","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Util","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UtilClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoordType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelationType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Role","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextBoundary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextClipType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextGranularity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValueType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HyperlinkStateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextRectangle","synthetic":true,"types":[]}];
implementors["atk_sys"] = [{"text":"impl RefUnwindSafe for AtkActionIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkComponentIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkDocumentIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkEditableTextIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkGObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkHyperlinkClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkHyperlinkImplIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkHypertextIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkImageIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _AtkImplementor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkKeyEventStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkMiscClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkNoOpObjectClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkNoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkObjectClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkPlugClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkPropertyValues","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRegistryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRelationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRelationSetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkSelectionIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkSocketClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkStateSetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkStreamableContentIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTableCellIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTextIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTextRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTextRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkUtilClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkValueIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkWindowIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkGObjectAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkHyperlink","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkMisc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkNoOpObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkNoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkObjectFactory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkPlug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRegistry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRelation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkRelationSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkSocket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkStateSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkUtil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkComponent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkDocument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkEditableText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkHyperlinkImpl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkHypertext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkImplementorIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkStreamableContent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkTableCell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AtkWindow","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintFmt","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !RefUnwindSafe for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceSymbol","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; RefUnwindSafe for EncoderWriter&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharacterSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl RefUnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; RefUnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UninitSlice","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BytesMut","synthetic":true,"types":[]}];
implementors["cairo"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for UserDataKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RectangleList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Antialias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FillRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LineCap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LineJoin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Operator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathDataType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Content","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Filter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatternType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontSlant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextClusterFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubpixelOrder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HintStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HintMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfaceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Format","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegionOverlap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PdfOutline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MeshCorner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FtSynthesize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IoError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaledFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageSurface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImageSurfaceData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PathSegments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SolidPattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinearGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadialGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfacePattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mesh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecordingSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RectangleInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Region","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Surface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappedImageSurface","synthetic":true,"types":[]}];
implementors["cairo_sys"] = [{"text":"impl RefUnwindSafe for cairo_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_surface_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_device_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_pattern_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_rectangle_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_rectangle_int_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_rectangle_list_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_path_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_path_data_header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_path_data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_glyph_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_region_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_font_face_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_scaled_font_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_font_options_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontExtents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Glyph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextCluster","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextExtents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_user_data_key_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cairo_bool_t","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl RefUnwindSafe for FixedOffset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveDate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsoWeek","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; RefUnwindSafe for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; RefUnwindSafe for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Numeric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalNumeric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoundingError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weekday","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Month","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseMonthError","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for BoxAllocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TrySelectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryReadyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Receiver&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Backoff","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parker","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; !RefUnwindSafe for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; !RefUnwindSafe for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; RefUnwindSafe for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; RefUnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl !RefUnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !RefUnwindSafe for Context&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SyncFailure&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; !RefUnwindSafe for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl RefUnwindSafe for FnvHasher","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Serializer&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl !RefUnwindSafe for LocalPool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalSpawner","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl RefUnwindSafe for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; RefUnwindSafe for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for Remote&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for WeakShared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; RefUnwindSafe for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; RefUnwindSafe for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; RefUnwindSafe for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; RefUnwindSafe for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; RefUnwindSafe for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; RefUnwindSafe for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; RefUnwindSafe for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; RefUnwindSafe for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; RefUnwindSafe for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; RefUnwindSafe for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; RefUnwindSafe for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; RefUnwindSafe for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; RefUnwindSafe for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; RefUnwindSafe for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; RefUnwindSafe for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; RefUnwindSafe for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for Abortable&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AbortRegistration","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AbortHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; RefUnwindSafe for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; RefUnwindSafe for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, FromA, FromB&gt; RefUnwindSafe for Unzip&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Cycle&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; RefUnwindSafe for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; RefUnwindSafe for Next&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; RefUnwindSafe for SelectNextSome&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; RefUnwindSafe for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; RefUnwindSafe for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; RefUnwindSafe for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; RefUnwindSafe for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !RefUnwindSafe for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; !RefUnwindSafe for SplitSink&lt;S, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; !RefUnwindSafe for ReuniteError&lt;T, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; RefUnwindSafe for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; RefUnwindSafe for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; RefUnwindSafe for TryNext&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; RefUnwindSafe for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; RefUnwindSafe for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; RefUnwindSafe for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; RefUnwindSafe for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for TryBuffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !RefUnwindSafe for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; RefUnwindSafe for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; RefUnwindSafe for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for RepeatWith&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; RefUnwindSafe for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; RefUnwindSafe for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; RefUnwindSafe for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !RefUnwindSafe for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !RefUnwindSafe for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !RefUnwindSafe for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Close&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; RefUnwindSafe for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Feed&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Flush&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; RefUnwindSafe for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; RefUnwindSafe for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; RefUnwindSafe for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; RefUnwindSafe for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R&gt; RefUnwindSafe for Unfold&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; RefUnwindSafe for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; RefUnwindSafe for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; RefUnwindSafe for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for Close&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; RefUnwindSafe for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; RefUnwindSafe for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for FillBuf&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for Flush&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; RefUnwindSafe for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for Read&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadVectored&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadExact&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadLine&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadToEnd&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadToString&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReadUntil&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for Write&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for WriteVectored&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; RefUnwindSafe for WriteAll&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, U&gt; !RefUnwindSafe for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl RefUnwindSafe for FxHasher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FxHasher64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FxHasher32","synthetic":true,"types":[]}];
implementors["gdk"] = [{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceManagerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Display","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayManagerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DragContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DragContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameClock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameClockClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Keymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeymapClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Screen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScreenClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisualClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventSequence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameTimings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AxisUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ByteOrder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CrossingMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CursorType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DragProtocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FullscreenMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GrabOwnership","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GrabStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifierIntent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotifyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnerChange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropertyState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisibilityState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisualType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowEdge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowTypeHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DragAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameClockPhase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifierType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WMDecoration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WMFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Atom","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ChangeData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventConfigure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventCrossing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventDND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventExpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventFocus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventGrabBroken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventMotion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventOwnerChange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventProximity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventScroll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventSetting","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventTouch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventVisibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventWindowState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Geometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeymapKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RgbaParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RGBA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowAttr","synthetic":true,"types":[]}];
implementors["gdk_pixbuf"] = [{"text":"impl RefUnwindSafe for Pixbuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufLoader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colorspace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterpType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufAlphaMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufRotation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PixbufAnimation","synthetic":true,"types":[]}];
implementors["gdk_pixbuf_sys"] = [{"text":"impl RefUnwindSafe for GdkPixbufFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkPixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbufAnimation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbufLoader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPixbufSimpleAnimIter","synthetic":true,"types":[]}];
implementors["gdk_sys"] = [{"text":"impl RefUnwindSafe for GdkEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkAtom","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkDevicePadInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkDrawingContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventAny","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventConfigure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventCrossing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventDND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventExpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventFocus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventGrabBroken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventMotion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventOwnerChange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventPadAxis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventPadButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventPadGroupMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventProximity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventScroll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventSequence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventSetting","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventTouch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventTouchpadPinch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventTouchpadSwipe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventVisibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkEventWindowState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkFrameClockClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkFrameClockPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkFrameTimings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkKeymapKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkRGBA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkTimeCoord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkWindowAttr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GdkWindowRedirect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkAppLaunchContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDeviceManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDeviceTool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDisplay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDisplayManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDragContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDrawingContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkFrameClock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkGLContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkKeymap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkScreen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkSeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkVisual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GdkDevicePad","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["gio"] = [{"text":"impl RefUnwindSafe for OwnerId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegistrationId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WatcherId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ActionGroupExportId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuModelExportId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalSubscriptionId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileAttributematcherIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for InetAddressBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for IOStreamAsyncReadWrite&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for InputStreamRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for InputStreamAsyncBufRead&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for OutputStreamWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for InputStreamAsyncRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for OutputStreamAsyncWrite&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UnixSocketAddressPath&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Action","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ActionMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppInfoMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppInfoMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Application","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BytesIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BytesIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cancellable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CancellableClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharsetConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharsetConverterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharsetConverterBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Converter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Credentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CredentialsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusAuthObserver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusAuthObserverClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMenuModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMenuModelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMessageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMethodInvocationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusProxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusProxyClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusServer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusServerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DesktopAppInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Drive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Emblem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmblemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmblemedIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmblemedIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for File","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileEnumerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileIOStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileIOStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileInfoClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilenameCompleter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Icon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetAddressMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetSocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadableIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Menu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuAttributeIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuLinkIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuModelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountOperationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NetworkServiceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Notification","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotificationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Permission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PermissionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollableInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollableOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropertyAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropertyActionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Proxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyResolver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemoteActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Resolver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolverClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Seekable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Settings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsBackendClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimpleAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimpleActionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimpleActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimplePermission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimplePermissionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketClientClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketConnectable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketListener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketListenerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketServiceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subprocess","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubprocessClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubprocessLauncher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubprocessLauncherClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThemedIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThemedIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadedSocketService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsCertificate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsCertificateClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsClientConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsDatabase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsFileDatabase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsInteraction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsInteractionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsPassword","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsPasswordClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsServerConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixFDList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixFDListClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixSocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vfs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VfsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Volume","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VolumeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZlibCompressor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZlibDecompressor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusArgInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMethodInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusNodeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusSignalInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Resource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsSchema","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SrvTarget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BusType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CredentialsType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMessageByteOrder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMessageHeaderField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMessageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataStreamByteOrder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataStreamNewlineType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DriveStartStopType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmblemOrigin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileAttributeStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileAttributeType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileMonitorEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOErrorEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountOperationResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotificationPriority","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PasswordSave","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolverRecordType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketClientEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketProtocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsAuthenticationMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsCertificateRequestFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsDatabaseLookupFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsInteractionResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsRehandshakeMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixSocketAddressType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZlibCompressorFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppInfoCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AskPasswordFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BusNameOwnerFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BusNameWatcherFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConverterFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusCallFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusCapabilityFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusConnectionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusInterfaceSkeletonFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusMessageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusProxyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusSendMessageFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusServerFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DBusSignalFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DriveStartFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileCopyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileCreateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileMeasureFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileMonitorFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileQueryInfoFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountMountFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountUnmountFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceLookupFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsBindFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubprocessFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsCertificateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsDatabaseVerifyFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsPasswordFlags","synthetic":true,"types":[]},{"text":"impl&lt;F, O, T, E&gt; !RefUnwindSafe for GioFuture&lt;F, O, T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !RefUnwindSafe for GioFutureResult&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgumentList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteOutputStream","synthetic":true,"types":[]}];
implementors["gio_sys"] = [{"text":"impl RefUnwindSafe for GActionEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GActionGroupInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GActionInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GActionMapInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAppInfoIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GAppLaunchContextPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GApplicationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GApplicationCommandLinePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GApplicationPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAsyncInitableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAsyncResultIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GBufferedInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GBufferedOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCancellableClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GCancellablePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCharsetConverterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GConverterIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GConverterInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GConverterOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GCredentialsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusAnnotationInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusArgInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusErrorEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusInterfaceIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDBusInterfaceSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusInterfaceVTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusMethodInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusNodeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectManagerClientClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDBusObjectManagerClientPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectManagerIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectManagerServerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDBusObjectManagerServerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectProxyClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDBusObjectProxyPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectSkeletonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDBusObjectSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusProxyClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDBusProxyPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusSignalInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusSubtreeVTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDataInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDataInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDataOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDatagramBasedInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDesktopAppInfoLookupIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDriveIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDtlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDtlsConnectionInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDtlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GEmblemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GEmblemedIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GEmblemedIconPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileAttributeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileAttributeInfoList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileDescriptorBasedIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileIOStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileInfoClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileMonitorPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GFileOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOExtension","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOExtensionPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOModuleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOModuleScope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOSchedulerJob","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOStreamAdapter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIOStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIconIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInetAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GInetAddressMaskPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GInetAddressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GInetSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInitableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInputMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInputVector","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GListModelInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GListStoreClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLoadableIconIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GMemoryInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemoryMonitorInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GMemoryOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GMenuAttributeIterPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GMenuLinkIterPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuModelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GMenuModelPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMountIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMountOperationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNativeSocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GNativeSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNativeVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNetworkAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GNetworkAddressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNetworkMonitorInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNetworkServiceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GNetworkServicePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOutputMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOutputVector","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPermissionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GPermissionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPollableInputStreamInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPollableOutputStreamInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GProxyAddressEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GProxyAddressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyResolverInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRemoteActionGroupInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GResolverClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GResolverPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSeekableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettingsBackendClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSettingsBackendPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettingsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSettingsPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettingsSchema","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSimpleActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSimpleAsyncResultClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleProxyResolverClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSimpleProxyResolverPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketClientClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSocketClientPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketConnectableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSocketConnectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketControlMessageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSocketControlMessagePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketListenerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSocketListenerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSocketPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketServiceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSrvTarget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GStaticResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTaskClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTcpConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTcpConnectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTcpWrapperConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTcpWrapperConnectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GThemedIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GThreadedSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsBackendInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsCertificateClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTlsCertificatePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTlsConnectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTlsDatabasePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsFileDatabaseInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsInteractionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTlsInteractionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsPasswordClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTlsPasswordPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixConnectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixConnectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixCredentialsMessageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixCredentialsMessagePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixFDListClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixFDListPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixFDMessageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixFDMessagePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixMountEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixMountMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixMountPoint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GUnixSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVfsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVolumeIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAppInfoMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAppLaunchContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GApplication","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBufferedInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBufferedOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBytesIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCancellable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCharsetConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GConverterInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GConverterOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCredentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusAuthObserver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusMenuModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectManagerClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectManagerServer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectProxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectSkeleton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusProxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusServer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDataInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDataOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDesktopAppInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GEmblem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GEmblemedIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileEnumerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileIOStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFilenameCompleter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFilterInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFilterOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIOModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIOStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInetAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInetAddressMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInetSocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GListStore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemoryInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemoryOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuAttributeIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuLinkIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMenuModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMountOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNativeSocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNativeVolumeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNetworkAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNetworkService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNotification","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPermission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPropertyAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyAddressEnumerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GResolver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSettingsBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleAsyncResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleIOStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimplePermission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSimpleProxyResolver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketControlMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketListener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSubprocess","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSubprocessLauncher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTcpConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTcpWrapperConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTestDBus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GThemedIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GThreadedSocketService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsCertificate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsDatabase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsInteraction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsPassword","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixCredentialsMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixFDList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixFDMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixMountMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GUnixSocketAddress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVfs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVolumeMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GZlibCompressor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GZlibDecompressor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GActionMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAppInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAsyncInitable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GAsyncResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDBusObjectManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDatagramBased","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDesktopAppInfoLookup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDrive","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDtlsClientConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDtlsConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDtlsServerConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFileDescriptorBased","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInitable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GListModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLoadableIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemoryMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNetworkMonitor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPollableInputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPollableOutputStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GProxyResolver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRemoteActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSeekable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSocketConnectable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsBackend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsClientConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsFileDatabase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTlsServerConnection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVolume","synthetic":true,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T, MM&gt; RefUnwindSafe for Boxed&lt;T, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, MM&gt; RefUnwindSafe for Shared&lt;T, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoolError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ClassRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectRef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Object","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitiallyUnowned","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for WeakRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendWeakRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Checksum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DateTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MainContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MainLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeZone","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChecksumType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DateMonth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DateWeekday","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyFileError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeekType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileTest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FormatSizeFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IOCondition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyFileFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogLevelFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpawnFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindingFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParamFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ByteArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Char","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UChar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for String","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Closure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UserDirectory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlagsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlagsValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FlagsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalHandlerId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inhibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Priority","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; RefUnwindSafe for Stash&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtr&lt;'a, P&gt;&gt;::Storage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; RefUnwindSafe for StashMut&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtrMut&lt;'a, P&gt;&gt;::Storage: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Borrowed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for List","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HashTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Array","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PtrArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValueArray","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TypedValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VariantDict","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VariantType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VariantTy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Date","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValueArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParamSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Quark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogHandlerId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogLevels","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for SendUniqueCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for InstanceStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibType: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ClassStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibClassType: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for InitializingType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalInvocationHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalClassHandlerToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Property&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Boxed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; !RefUnwindSafe for SourceFuture&lt;F, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; !RefUnwindSafe for SourceStream&lt;F, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadPool","synthetic":true,"types":[]}];
implementors["glib_sys"] = [{"text":"impl RefUnwindSafe for GPollFD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDoubleIEEE754","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFloatIEEE754","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTokenValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantBuilder_u","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantDict_u","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GAsyncQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GBookmarkFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GByteArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBytes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GChecksum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDateTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDebugKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GDir","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GDoubleIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFloatIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GHashTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GHashTableIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GHmac","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GHook","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GHookList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GIConv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIOChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GIOFuncs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GKeyFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GLogField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMainContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMainLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMappedFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMarkupParseContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMarkupParser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMatchInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GMemVTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GNode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOnce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GOptionContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOptionEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GOptionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GPatternSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GPtrArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRWLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GRand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRecMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRegex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GScanner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GScannerConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSequence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSequenceIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSourceCallbackFuncs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSourceFuncs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GSourcePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GStatBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GStringChunk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTestCase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTestConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTestLogBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTestLogMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTestSuite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GThread","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GThreadPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTimeVal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTimeZone","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTimer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTrashStack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantBuilder_u_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantDict","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantDict_u_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GVariantType","synthetic":true,"types":[]}];
implementors["gobject_sys"] = [{"text":"impl RefUnwindSafe for GTypeCValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GValue_data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GWeakRef_priv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GCClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GClosureNotifyData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GEnumClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GEnumValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFlagsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GFlagsValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInterfaceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GObjectClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GObjectConstructParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GParamSpecPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecTypeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSignalInvocationHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GSignalQuery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeFundamentalInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeInstance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeModuleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypePluginClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeQuery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeValueTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GValueArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GWeakRef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GBinding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GInitiallyUnowned","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecBoolean","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecBoxed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecChar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecDouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecGType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecInt64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecLong","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecOverride","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecPointer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecUChar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecUInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecUInt64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecULong","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecUnichar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecValueArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GParamSpecVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypeModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GTypePlugin","synthetic":true,"types":[]}];
implementors["gtk"] = [{"text":"impl RefUnwindSafe for AboutDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AboutDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AboutDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelLabel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelLabelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelLabelBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ActionBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ActionBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ActionBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Actionable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Adjustment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdjustmentClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdjustmentBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Application","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationWindowBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectFrameClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AspectFrameBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Assistant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssistantClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssistantBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Buildable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuilderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Button","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonBoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Calendar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CalendarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CalendarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellAreaClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellAreaBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellAreaBoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellAreaContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellAreaContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellEditable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRenderer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererAccel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererAccelBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererCombo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererComboClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererComboBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererPixbufBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererProgress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererProgressBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererSpin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererSpinBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererSpinner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererSpinnerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererTextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererTextBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererToggle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererToggleBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellViewBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Clipboard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClipboardClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxTextBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Container","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CssProvider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CssProviderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawingArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawingAreaClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawingAreaBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Editable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryCompletion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryCompletionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryCompletionBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventBoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventControllerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expander","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpanderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpanderBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileFilterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowBoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowBoxChild","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowBoxChildBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gesture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureDrag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureDragClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureDragBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureLongPress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureLongPressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureLongPressBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureMultiPress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureMultiPressBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GesturePan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GesturePanClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GesturePanBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureRotate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureRotateClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureRotateBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureSingle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureSingleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureSwipe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureSwipeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureSwipeBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureZoom","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureZoomClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GestureZoomBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Grid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GridClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GridBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMContextSimple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMContextSimpleBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMMulticontext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMMulticontextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMMulticontextBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconInfoClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconTheme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconThemeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconViewBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfoBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfoBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfoBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Invisible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvisibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvisibleBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LabelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LabelBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListBoxBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListBoxRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListBoxRowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListBoxRowBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListStore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListStoreClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LockButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LockButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LockButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Menu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuItemBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuShellClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Misc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MiscClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountOperationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MountOperationBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Notebook","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotebookClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotebookBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OffscreenWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OffscreenWindowBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Orientable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Overlay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OverlayClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OverlayBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageSetup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageSetupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Paned","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PanedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PanedBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlacesSidebar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlacesSidebarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Plug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlugClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlugBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Popover","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PopoverClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PopoverBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintOperationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintOperationBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintOperationPreview","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintSettingsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgressBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgressBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProgressBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RadioToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RangeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserMenu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserMenuBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentFilterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentManagerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentManagerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Revealer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scale","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scrollable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scrollbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollbarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrolledWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrolledWindowBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SearchBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SearchBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SearchBarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SearchEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SearchEntryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SearchEntryBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Separator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorToolItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeparatorToolItemBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Settings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SettingsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SizeGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SizeGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SizeGroupBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spinner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinnerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinnerBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackSwitcher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackSwitcherClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackSwitcherBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statusbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatusbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatusbarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleContextBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StylePropertiesClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleProvider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Switch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwitchClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SwitchBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextBufferClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextBufferBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextChildAnchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextMark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextMarkClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextMarkBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextTag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextTagClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextTagBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextTagTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextTagTableClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextViewBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToggleButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToggleButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToggleButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToggleToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToggleToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolItemBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolItemGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolItemGroupBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolPalette","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolPaletteClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolPaletteBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Toolbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolbarBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tooltip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TooltipClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeDragDest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeDragSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeModelFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeModelSort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeModelSortClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeSelectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeSortable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeStore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeStoreClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewColumn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewColumnBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Viewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ViewportBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VolumeButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VolumeButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VolumeButtonBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Widget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CssSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PaperSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectionData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TargetList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeRowReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WidgetPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Align","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArrowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssistantPageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaselinePosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorderStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuilderError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonBoxStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ButtonsType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererAccelMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CornerType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CssProviderError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CssSectionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DirectionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DragResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryIconPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventSequenceState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserConfirmation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileChooserError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMPreeditStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IMStatusStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconThemeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconViewDropPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputPurpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Justification","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelBarMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for License","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MenuDirectionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MovementStep","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotebookTab","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NumberUpLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Orientation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageOrientation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PanDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolicyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PositionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintDuplex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintOperationAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintOperationResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintPages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintQuality","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PropagationPhase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentChooserError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentManagerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentSortType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReliefStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealerTransitionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollStep","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrollablePolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectionMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SensitivityType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShadowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SizeGroupMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SizeRequestMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SortType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinButtonUpdatePolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackTransitionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextDirection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextViewLayer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextWindowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolbarStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewColumnSizing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewDropPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeViewGridLines","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WidgetHelpType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowPosition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccelFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplicationInhibitFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CalendarDisplayOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CellRendererState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DestDefaults","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DialogFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileFilterFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IconLookupFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputHints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JunctionSides","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlacesOpenFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentFilterFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StateFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TargetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextSearchFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToolPaletteDragTargets","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TreeModelFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Border","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntryBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecentData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Requisition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResponseType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TargetEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SortColumn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TickCallbackId","synthetic":true,"types":[]}];
implementors["gtk_sys"] = [{"text":"impl RefUnwindSafe for GtkBindingArg_d","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextAppearance_u1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextAttributes_u1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAboutDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAboutDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelGroupEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAccelGroupPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelLabelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAccelLabelPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAccelMapClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkActionBarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkActionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionableInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActivatableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAdjustmentClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAdjustmentPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAlignmentClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAlignmentPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAppChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAppChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAppChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkApplicationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkApplicationPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkApplicationWindowPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkArrowAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkArrowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkArrowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkArrowPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAspectFrameClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAspectFramePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAssistantClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkAssistantPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBinClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkBinPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBindingArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBindingEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBindingSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBindingSignal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBooleanCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkBooleanCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBorder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkBoxPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBuildableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBuilderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkBuilderPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkButtonBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkButtonBoxPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCalendarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCalendarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAccessibleParentIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellAreaBoxPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAreaClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAreaContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellAreaContextPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellAreaPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellEditableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellLayoutIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererAccelPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererClassPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererComboClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererComboPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererPixbufPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererProgressPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererSpinPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererTextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererTextPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellRendererTogglePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCellViewPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCheckButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCheckMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCheckMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCheckMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkColorButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkColorChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorChooserInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkColorChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorSelectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkColorSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkColorSelectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkComboBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkComboBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkComboBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkComboBoxPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkComboBoxTextPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkContainerAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkContainerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkContainerCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkContainerCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkContainerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkContainerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCssProviderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkCssProviderPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCssSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkDrawingAreaClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEditableInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEntryAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryBufferClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEntryBufferPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryCompletionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEntryCompletionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEntryPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEventBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEventBoxPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEventControllerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEventControllerKeyClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEventControllerMotionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkEventControllerScrollClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkExpanderAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkExpanderAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkExpanderClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkExpanderPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFileChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFileChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserNativeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFileChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileFilterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFixedChild","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFixedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFixedPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFlowBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxChildAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFontButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFontChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontChooserIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFontChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontSelectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFontSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFontSelectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFrameAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFrameAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFrameClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkFramePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGLAreaClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureDragClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureLongPressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGesturePanClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureRotateClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureSingleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureStylusClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureSwipeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGestureZoomClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGridClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkGridPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHButtonBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHPanedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHSVClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkHSVPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHScaleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHScrollbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHSeparatorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHandleBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkHandleBoxPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHeaderBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkHeaderBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHeaderBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkHeaderBarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMContextInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIMContextSimplePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMMulticontextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIMMulticontextPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconFactoryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIconFactoryPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIconInfoClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconThemeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIconThemePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIconViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkIconViewPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkImageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkImageCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkImageMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkImagePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkInfoBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkInfoBarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkInvisibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkInvisiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLabelAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLabelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLabelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLabelPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLabelSelectionInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLayoutClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLayoutPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLevelBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLevelBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLevelBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLevelBarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLinkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLinkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLinkButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLinkButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkListBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxRowAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxRowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListStoreClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkListStorePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLockButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLockButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLockButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkLockButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuBarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuShellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuShellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuShellClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuShellPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMenuToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMessageDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMessageDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMiscClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMiscPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMountOperationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNativeDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNotebookAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkNotebookAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNotebookClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNotebookPageAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkNotebookPageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkNotebookPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNumerableIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkNumerableIconPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkOffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkOrientableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkOverlayClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkOverlayPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPadActionEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPadControllerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPageRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPanedAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPanedAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPanedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPanedPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPaperSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPlugClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPlugPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPopoverAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPopoverClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPopoverMenuClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPopoverPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPrintOperationClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPrintOperationPreviewIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkPrintOperationPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkProgressBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkProgressBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkProgressBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkProgressBarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioActionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioActionEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRadioActionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRadioButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRadioButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRadioMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRadioMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRangeAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRangeAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRangeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRangePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRcContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRcProperty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRcStyleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentActionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRecentActionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRecentChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRecentChooserMenuPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRecentChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentFilterInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentManagerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRecentManagerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRendererCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkRendererCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRequestedSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRequisition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRevealerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkScaleAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkScaleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkScaleButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkScalePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrollableInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrollbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrolledWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkScrolledWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkScrolledWindowPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSearchBarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSearchEntryClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSelectionData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSeparatorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSeparatorPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSeparatorToolItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSettingsClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSettingsPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSettingsValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkShortcutLabelClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkShortcutsGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkShortcutsSectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkShortcutsShortcutClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkShortcutsWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSizeGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSizeGroupPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSocketClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSocketPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSpinButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSpinButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinnerAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSpinnerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinnerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackSidebarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkStackSidebarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackSwitcherClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStatusIconClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkStatusIconPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStatusbarAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkStatusbarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStatusbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkStatusbarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStockItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyleContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkStyleContextPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStylePropertiesClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkStylePropertiesPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyleProviderIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSwitchAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSwitchAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSwitchClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkSwitchPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSymbolicColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTableChild","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTableClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTablePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTableRowCol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTargetEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTargetList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTargetPair","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTearoffMenuItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTearoffMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextAppearance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextBTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextBufferClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextBufferPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextMarkClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextTagClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextTagPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextTagTableClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextTagTablePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTextViewPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkThemeEngine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkThemingEngineClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkThemingEnginePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleActionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleActionEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToggleActionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToggleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToggleButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToggleToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolItemClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToolItemGroupPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToolItemPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolPaletteClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToolPalettePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolShellIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToolbarPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToplevelAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkToplevelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeDragDestIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeDragSourceIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeModelFilterPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeModelIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeModelSortClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeModelSortPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeRowReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeSelectionClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeSelectionPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeSortableIface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeStoreClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeStorePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeViewClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeViewColumnPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkTreeViewPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkUIManagerClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkUIManagerPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVButtonBoxClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVPanedClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVScaleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVScrollbarClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVSeparatorClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkViewportClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkViewportPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVolumeButtonClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWidgetAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWidgetAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWidgetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWidgetClassPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWidgetPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWidgetPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWindowClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWindowGeometryInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWindowGroupClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWindowGroupPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _GtkWindowPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAboutDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelLabel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccelMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAdjustment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAlignment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooserButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkApplication","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkApplicationWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkArrowAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAspectFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAssistant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBooleanCellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkButtonBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCalendar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAreaBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAreaContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRenderer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererAccel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererCombo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererProgress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererSpin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererSpinner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellRendererToggle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCheckButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCheckMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCheckMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkClipboard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorSelectionDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkComboBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkComboBoxAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkComboBoxText","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkContainer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkContainerAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkContainerCellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCssProvider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkDrawingArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryCompletion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEntryIconAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEventBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEventController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEventControllerKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEventControllerMotion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEventControllerScroll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkExpander","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkExpanderAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserNative","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxChild","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFlowBoxChildAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontSelectionDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFrameAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGLArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGesture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureDrag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureLongPress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureMultiPress","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGesturePan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureRotate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureSingle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureStylus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureSwipe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGestureZoom","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkGrid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHButtonBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHPaned","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHSV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHScale","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHScrollbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHSeparator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHandleBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHeaderBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkHeaderBarAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMContextSimple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIMMulticontext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconFactory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconTheme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkIconViewAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageCellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkImageMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkInfoBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkInvisible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLabel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLabelAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLevelBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLevelBarAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLinkButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLinkButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxRow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListBoxRowAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkListStore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLockButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkLockButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuShellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMenuToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMessageDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMisc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkModelButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkMountOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNativeDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNotebook","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNotebookAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNotebookPageAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkNumerableIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkOffscreenWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkOverlay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPadController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPageSetup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPaned","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPanedAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPlacesSidebar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPlug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPopover","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPopoverAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPopoverMenu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPrintContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPrintOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPrintSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkProgressBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkProgressBarAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRadioToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRangeAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRcStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserDialog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserMenu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooserWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRendererCellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRevealer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScale","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScaleButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrollbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrolledWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrolledWindowAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSearchBar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSearchEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSeparator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSeparatorToolItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkShortcutLabel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkShortcutsGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkShortcutsSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkShortcutsShortcut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkShortcutsWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSizeGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSocket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSpinnerAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackSidebar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStackSwitcher","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStatusIcon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStatusbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStatusbarAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyleContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyleProperties","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSwitch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkSwitchAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTearoffMenuItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextCellAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextChildAnchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextMark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextTag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextTagTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTextViewAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkThemingEngine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleButtonAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToggleToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolItemGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolPalette","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTooltip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToplevelAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeModelFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeModelSort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeSelection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeStore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeViewAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeViewColumn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkUIManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVButtonBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVPaned","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVScale","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVScrollbar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVSeparator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkViewport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkVolumeButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWidgetAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWindow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWindowAccessible","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkWindowGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActionable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkActivatable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkAppChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkBuildable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellAccessibleParent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellEditable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkCellLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkColorChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkEditable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFileChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkFontChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkOrientable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkPrintOperationPreview","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkRecentChooser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkScrollable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkStyleProvider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkToolShell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeDragDest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeDragSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeModel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GtkTreeSortable","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for ReadySendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !RefUnwindSafe for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResponseFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PushPromise","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PushPromises","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !RefUnwindSafe for Handshake&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !RefUnwindSafe for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for SendResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for SendPushedResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for SendStream&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlowControl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PingPong","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pong","synthetic":true,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for HeaderMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Keys&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Values&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ValuesMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for GetAll&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Entry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for OccupiedEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ValueIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ValueIterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ValueDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToStrError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Method","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Request&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parts","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Response&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parts","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatusCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Authority","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scheme","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uri","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidUri","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Extensions","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; RefUnwindSafe for Request&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; RefUnwindSafe for Response&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl RefUnwindSafe for Idna","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; RefUnwindSafe for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for ValuesMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; RefUnwindSafe for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; RefUnwindSafe for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; RefUnwindSafe for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; RefUnwindSafe for SymmetricDifference&lt;'a, T, S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; RefUnwindSafe for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl RefUnwindSafe for IoVec","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, Pred&gt; RefUnwindSafe for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; RefUnwindSafe for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; RefUnwindSafe for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; RefUnwindSafe for TakeWhileRef&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; RefUnwindSafe for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !RefUnwindSafe for Format&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; !RefUnwindSafe for FormatWith&lt;'a, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !RefUnwindSafe for IntoChunks&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !RefUnwindSafe for Chunk&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !RefUnwindSafe for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; !RefUnwindSafe for GroupBy&lt;K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; !RefUnwindSafe for Group&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; !RefUnwindSafe for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; RefUnwindSafe for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; RefUnwindSafe for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; RefUnwindSafe for PeekingTakeWhile&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; RefUnwindSafe for ProcessResults&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !RefUnwindSafe for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; RefUnwindSafe for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !RefUnwindSafe for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; RefUnwindSafe for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; RefUnwindSafe for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; RefUnwindSafe for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; RefUnwindSafe for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; RefUnwindSafe for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl RefUnwindSafe for Buffer","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LanguageTag","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; RefUnwindSafe for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for Entries&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; RefUnwindSafe for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lru_cache"] = [{"text":"impl&lt;K, V, S&gt; RefUnwindSafe for LruCache&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; RefUnwindSafe for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl RefUnwindSafe for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl RefUnwindSafe for PollOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ready","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SetReadiness","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixReady","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_uds"] = [{"text":"impl RefUnwindSafe for UnixDatagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixListener","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixStream","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !RefUnwindSafe for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UdpBuilder","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for OnceBox&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceNonZeroUsize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceBool","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;RefUnwindSafe + UnwindSafe&gt; RefUnwindSafe for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, F:&nbsp;RefUnwindSafe&gt; RefUnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnceCell&lt;T&gt;: RefUnwindSafe,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, F:&nbsp;RefUnwindSafe&gt; RefUnwindSafe for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnceCell&lt;T&gt;: RefUnwindSafe,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pango"] = [{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EngineLang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EngineLangClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EngineShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EngineShapeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Font","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontFaceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontFamilyClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontMapClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fontset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontsetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontsetSimple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Layout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Renderer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RendererClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphItemIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LayoutLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TabArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alignment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BidiType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CoverageLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EllipsizeMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gravity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GravityHint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RenderPart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Script","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stretch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TabAlign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Underline","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Analysis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Language","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlyphGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Coverage","synthetic":true,"types":[]}];
implementors["pango_sys"] = [{"text":"impl RefUnwindSafe for PangoAnalysis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrFontDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrFontFeatures","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttrString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _PangoContextClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineLangClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineScriptInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineShapeClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontFaceClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontFamilyClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontMapClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontMetrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontsetClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _PangoFontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoGlyphGeometry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoGlyphInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoGlyphItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoGlyphItemIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoGlyphString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoGlyphVisAttr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoIncludedModule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _PangoLayoutClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoLayoutIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoLayoutLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoLogAttr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _PangoMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _PangoMapEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoMatrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoRectangle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoRendererClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _PangoRendererPrivate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoScriptIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoTabArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoCoverage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineLang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoEngineShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontFace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontFamily","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoFontsetSimple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoLayout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PangoRenderer","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl RefUnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawFairMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawThreadId","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl RefUnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequeueOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinWait","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl RefUnwindSafe for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpanRange","synthetic":true,"types":[]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; RefUnwindSafe for Context&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["quick_xml"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesDecl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesEnd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl RefUnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; RefUnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; RefUnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; RefUnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl RefUnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OsRng","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl RefUnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; RefUnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatches","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; RefUnwindSafe for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !RefUnwindSafe for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; RefUnwindSafe for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; RefUnwindSafe for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl RefUnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WithComments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alternation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Concat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LiteralKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassPerl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassAscii","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassBracketed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Assertion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssertionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaptureName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlagsItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Printer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Translator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaseFoldError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hir","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HirKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Class","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Anchor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WordBoundary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repetition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepetitionRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Sequences","synthetic":true,"types":[]}];
implementors["resolv_conf"] = [{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Network","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScopedIp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddrParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DomainIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lookup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Family","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for BytesDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; RefUnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; RefUnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; RefUnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; RefUnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; RefUnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Serializer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; RefUnwindSafe for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !RefUnwindSafe for Serializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !RefUnwindSafe for SeqSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !RefUnwindSafe for TupleSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !RefUnwindSafe for TupleStructSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !RefUnwindSafe for TupleVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !RefUnwindSafe for MapSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !RefUnwindSafe for StructSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !RefUnwindSafe for StructVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl RefUnwindSafe for SigId","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["socket2"] = [{"text":"impl RefUnwindSafe for SockAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Domain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl RefUnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for As","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Await","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for And","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for At","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAwait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RangeLimits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemImpl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemMacro2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemMod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemStatic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemTrait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UsePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseRename","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseGlob","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FnArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Receiver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for File","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variadic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatIdent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatRest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatWild","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldPat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; RefUnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl RefUnwindSafe for AddBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Structure&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["threadpool"] = [{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThreadPool","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl RefUnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timespec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreciseTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SteadyTime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl&lt;E&gt; !RefUnwindSafe for PollEvented&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RW&gt; RefUnwindSafe for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized, W:&nbsp;?Sized&gt; RefUnwindSafe for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DuplexStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Repeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sink","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, B&gt; RefUnwindSafe for StreamReader&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ReaderStream&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TcpStream","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UdpSocket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SendHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RecvHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RecvHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SendHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedSendHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedRecvHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReuniteError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnixStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UCred","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JoinError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for JoinHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryCurrentError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalKind","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for StreamMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Barrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClosedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for OwnedMutexGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryLockError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Notify","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for DelayQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Delay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instant","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Timeout&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Throttle&lt;T&gt;","synthetic":true,"types":[]}];
implementors["tokio_util"] = [{"text":"impl RefUnwindSafe for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; RefUnwindSafe for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; RefUnwindSafe for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; RefUnwindSafe for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinesCodec","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LinesCodecError","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; RefUnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Datetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for WithDispatch&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Instrumented&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Entered&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EnteredSpan","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl !RefUnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dispatch","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DefaultGuard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LevelFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Current","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Interest","synthetic":true,"types":[]}];
implementors["tracing_futures"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for Instrumented&lt;T&gt;","synthetic":true,"types":[]}];
implementors["trust_dns_proto"] = [{"text":"impl RefUnwindSafe for SslErrorStack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unspecified","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtoErrorKind","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ProtoError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Edns","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Header","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderCounts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoopMessageFinalizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Query","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResponseCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DNSClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Name","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DEFAULT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IN_ADDR_ARPA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IP6_ARPA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LOCALHOST","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IN_ADDR_ARPA_127","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IP6_ARPA_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LOCAL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IN_ADDR_ARPA_169_254","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IP6_ARPA_FE_8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IP6_ARPA_FE_9","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IP6_ARPA_FE_B","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for INVALID","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UserUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolverUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegistryUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZoneUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CAA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Property","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NAPTR","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NULL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OPENPGPKEY","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OPT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EdnsCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EdnsOption","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SOA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SRV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SSHFP","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Algorithm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FingerprintType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TLSA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CertUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Selector","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matching","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TXT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecordType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Record","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecordSet","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for RrsetRecords&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BinDecoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BinEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodeMode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Restrict&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Verified&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for TcpClientStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for TcpClientConnect&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for TcpStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; RefUnwindSafe for UdpClientStream&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MF: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UdpResponse","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; RefUnwindSafe for UdpClientConnect&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MF: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for UdpStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; !RefUnwindSafe for DnsExchange&lt;S, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, S, R&gt; !RefUnwindSafe for DnsExchangeConnect&lt;F, S, R&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StreamHandle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BasicDnsHandle","synthetic":true,"types":[]},{"text":"impl&lt;S, MF, D&nbsp;=&nbsp;Box&lt;dyn DnsStreamHandle + 'static, Global&gt;&gt; !RefUnwindSafe for DnsMultiplexer&lt;S, MF, D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, S, MF&gt; !RefUnwindSafe for DnsMultiplexerConnect&lt;F, S, MF&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DnsMultiplexerSerialResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DnsRequestOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DnsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DnsResponse","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; RefUnwindSafe for RetryDnsHandle&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerialMessage","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufStreamHandle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BufDnsStreamHandle","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for DnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for BufDnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for OneshotDnsRequest&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !RefUnwindSafe for OneshotDnsResponseReceiver&lt;F&gt;","synthetic":true,"types":[]}];
implementors["trust_dns_resolver"] = [{"text":"impl !RefUnwindSafe for AsyncResolver","synthetic":true,"types":[]},{"text":"impl&lt;F, G&nbsp;=&nbsp;F&gt; !RefUnwindSafe for Background&lt;F, G&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolverConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NameServerConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NameServerConfigGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupIpStrategy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolverOpts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResolveErrorKind","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResolveError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hosts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LookupIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LookupRecordIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupIntoIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SrvLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for SrvLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SrvLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SrvLookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReverseLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for ReverseLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReverseLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReverseLookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv4Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for Ipv4LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv4LookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ipv4LookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for Ipv6LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ipv6LookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ipv6LookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MxLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for MxLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MxLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MxLookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxtLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for TxtLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxtLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TxtLookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SoaLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for SoaLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SoaLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SoaLookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NsLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for NsLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NsLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NsLookupFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupIp","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for LookupIpIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupIpIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;C&nbsp;=&nbsp;LookupEither&lt;ConnectionHandle, StandardConnection&gt;&gt; !RefUnwindSafe for LookupIpFuture&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Resolver","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BidiClass","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; RefUnwindSafe for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; RefUnwindSafe for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; RefUnwindSafe for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for Replacements&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; RefUnwindSafe for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; RefUnwindSafe for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["woab"] = [{"text":"impl RefUnwindSafe for BuilderFactory","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BuilderConnector","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !RefUnwindSafe for ActorBuilder&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !RefUnwindSafe for ActorBuilderContext&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T, I&gt; RefUnwindSafe for BuilderSingalConnector&lt;S, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; !RefUnwindSafe for SignalRouter&lt;S, I&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Remove","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()