(function() {var implementors = {};
implementors["actix"] = [{"text":"impl Sync for ActorState","synthetic":true,"types":[]},{"text":"impl Sync for Running","synthetic":true,"types":[]},{"text":"impl Sync for SpawnHandle","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for Context&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for ContextParts&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; !Sync for ContextFut&lt;A, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Sync for MessageResult&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Message&gt;::Result: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; !Sync for Response&lt;I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, I, E&gt; !Sync for ActorResponse&lt;A, I, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for Supervisor&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for AddressSender&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for AddressReceiver&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for Envelope&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, M&gt; Sync for Request&lt;A, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Message&gt;::Result: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !Sync for RecipientRequest&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for MailboxError","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Addr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for WeakAddr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !Sync for Recipient&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for Mailbox&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Mocker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Resolve","synthetic":true,"types":[]},{"text":"impl Sync for Connect","synthetic":true,"types":[]},{"text":"impl Sync for ConnectAddr","synthetic":true,"types":[]},{"text":"impl Sync for ResolverError","synthetic":true,"types":[]},{"text":"impl Sync for Resolver","synthetic":true,"types":[]},{"text":"impl !Sync for TcpConnector","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Finish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Sync for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; Sync for Ready&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E, A&gt; Sync for FutureResult&lt;T, E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for StreamFinish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; Sync for StreamFold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoActorFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Sync for StreamMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Sync for StreamThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoActorFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for StreamTimeout&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Sync for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoActorFuture&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Timeout&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; Sync for FutureWrap&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, A&gt; Sync for StreamWrap&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !Sync for Writer&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; !Sync for FramedWrite&lt;T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; !Sync for SinkWrite&lt;I, S&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Registry","synthetic":true,"types":[]},{"text":"impl !Sync for SystemRegistry","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SyncArbiter&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for SyncContext&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Condition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for TimerFunc&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Sync for IntervalFunc&lt;A&gt;","synthetic":true,"types":[]}];
implementors["actix_codec"] = [{"text":"impl Sync for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_connect"] = [{"text":"impl&lt;T&gt; Sync for Connect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Connection&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TcpConnectorFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TcpConnector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ConnectError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ResolverFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Resolver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ConnectServiceFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ConnectService&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TcpConnectService&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_http"] = [{"text":"impl Sync for BodySize","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !Sync for ResponseBody&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Body","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; Sync for BodyStream&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SizedStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !Sync for HttpServiceBuilder&lt;T, S, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Connector&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ConnectError","synthetic":true,"types":[]},{"text":"impl Sync for InvalidUrl","synthetic":true,"types":[]},{"text":"impl !Sync for SendRequestError","synthetic":true,"types":[]},{"text":"impl Sync for FreezeRequestError","synthetic":true,"types":[]},{"text":"impl Sync for Protocol","synthetic":true,"types":[]},{"text":"impl Sync for Connect","synthetic":true,"types":[]},{"text":"impl Sync for KeepAlive","synthetic":true,"types":[]},{"text":"impl !Sync for ServiceConfig","synthetic":true,"types":[]},{"text":"impl !Sync for Extensions","synthetic":true,"types":[]},{"text":"impl Sync for AcceptCharset","synthetic":true,"types":[]},{"text":"impl Sync for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl Sync for Accept","synthetic":true,"types":[]},{"text":"impl Sync for Allow","synthetic":true,"types":[]},{"text":"impl Sync for CacheControl","synthetic":true,"types":[]},{"text":"impl Sync for CacheDirective","synthetic":true,"types":[]},{"text":"impl Sync for DispositionType","synthetic":true,"types":[]},{"text":"impl Sync for DispositionParam","synthetic":true,"types":[]},{"text":"impl Sync for ContentDisposition","synthetic":true,"types":[]},{"text":"impl Sync for ContentLanguage","synthetic":true,"types":[]},{"text":"impl Sync for ContentRange","synthetic":true,"types":[]},{"text":"impl Sync for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl Sync for ContentType","synthetic":true,"types":[]},{"text":"impl Sync for Date","synthetic":true,"types":[]},{"text":"impl Sync for ETag","synthetic":true,"types":[]},{"text":"impl Sync for Expires","synthetic":true,"types":[]},{"text":"impl Sync for IfMatch","synthetic":true,"types":[]},{"text":"impl Sync for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl Sync for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl Sync for IfRange","synthetic":true,"types":[]},{"text":"impl Sync for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl Sync for LastModified","synthetic":true,"types":[]},{"text":"impl Sync for HeaderMap","synthetic":true,"types":[]},{"text":"impl Sync for ContentEncoding","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedValue","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionType","synthetic":true,"types":[]},{"text":"impl !Sync for RequestHead","synthetic":true,"types":[]},{"text":"impl !Sync for RequestHeadType","synthetic":true,"types":[]},{"text":"impl !Sync for ResponseHead","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Message&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !Sync for Payload&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !Sync for Request&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !Sync for Response&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ResponseBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !Sync for HttpService&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CookieBuilder","synthetic":true,"types":[]},{"text":"impl Sync for SameSite","synthetic":true,"types":[]},{"text":"impl Sync for CookieJar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Delta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Sync for Cookie&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'c&gt; Sync for EncodedCookie&lt;'a, 'c&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for PayloadError","synthetic":true,"types":[]},{"text":"impl !Sync for DispatchError","synthetic":true,"types":[]},{"text":"impl Sync for ContentTypeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for InternalError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ClientCodec","synthetic":true,"types":[]},{"text":"impl !Sync for ClientPayloadCodec","synthetic":true,"types":[]},{"text":"impl !Sync for Codec","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !Sync for Dispatcher&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ExpectHandler","synthetic":true,"types":[]},{"text":"impl !Sync for Payload","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&lt;T&gt;&gt; !Sync for H1Service&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !Sync for H1ServiceHandler&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for OneRequest&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UpgradeHandler&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !Sync for SendResponse&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for MessageType","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !Sync for Dispatcher&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !Sync for H2Service&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Payload","synthetic":true,"types":[]},{"text":"impl !Sync for TestRequest","synthetic":true,"types":[]},{"text":"impl Sync for TestBuffer","synthetic":true,"types":[]},{"text":"impl Sync for Message","synthetic":true,"types":[]},{"text":"impl Sync for Frame","synthetic":true,"types":[]},{"text":"impl Sync for Item","synthetic":true,"types":[]},{"text":"impl Sync for Codec","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !Sync for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Parser","synthetic":true,"types":[]},{"text":"impl Sync for OpCode","synthetic":true,"types":[]},{"text":"impl Sync for CloseCode","synthetic":true,"types":[]},{"text":"impl Sync for CloseReason","synthetic":true,"types":[]},{"text":"impl Sync for ProtocolError","synthetic":true,"types":[]},{"text":"impl Sync for HandshakeError","synthetic":true,"types":[]},{"text":"impl Sync for Protocol","synthetic":true,"types":[]}];
implementors["actix_rt"] = [{"text":"impl Sync for Arbiter","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl !Sync for SystemRunner","synthetic":true,"types":[]},{"text":"impl !Sync for Runtime","synthetic":true,"types":[]},{"text":"impl Sync for System","synthetic":true,"types":[]}];
implementors["actix_service"] = [{"text":"impl&lt;T, F, R, In, Out, Err&gt; Sync for Apply&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;In: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Out: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R, In, Out, Err&gt; Sync for ApplyServiceFactory&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;In: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Out: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, Req, Res, Err, InitErr&gt; !Sync for BoxServiceFactory&lt;C, Req, Res, Err, InitErr&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err&gt; Sync for FnService&lt;F, Fut, Req, Res, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err, Cfg&gt; Sync for FnServiceFactory&lt;F, Fut, Req, Res, Err, Cfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cfg: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Cfg, Srv, Err&gt; Sync for FnServiceConfig&lt;F, Fut, Cfg, Srv, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cfg: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Err: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Srv: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, C, S, R, E&gt; Sync for FnServiceNoConfig&lt;F, C, S, R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Response&gt; Sync for Map&lt;A, F, Response&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Response: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Res&gt; Sync for MapServiceFactory&lt;A, F, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, C&gt; Sync for MapConfig&lt;A, F, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; Sync for UnitConfig&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; Sync for MapErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; Sync for MapErrServiceFactory&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; Sync for MapInitErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Pipeline&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for PipelineFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; !Sync for ApplyTransform&lt;T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, F, E&gt; Sync for TransformMapInitErr&lt;T, S, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_threadpool"] = [{"text":"impl&lt;E&gt; Sync for BlockingError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Sync for CpuFuture&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_utils"] = [{"text":"impl !Sync for Condition","synthetic":true,"types":[]},{"text":"impl !Sync for Waiter","synthetic":true,"types":[]},{"text":"impl !Sync for Counter","synthetic":true,"types":[]},{"text":"impl !Sync for CounterGuard","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for EitherService&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, U&gt; Sync for DispatcherError&lt;E, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Decoder&gt;::Error: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Error: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T, U&gt; !Sync for Dispatcher&lt;S, T, U&gt;","synthetic":true,"types":[]},{"text":"impl Sync for InFlight","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Sync for InFlightService&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; !Sync for KeepAlive&lt;R, E, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; !Sync for KeepAliveService&lt;R, E, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Pool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for PSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for PReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for InOrderError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for InOrder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Sync for InOrderService&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !Sync for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for LocalWaker","synthetic":true,"types":[]},{"text":"impl !Sync for LowResTime","synthetic":true,"types":[]},{"text":"impl !Sync for LowResTimeService","synthetic":true,"types":[]},{"text":"impl !Sync for SystemTime","synthetic":true,"types":[]},{"text":"impl !Sync for SystemTimeService","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Timeout&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for TimeoutError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for TimeoutService&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TimeoutServiceResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Service&gt;::Future: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["addr2line"] = [{"text":"impl&lt;R&gt; !Sync for Context&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; !Sync for LocationRangeIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; !Sync for FrameIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Sync for Frame&lt;'ctx, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for FunctionName&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Location&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["adler"] = [{"text":"impl Sync for Adler32","synthetic":true,"types":[]}];
implementors["ahash"] = [{"text":"impl Sync for AHasher","synthetic":true,"types":[]},{"text":"impl Sync for RandomState","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Sync for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Sync for FindIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Sync for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Sync for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl Sync for MatchKind","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for MatchKind","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Sync for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Match","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["atk"] = [{"text":"impl !Sync for Action","synthetic":true,"types":[]},{"text":"impl !Sync for Component","synthetic":true,"types":[]},{"text":"impl !Sync for Document","synthetic":true,"types":[]},{"text":"impl !Sync for EditableText","synthetic":true,"types":[]},{"text":"impl !Sync for GObjectAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for Hyperlink","synthetic":true,"types":[]},{"text":"impl !Sync for HyperlinkImpl","synthetic":true,"types":[]},{"text":"impl !Sync for Hypertext","synthetic":true,"types":[]},{"text":"impl !Sync for Image","synthetic":true,"types":[]},{"text":"impl !Sync for Misc","synthetic":true,"types":[]},{"text":"impl !Sync for NoOpObject","synthetic":true,"types":[]},{"text":"impl !Sync for NoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl !Sync for Object","synthetic":true,"types":[]},{"text":"impl !Sync for ObjectFactory","synthetic":true,"types":[]},{"text":"impl !Sync for Plug","synthetic":true,"types":[]},{"text":"impl !Sync for Registry","synthetic":true,"types":[]},{"text":"impl !Sync for Relation","synthetic":true,"types":[]},{"text":"impl !Sync for RelationSet","synthetic":true,"types":[]},{"text":"impl !Sync for Selection","synthetic":true,"types":[]},{"text":"impl !Sync for Socket","synthetic":true,"types":[]},{"text":"impl !Sync for StateSet","synthetic":true,"types":[]},{"text":"impl !Sync for StreamableContent","synthetic":true,"types":[]},{"text":"impl !Sync for Table","synthetic":true,"types":[]},{"text":"impl !Sync for TableCell","synthetic":true,"types":[]},{"text":"impl !Sync for Text","synthetic":true,"types":[]},{"text":"impl !Sync for Util","synthetic":true,"types":[]},{"text":"impl !Sync for Value","synthetic":true,"types":[]},{"text":"impl !Sync for Window","synthetic":true,"types":[]},{"text":"impl !Sync for Range","synthetic":true,"types":[]},{"text":"impl !Sync for Rectangle","synthetic":true,"types":[]},{"text":"impl !Sync for TextRange","synthetic":true,"types":[]},{"text":"impl Sync for CoordType","synthetic":true,"types":[]},{"text":"impl Sync for Layer","synthetic":true,"types":[]},{"text":"impl Sync for RelationType","synthetic":true,"types":[]},{"text":"impl Sync for Role","synthetic":true,"types":[]},{"text":"impl Sync for StateType","synthetic":true,"types":[]},{"text":"impl Sync for TextAttribute","synthetic":true,"types":[]},{"text":"impl Sync for TextBoundary","synthetic":true,"types":[]},{"text":"impl Sync for TextClipType","synthetic":true,"types":[]},{"text":"impl Sync for TextGranularity","synthetic":true,"types":[]},{"text":"impl Sync for ValueType","synthetic":true,"types":[]},{"text":"impl Sync for HyperlinkStateFlags","synthetic":true,"types":[]},{"text":"impl Sync for Attribute","synthetic":true,"types":[]},{"text":"impl Sync for TextRectangle","synthetic":true,"types":[]},{"text":"impl Sync for GObjectAccessibleClass","synthetic":false,"types":[]},{"text":"impl Sync for HyperlinkClass","synthetic":false,"types":[]},{"text":"impl Sync for MiscClass","synthetic":false,"types":[]},{"text":"impl Sync for NoOpObjectClass","synthetic":false,"types":[]},{"text":"impl Sync for NoOpObjectFactoryClass","synthetic":false,"types":[]},{"text":"impl Sync for ObjectClass","synthetic":false,"types":[]},{"text":"impl Sync for ObjectFactoryClass","synthetic":false,"types":[]},{"text":"impl Sync for PlugClass","synthetic":false,"types":[]},{"text":"impl Sync for RegistryClass","synthetic":false,"types":[]},{"text":"impl Sync for RelationClass","synthetic":false,"types":[]},{"text":"impl Sync for RelationSetClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketClass","synthetic":false,"types":[]},{"text":"impl Sync for StateSetClass","synthetic":false,"types":[]},{"text":"impl Sync for UtilClass","synthetic":false,"types":[]}];
implementors["atk_sys"] = [{"text":"impl Sync for AtkActionIface","synthetic":true,"types":[]},{"text":"impl !Sync for AtkAttribute","synthetic":true,"types":[]},{"text":"impl Sync for AtkComponentIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkDocumentIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkEditableTextIface","synthetic":true,"types":[]},{"text":"impl !Sync for AtkGObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkHyperlinkClass","synthetic":true,"types":[]},{"text":"impl Sync for AtkHyperlinkImplIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkHypertextIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkImageIface","synthetic":true,"types":[]},{"text":"impl Sync for _AtkImplementor","synthetic":true,"types":[]},{"text":"impl !Sync for AtkKeyEventStruct","synthetic":true,"types":[]},{"text":"impl !Sync for AtkMiscClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkNoOpObjectClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkNoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkObjectClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkPlugClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkPropertyValues","synthetic":true,"types":[]},{"text":"impl Sync for AtkRange","synthetic":true,"types":[]},{"text":"impl Sync for AtkRectangle","synthetic":true,"types":[]},{"text":"impl !Sync for AtkRegistryClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkRelationClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkRelationSetClass","synthetic":true,"types":[]},{"text":"impl Sync for AtkSelectionIface","synthetic":true,"types":[]},{"text":"impl !Sync for AtkSocketClass","synthetic":true,"types":[]},{"text":"impl !Sync for AtkStateSetClass","synthetic":true,"types":[]},{"text":"impl Sync for AtkStreamableContentIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkTableCellIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkTableIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkTextIface","synthetic":true,"types":[]},{"text":"impl !Sync for AtkTextRange","synthetic":true,"types":[]},{"text":"impl Sync for AtkTextRectangle","synthetic":true,"types":[]},{"text":"impl !Sync for AtkUtilClass","synthetic":true,"types":[]},{"text":"impl Sync for AtkValueIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkWindowIface","synthetic":true,"types":[]},{"text":"impl !Sync for AtkGObjectAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for AtkHyperlink","synthetic":true,"types":[]},{"text":"impl !Sync for AtkMisc","synthetic":true,"types":[]},{"text":"impl !Sync for AtkNoOpObject","synthetic":true,"types":[]},{"text":"impl !Sync for AtkNoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl !Sync for AtkObject","synthetic":true,"types":[]},{"text":"impl !Sync for AtkObjectFactory","synthetic":true,"types":[]},{"text":"impl !Sync for AtkPlug","synthetic":true,"types":[]},{"text":"impl !Sync for AtkRegistry","synthetic":true,"types":[]},{"text":"impl !Sync for AtkRelation","synthetic":true,"types":[]},{"text":"impl !Sync for AtkRelationSet","synthetic":true,"types":[]},{"text":"impl !Sync for AtkSocket","synthetic":true,"types":[]},{"text":"impl !Sync for AtkStateSet","synthetic":true,"types":[]},{"text":"impl !Sync for AtkUtil","synthetic":true,"types":[]},{"text":"impl Sync for AtkAction","synthetic":true,"types":[]},{"text":"impl Sync for AtkComponent","synthetic":true,"types":[]},{"text":"impl Sync for AtkDocument","synthetic":true,"types":[]},{"text":"impl Sync for AtkEditableText","synthetic":true,"types":[]},{"text":"impl Sync for AtkHyperlinkImpl","synthetic":true,"types":[]},{"text":"impl Sync for AtkHypertext","synthetic":true,"types":[]},{"text":"impl Sync for AtkImage","synthetic":true,"types":[]},{"text":"impl Sync for AtkImplementorIface","synthetic":true,"types":[]},{"text":"impl Sync for AtkSelection","synthetic":true,"types":[]},{"text":"impl Sync for AtkStreamableContent","synthetic":true,"types":[]},{"text":"impl Sync for AtkTable","synthetic":true,"types":[]},{"text":"impl Sync for AtkTableCell","synthetic":true,"types":[]},{"text":"impl Sync for AtkText","synthetic":true,"types":[]},{"text":"impl Sync for AtkValue","synthetic":true,"types":[]},{"text":"impl Sync for AtkWindow","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl Sync for Frame","synthetic":true,"types":[]},{"text":"impl !Sync for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Sync for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PrintFmt","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !Sync for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Backtrace","synthetic":true,"types":[]},{"text":"impl Sync for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl Sync for BacktraceSymbol","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Sync for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Sync for EncoderWriter&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DecodeError","synthetic":true,"types":[]},{"text":"impl Sync for CharacterSet","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Sync for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UninitSlice","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Bytes","synthetic":false,"types":[]},{"text":"impl Sync for BytesMut","synthetic":false,"types":[]}];
implementors["cairo"] = [{"text":"impl Sync for Version","synthetic":true,"types":[]},{"text":"impl !Sync for RectangleList","synthetic":true,"types":[]},{"text":"impl !Sync for Context","synthetic":true,"types":[]},{"text":"impl !Sync for Device","synthetic":true,"types":[]},{"text":"impl Sync for Antialias","synthetic":true,"types":[]},{"text":"impl Sync for FillRule","synthetic":true,"types":[]},{"text":"impl Sync for LineCap","synthetic":true,"types":[]},{"text":"impl Sync for LineJoin","synthetic":true,"types":[]},{"text":"impl Sync for Operator","synthetic":true,"types":[]},{"text":"impl Sync for PathDataType","synthetic":true,"types":[]},{"text":"impl Sync for Content","synthetic":true,"types":[]},{"text":"impl Sync for Extend","synthetic":true,"types":[]},{"text":"impl Sync for Filter","synthetic":true,"types":[]},{"text":"impl Sync for PatternType","synthetic":true,"types":[]},{"text":"impl Sync for FontSlant","synthetic":true,"types":[]},{"text":"impl Sync for FontWeight","synthetic":true,"types":[]},{"text":"impl Sync for TextClusterFlags","synthetic":true,"types":[]},{"text":"impl Sync for FontType","synthetic":true,"types":[]},{"text":"impl Sync for SubpixelOrder","synthetic":true,"types":[]},{"text":"impl Sync for HintStyle","synthetic":true,"types":[]},{"text":"impl Sync for HintMetrics","synthetic":true,"types":[]},{"text":"impl Sync for SurfaceType","synthetic":true,"types":[]},{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl Sync for RegionOverlap","synthetic":true,"types":[]},{"text":"impl Sync for PdfOutline","synthetic":true,"types":[]},{"text":"impl Sync for MeshCorner","synthetic":true,"types":[]},{"text":"impl Sync for FtSynthesize","synthetic":true,"types":[]},{"text":"impl Sync for DeviceType","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for IoError","synthetic":true,"types":[]},{"text":"impl Sync for BorrowError","synthetic":true,"types":[]},{"text":"impl !Sync for FontFace","synthetic":true,"types":[]},{"text":"impl !Sync for FontOptions","synthetic":true,"types":[]},{"text":"impl !Sync for ScaledFont","synthetic":true,"types":[]},{"text":"impl !Sync for ImageSurface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImageSurfaceData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Matrix","synthetic":true,"types":[]},{"text":"impl !Sync for Path","synthetic":true,"types":[]},{"text":"impl Sync for PathSegment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PathSegments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Pattern","synthetic":true,"types":[]},{"text":"impl !Sync for SolidPattern","synthetic":true,"types":[]},{"text":"impl !Sync for Gradient","synthetic":true,"types":[]},{"text":"impl !Sync for LinearGradient","synthetic":true,"types":[]},{"text":"impl !Sync for RadialGradient","synthetic":true,"types":[]},{"text":"impl !Sync for SurfacePattern","synthetic":true,"types":[]},{"text":"impl !Sync for Mesh","synthetic":true,"types":[]},{"text":"impl !Sync for RecordingSurface","synthetic":true,"types":[]},{"text":"impl Sync for Rectangle","synthetic":true,"types":[]},{"text":"impl Sync for RectangleInt","synthetic":true,"types":[]},{"text":"impl !Sync for Region","synthetic":true,"types":[]},{"text":"impl !Sync for Surface","synthetic":true,"types":[]},{"text":"impl !Sync for MappedImageSurface","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UserDataKey&lt;T&gt;","synthetic":false,"types":[]}];
implementors["cairo_sys"] = [{"text":"impl Sync for cairo_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_surface_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_device_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_pattern_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_rectangle_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_rectangle_int_t","synthetic":true,"types":[]},{"text":"impl !Sync for cairo_rectangle_list_t","synthetic":true,"types":[]},{"text":"impl !Sync for cairo_path_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_path_data_header","synthetic":true,"types":[]},{"text":"impl Sync for cairo_path_data","synthetic":true,"types":[]},{"text":"impl Sync for cairo_glyph_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_region_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_font_face_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_scaled_font_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_font_options_t","synthetic":true,"types":[]},{"text":"impl Sync for FontExtents","synthetic":true,"types":[]},{"text":"impl Sync for Glyph","synthetic":true,"types":[]},{"text":"impl Sync for TextCluster","synthetic":true,"types":[]},{"text":"impl Sync for TextExtents","synthetic":true,"types":[]},{"text":"impl Sync for Matrix","synthetic":true,"types":[]},{"text":"impl Sync for cairo_user_data_key_t","synthetic":true,"types":[]},{"text":"impl Sync for cairo_bool_t","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Sync for FixedOffset","synthetic":true,"types":[]},{"text":"impl Sync for Local","synthetic":true,"types":[]},{"text":"impl Sync for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NaiveDate","synthetic":true,"types":[]},{"text":"impl Sync for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Sync for IsoWeek","synthetic":true,"types":[]},{"text":"impl Sync for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Sync for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Sync for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Pad","synthetic":true,"types":[]},{"text":"impl Sync for Numeric","synthetic":true,"types":[]},{"text":"impl Sync for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Sync for Fixed","synthetic":true,"types":[]},{"text":"impl Sync for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RoundingError","synthetic":true,"types":[]},{"text":"impl Sync for Weekday","synthetic":true,"types":[]},{"text":"impl Sync for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Sync for Month","synthetic":true,"types":[]},{"text":"impl Sync for ParseMonthError","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; !Sync for BoxAllocation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VecAllocation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VecEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for TryIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl Sync for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Sync for TrySelectError","synthetic":true,"types":[]},{"text":"impl Sync for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Sync for TryReadyError","synthetic":true,"types":[]},{"text":"impl Sync for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sync for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl !Sync for Backoff","synthetic":true,"types":[]},{"text":"impl !Sync for Parker","synthetic":true,"types":[]},{"text":"impl Sync for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Sync for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Unparker","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send + Sync&gt; Sync for ShardedLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Sync&gt; Sync for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized + Sync&gt; Sync for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'env&gt; Sync for Scope&lt;'env&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'scope, T&gt; Sync for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Sync for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["encoding_rs"] = [{"text":"impl Sync for Latin1Bidi","synthetic":true,"types":[]},{"text":"impl Sync for Encoding","synthetic":true,"types":[]},{"text":"impl Sync for CoderResult","synthetic":true,"types":[]},{"text":"impl Sync for DecoderResult","synthetic":true,"types":[]},{"text":"impl Sync for Decoder","synthetic":true,"types":[]},{"text":"impl Sync for EncoderResult","synthetic":true,"types":[]},{"text":"impl Sync for Encoder","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl Sync for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Sync for Context&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SyncFailure&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Sync for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Sync for FnvHasher","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Sync for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Serializer&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Cancellation&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl !Sync for LocalPool","synthetic":true,"types":[]},{"text":"impl !Sync for LocalSpawner","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Enter","synthetic":true,"types":[]},{"text":"impl Sync for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Sync for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Sync for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RemoteHandle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Shared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for WeakShared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; Sync for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Sync for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; Sync for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Sync for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Sync for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Sync for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; Sync for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Sync for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Sync for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Sync for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Sync for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Sync for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for JoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for SelectAll&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Sync for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Sync for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Sync for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Sync for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for TryJoinAll&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for SelectOk&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Sync for AbortHandle","synthetic":true,"types":[]},{"text":"impl Sync for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Sync for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Sync for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, FromA, FromB&gt; Sync for Unzip&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Cycle&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Sync for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Sync for Next&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Sync for SelectNextSome&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; Sync for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; Sync for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Sync for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; Sync for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;St as Stream&gt;::Item as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for SplitStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; Sync for SplitSink&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Sync for ReuniteError&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; Sync for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; Sync for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Sync for TryNext&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Sync for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Sync for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Sync for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for TryBuffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;St as TryStream&gt;::Ok as TryFuture&gt;::Error: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;St as TryStream&gt;::Ok as TryFuture&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Sync for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; Sync for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for RepeatWith&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Empty&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Sync for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Pending&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Sync for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Sync for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; !Sync for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Sync for SelectAll&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Close&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; Sync for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Feed&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Flush&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; Sync for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; Sync for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Sync for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Sync for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R&gt; Sync for Unfold&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Sync for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; Sync for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; Sync for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for Close&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Sync for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Sync for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for FillBuf&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for Flush&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; Sync for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for Read&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadVectored&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadExact&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadLine&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadToEnd&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadToString&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReadUntil&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Sync for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReadHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for WriteHalf&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ReuniteError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for Write&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for WriteVectored&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Sync for WriteAll&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut:&nbsp;Sync&gt; Sync for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for MutexLockFuture&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync&gt; Sync for MutexGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, U:&nbsp;?Sized + Sync&gt; Sync for MappedMutexGuard&lt;'_, T, U&gt;","synthetic":false,"types":[]}];
implementors["fxhash"] = [{"text":"impl Sync for FxHasher","synthetic":true,"types":[]},{"text":"impl Sync for FxHasher64","synthetic":true,"types":[]},{"text":"impl Sync for FxHasher32","synthetic":true,"types":[]}];
implementors["gdk"] = [{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl !Sync for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl !Sync for Cursor","synthetic":true,"types":[]},{"text":"impl !Sync for Device","synthetic":true,"types":[]},{"text":"impl !Sync for DeviceManager","synthetic":true,"types":[]},{"text":"impl !Sync for Display","synthetic":true,"types":[]},{"text":"impl !Sync for DisplayManager","synthetic":true,"types":[]},{"text":"impl !Sync for DragContext","synthetic":true,"types":[]},{"text":"impl !Sync for FrameClock","synthetic":true,"types":[]},{"text":"impl !Sync for Keymap","synthetic":true,"types":[]},{"text":"impl !Sync for Screen","synthetic":true,"types":[]},{"text":"impl !Sync for Visual","synthetic":true,"types":[]},{"text":"impl !Sync for Window","synthetic":true,"types":[]},{"text":"impl !Sync for EventSequence","synthetic":true,"types":[]},{"text":"impl !Sync for FrameTimings","synthetic":true,"types":[]},{"text":"impl Sync for AxisUse","synthetic":true,"types":[]},{"text":"impl Sync for ByteOrder","synthetic":true,"types":[]},{"text":"impl Sync for CrossingMode","synthetic":true,"types":[]},{"text":"impl Sync for CursorType","synthetic":true,"types":[]},{"text":"impl Sync for DeviceType","synthetic":true,"types":[]},{"text":"impl Sync for DragProtocol","synthetic":true,"types":[]},{"text":"impl Sync for EventType","synthetic":true,"types":[]},{"text":"impl Sync for FullscreenMode","synthetic":true,"types":[]},{"text":"impl Sync for GrabOwnership","synthetic":true,"types":[]},{"text":"impl Sync for GrabStatus","synthetic":true,"types":[]},{"text":"impl Sync for Gravity","synthetic":true,"types":[]},{"text":"impl Sync for InputMode","synthetic":true,"types":[]},{"text":"impl Sync for InputSource","synthetic":true,"types":[]},{"text":"impl Sync for ModifierIntent","synthetic":true,"types":[]},{"text":"impl Sync for NotifyType","synthetic":true,"types":[]},{"text":"impl Sync for OwnerChange","synthetic":true,"types":[]},{"text":"impl Sync for PropMode","synthetic":true,"types":[]},{"text":"impl Sync for PropertyState","synthetic":true,"types":[]},{"text":"impl Sync for ScrollDirection","synthetic":true,"types":[]},{"text":"impl Sync for SettingAction","synthetic":true,"types":[]},{"text":"impl Sync for VisibilityState","synthetic":true,"types":[]},{"text":"impl Sync for VisualType","synthetic":true,"types":[]},{"text":"impl Sync for WindowEdge","synthetic":true,"types":[]},{"text":"impl Sync for WindowType","synthetic":true,"types":[]},{"text":"impl Sync for WindowTypeHint","synthetic":true,"types":[]},{"text":"impl Sync for WindowWindowClass","synthetic":true,"types":[]},{"text":"impl Sync for DragAction","synthetic":true,"types":[]},{"text":"impl Sync for EventMask","synthetic":true,"types":[]},{"text":"impl Sync for FrameClockPhase","synthetic":true,"types":[]},{"text":"impl Sync for ModifierType","synthetic":true,"types":[]},{"text":"impl Sync for WMDecoration","synthetic":true,"types":[]},{"text":"impl Sync for WMFunction","synthetic":true,"types":[]},{"text":"impl Sync for WindowHints","synthetic":true,"types":[]},{"text":"impl Sync for WindowState","synthetic":true,"types":[]},{"text":"impl !Sync for Atom","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ChangeData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for EventButton","synthetic":true,"types":[]},{"text":"impl !Sync for EventConfigure","synthetic":true,"types":[]},{"text":"impl !Sync for EventCrossing","synthetic":true,"types":[]},{"text":"impl !Sync for EventDND","synthetic":true,"types":[]},{"text":"impl !Sync for EventExpose","synthetic":true,"types":[]},{"text":"impl !Sync for EventFocus","synthetic":true,"types":[]},{"text":"impl !Sync for EventGrabBroken","synthetic":true,"types":[]},{"text":"impl !Sync for EventKey","synthetic":true,"types":[]},{"text":"impl !Sync for EventMotion","synthetic":true,"types":[]},{"text":"impl !Sync for EventOwnerChange","synthetic":true,"types":[]},{"text":"impl !Sync for EventProperty","synthetic":true,"types":[]},{"text":"impl !Sync for EventProximity","synthetic":true,"types":[]},{"text":"impl !Sync for EventScroll","synthetic":true,"types":[]},{"text":"impl !Sync for EventSelection","synthetic":true,"types":[]},{"text":"impl !Sync for EventSetting","synthetic":true,"types":[]},{"text":"impl !Sync for EventTouch","synthetic":true,"types":[]},{"text":"impl !Sync for EventVisibility","synthetic":true,"types":[]},{"text":"impl !Sync for EventWindowState","synthetic":true,"types":[]},{"text":"impl Sync for GRange","synthetic":true,"types":[]},{"text":"impl Sync for Geometry","synthetic":true,"types":[]},{"text":"impl Sync for KeymapKey","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl Sync for Rectangle","synthetic":true,"types":[]},{"text":"impl Sync for RgbaParseError","synthetic":true,"types":[]},{"text":"impl Sync for RGBA","synthetic":true,"types":[]},{"text":"impl Sync for TimeCoord","synthetic":true,"types":[]},{"text":"impl !Sync for WindowAttr","synthetic":true,"types":[]},{"text":"impl Sync for AppLaunchContextClass","synthetic":false,"types":[]},{"text":"impl Sync for CursorClass","synthetic":false,"types":[]},{"text":"impl Sync for DeviceClass","synthetic":false,"types":[]},{"text":"impl Sync for DeviceManagerClass","synthetic":false,"types":[]},{"text":"impl Sync for DisplayClass","synthetic":false,"types":[]},{"text":"impl Sync for DisplayManagerClass","synthetic":false,"types":[]},{"text":"impl Sync for DragContextClass","synthetic":false,"types":[]},{"text":"impl Sync for FrameClockClass","synthetic":false,"types":[]},{"text":"impl Sync for KeymapClass","synthetic":false,"types":[]},{"text":"impl Sync for ScreenClass","synthetic":false,"types":[]},{"text":"impl Sync for VisualClass","synthetic":false,"types":[]},{"text":"impl Sync for WindowClass","synthetic":false,"types":[]}];
implementors["gdk_pixbuf"] = [{"text":"impl !Sync for Pixbuf","synthetic":true,"types":[]},{"text":"impl !Sync for PixbufLoader","synthetic":true,"types":[]},{"text":"impl !Sync for PixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl !Sync for PixbufFormat","synthetic":true,"types":[]},{"text":"impl Sync for Colorspace","synthetic":true,"types":[]},{"text":"impl Sync for InterpType","synthetic":true,"types":[]},{"text":"impl Sync for PixbufAlphaMode","synthetic":true,"types":[]},{"text":"impl Sync for PixbufError","synthetic":true,"types":[]},{"text":"impl Sync for PixbufRotation","synthetic":true,"types":[]},{"text":"impl !Sync for PixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl !Sync for PixbufAnimation","synthetic":true,"types":[]},{"text":"impl Sync for PixbufClass","synthetic":false,"types":[]},{"text":"impl Sync for PixbufLoaderClass","synthetic":false,"types":[]},{"text":"impl Sync for PixbufSimpleAnimClass","synthetic":false,"types":[]}];
implementors["gdk_pixbuf_sys"] = [{"text":"impl Sync for GdkPixbufFormat","synthetic":true,"types":[]},{"text":"impl !Sync for GdkPixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl Sync for _GdkPixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl Sync for GdkPixbuf","synthetic":true,"types":[]},{"text":"impl Sync for GdkPixbufAnimation","synthetic":true,"types":[]},{"text":"impl Sync for GdkPixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl !Sync for GdkPixbufLoader","synthetic":true,"types":[]},{"text":"impl Sync for GdkPixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl Sync for GdkPixbufSimpleAnimIter","synthetic":true,"types":[]}];
implementors["gdk_sys"] = [{"text":"impl !Sync for GdkEvent","synthetic":true,"types":[]},{"text":"impl Sync for _GdkAtom","synthetic":true,"types":[]},{"text":"impl Sync for GdkColor","synthetic":true,"types":[]},{"text":"impl Sync for _GdkDevicePadInterface","synthetic":true,"types":[]},{"text":"impl Sync for _GdkDrawingContextClass","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventAny","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventButton","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventConfigure","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventCrossing","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventDND","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventExpose","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventFocus","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventGrabBroken","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventKey","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventMotion","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventOwnerChange","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventPadAxis","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventPadButton","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventPadGroupMode","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventProperty","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventProximity","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventScroll","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventSelection","synthetic":true,"types":[]},{"text":"impl Sync for GdkEventSequence","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventSetting","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventTouch","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventTouchpadPinch","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventTouchpadSwipe","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventVisibility","synthetic":true,"types":[]},{"text":"impl !Sync for GdkEventWindowState","synthetic":true,"types":[]},{"text":"impl Sync for _GdkFrameClockClass","synthetic":true,"types":[]},{"text":"impl Sync for _GdkFrameClockPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GdkFrameTimings","synthetic":true,"types":[]},{"text":"impl Sync for GdkGeometry","synthetic":true,"types":[]},{"text":"impl Sync for GdkKeymapKey","synthetic":true,"types":[]},{"text":"impl Sync for _GdkMonitorClass","synthetic":true,"types":[]},{"text":"impl Sync for GdkPoint","synthetic":true,"types":[]},{"text":"impl Sync for GdkRGBA","synthetic":true,"types":[]},{"text":"impl Sync for GdkRectangle","synthetic":true,"types":[]},{"text":"impl Sync for GdkTimeCoord","synthetic":true,"types":[]},{"text":"impl !Sync for GdkWindowAttr","synthetic":true,"types":[]},{"text":"impl !Sync for GdkWindowClass","synthetic":true,"types":[]},{"text":"impl Sync for _GdkWindowRedirect","synthetic":true,"types":[]},{"text":"impl Sync for GdkAppLaunchContext","synthetic":true,"types":[]},{"text":"impl Sync for GdkCursor","synthetic":true,"types":[]},{"text":"impl Sync for GdkDevice","synthetic":true,"types":[]},{"text":"impl Sync for GdkDeviceManager","synthetic":true,"types":[]},{"text":"impl Sync for GdkDeviceTool","synthetic":true,"types":[]},{"text":"impl Sync for GdkDisplay","synthetic":true,"types":[]},{"text":"impl Sync for GdkDisplayManager","synthetic":true,"types":[]},{"text":"impl Sync for GdkDragContext","synthetic":true,"types":[]},{"text":"impl Sync for GdkDrawingContext","synthetic":true,"types":[]},{"text":"impl Sync for GdkFrameClock","synthetic":true,"types":[]},{"text":"impl Sync for GdkGLContext","synthetic":true,"types":[]},{"text":"impl Sync for GdkKeymap","synthetic":true,"types":[]},{"text":"impl Sync for GdkMonitor","synthetic":true,"types":[]},{"text":"impl Sync for GdkScreen","synthetic":true,"types":[]},{"text":"impl !Sync for GdkSeat","synthetic":true,"types":[]},{"text":"impl Sync for GdkVisual","synthetic":true,"types":[]},{"text":"impl Sync for GdkWindow","synthetic":true,"types":[]},{"text":"impl Sync for GdkDevicePad","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["gimli"] = [{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl Sync for Encoding","synthetic":true,"types":[]},{"text":"impl Sync for LineEncoding","synthetic":true,"types":[]},{"text":"impl Sync for Register","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugAbbrevOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugAddrBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugAddrIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugInfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLineOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLineStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocationListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLocListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLocListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugMacinfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugMacroOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RangeListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugRngListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugRngListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugStrOffsetsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugStrOffsetsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugTypesOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DebugTypeSignature","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for EhFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnitSectionOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SectionId","synthetic":true,"types":[]},{"text":"impl Sync for DwoId","synthetic":true,"types":[]},{"text":"impl Sync for DwarfFileType","synthetic":true,"types":[]},{"text":"impl Sync for Arm","synthetic":true,"types":[]},{"text":"impl Sync for X86","synthetic":true,"types":[]},{"text":"impl Sync for X86_64","synthetic":true,"types":[]},{"text":"impl Sync for DwUt","synthetic":true,"types":[]},{"text":"impl Sync for DwCfa","synthetic":true,"types":[]},{"text":"impl Sync for DwChildren","synthetic":true,"types":[]},{"text":"impl Sync for DwTag","synthetic":true,"types":[]},{"text":"impl Sync for DwAt","synthetic":true,"types":[]},{"text":"impl Sync for DwForm","synthetic":true,"types":[]},{"text":"impl Sync for DwAte","synthetic":true,"types":[]},{"text":"impl Sync for DwLle","synthetic":true,"types":[]},{"text":"impl Sync for DwDs","synthetic":true,"types":[]},{"text":"impl Sync for DwEnd","synthetic":true,"types":[]},{"text":"impl Sync for DwAccess","synthetic":true,"types":[]},{"text":"impl Sync for DwVis","synthetic":true,"types":[]},{"text":"impl Sync for DwVirtuality","synthetic":true,"types":[]},{"text":"impl Sync for DwLang","synthetic":true,"types":[]},{"text":"impl Sync for DwAddr","synthetic":true,"types":[]},{"text":"impl Sync for DwId","synthetic":true,"types":[]},{"text":"impl Sync for DwCc","synthetic":true,"types":[]},{"text":"impl Sync for DwInl","synthetic":true,"types":[]},{"text":"impl Sync for DwOrd","synthetic":true,"types":[]},{"text":"impl Sync for DwDsc","synthetic":true,"types":[]},{"text":"impl Sync for DwIdx","synthetic":true,"types":[]},{"text":"impl Sync for DwDefaulted","synthetic":true,"types":[]},{"text":"impl Sync for DwLns","synthetic":true,"types":[]},{"text":"impl Sync for DwLne","synthetic":true,"types":[]},{"text":"impl Sync for DwLnct","synthetic":true,"types":[]},{"text":"impl Sync for DwMacro","synthetic":true,"types":[]},{"text":"impl Sync for DwRle","synthetic":true,"types":[]},{"text":"impl Sync for DwOp","synthetic":true,"types":[]},{"text":"impl Sync for DwEhPe","synthetic":true,"types":[]},{"text":"impl Sync for RunTimeEndian","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]},{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugAddr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ParsedEhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for EhHdrTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EhFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BaseAddresses","synthetic":true,"types":[]},{"text":"impl Sync for SectionBaseAddresses","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Sync for CfiEntriesIter&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Sync for CieOrFde&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Augmentation","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for CommonInformationEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Sync for PartialFrameDescriptionEntry&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for FrameDescriptionEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for UninitializedUnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for UnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for UnwindTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'iter, R&gt; Sync for RegisterRuleIter&lt;'iter, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for UnwindTableRow&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for CfaRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RegisterRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for CallFrameInstruction&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for CallFrameInstructionIter&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Pointer","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Dwarf&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Unit&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RangeIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, Endian&gt; Sync for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ReaderOffsetId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugAbbrev&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Abbreviations","synthetic":true,"types":[]},{"text":"impl Sync for Abbreviation","synthetic":true,"types":[]},{"text":"impl Sync for AttributeSpecification","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ArangeEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugAranges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ArangeEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLine&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Program, Offset&gt; Sync for LineRows&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for LineInstruction&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LineInstructions&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for LineRow","synthetic":true,"types":[]},{"text":"impl Sync for ColumnType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LineSequence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for LineProgramHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for IncompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for CompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for FileEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FileEntryFormat","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLoc&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLocLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LocationLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RawLocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RawLocListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LocationListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DieReference&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Operation&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Location&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Piece&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EvaluationResult&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Expression&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for OperationIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Evaluation&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubNamesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugPubNames&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubNamesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubTypesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugPubTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubTypesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugRanges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugRngLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RangeLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RawRngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RawRngListEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Range","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugStrOffsets&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLineStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnitOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugInfo&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugInfoUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Offset&gt; Sync for UnitType&lt;Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for UnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R, Offset&nbsp;=&nbsp;&lt;R as Reader&gt;::Offset&gt; !Sync for DebuggingInformationEntry&lt;'abbrev, 'unit, R, Offset&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for AttributeValue&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Attribute&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R&gt; !Sync for AttrsIter&lt;'abbrev, 'entry, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Sync for EntriesRaw&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Sync for EntriesCursor&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Sync for EntriesTree&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; !Sync for EntriesTreeNode&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; !Sync for EntriesTreeIter&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugTypesUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ValueType","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["gio"] = [{"text":"impl Sync for OwnerId","synthetic":true,"types":[]},{"text":"impl Sync for RegistrationId","synthetic":true,"types":[]},{"text":"impl Sync for WatcherId","synthetic":true,"types":[]},{"text":"impl Sync for ActionGroupExportId","synthetic":true,"types":[]},{"text":"impl Sync for MenuModelExportId","synthetic":true,"types":[]},{"text":"impl Sync for FilterId","synthetic":true,"types":[]},{"text":"impl Sync for SignalSubscriptionId","synthetic":true,"types":[]},{"text":"impl !Sync for FileAttributematcherIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for InetAddressBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for IOStreamAsyncReadWrite&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for InputStreamRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for InputStreamAsyncBufRead&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for OutputStreamWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for InputStreamAsyncRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for OutputStreamAsyncWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnixSocketAddressPath&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Action","synthetic":true,"types":[]},{"text":"impl !Sync for ActionGroup","synthetic":true,"types":[]},{"text":"impl !Sync for ActionMap","synthetic":true,"types":[]},{"text":"impl !Sync for AppInfo","synthetic":true,"types":[]},{"text":"impl !Sync for AppInfoMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl !Sync for Application","synthetic":true,"types":[]},{"text":"impl !Sync for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl !Sync for BufferedInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for BufferedInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for BufferedOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for BufferedOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for BytesIcon","synthetic":true,"types":[]},{"text":"impl !Sync for CharsetConverter","synthetic":true,"types":[]},{"text":"impl Sync for CharsetConverterBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Converter","synthetic":true,"types":[]},{"text":"impl !Sync for ConverterInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for ConverterInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ConverterOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for ConverterOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Credentials","synthetic":true,"types":[]},{"text":"impl !Sync for DBusAuthObserver","synthetic":true,"types":[]},{"text":"impl !Sync for DBusConnection","synthetic":true,"types":[]},{"text":"impl !Sync for DBusInterface","synthetic":true,"types":[]},{"text":"impl !Sync for DBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl !Sync for DBusMenuModel","synthetic":true,"types":[]},{"text":"impl !Sync for DBusMessage","synthetic":true,"types":[]},{"text":"impl !Sync for DBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl !Sync for DBusObject","synthetic":true,"types":[]},{"text":"impl !Sync for DBusProxy","synthetic":true,"types":[]},{"text":"impl !Sync for DBusServer","synthetic":true,"types":[]},{"text":"impl !Sync for DataInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for DataInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for DataOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for DataOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for DesktopAppInfo","synthetic":true,"types":[]},{"text":"impl !Sync for Drive","synthetic":true,"types":[]},{"text":"impl !Sync for Emblem","synthetic":true,"types":[]},{"text":"impl !Sync for EmblemedIcon","synthetic":true,"types":[]},{"text":"impl !Sync for FileEnumerator","synthetic":true,"types":[]},{"text":"impl !Sync for FileIOStream","synthetic":true,"types":[]},{"text":"impl !Sync for FileIcon","synthetic":true,"types":[]},{"text":"impl !Sync for FileInfo","synthetic":true,"types":[]},{"text":"impl !Sync for FileInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for FileMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for FileOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for FilenameCompleter","synthetic":true,"types":[]},{"text":"impl !Sync for FilterInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for FilterOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for IOStream","synthetic":true,"types":[]},{"text":"impl !Sync for Icon","synthetic":true,"types":[]},{"text":"impl !Sync for InputStream","synthetic":true,"types":[]},{"text":"impl !Sync for LoadableIcon","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for MemoryOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for Menu","synthetic":true,"types":[]},{"text":"impl !Sync for MenuAttributeIter","synthetic":true,"types":[]},{"text":"impl !Sync for MenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for MenuLinkIter","synthetic":true,"types":[]},{"text":"impl !Sync for MenuModel","synthetic":true,"types":[]},{"text":"impl !Sync for Mount","synthetic":true,"types":[]},{"text":"impl !Sync for MountOperation","synthetic":true,"types":[]},{"text":"impl !Sync for NetworkMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for NetworkService","synthetic":true,"types":[]},{"text":"impl !Sync for Notification","synthetic":true,"types":[]},{"text":"impl !Sync for OutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for Permission","synthetic":true,"types":[]},{"text":"impl !Sync for PollableInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for PollableOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for PropertyAction","synthetic":true,"types":[]},{"text":"impl !Sync for Proxy","synthetic":true,"types":[]},{"text":"impl !Sync for ProxyResolver","synthetic":true,"types":[]},{"text":"impl !Sync for RemoteActionGroup","synthetic":true,"types":[]},{"text":"impl !Sync for Resolver","synthetic":true,"types":[]},{"text":"impl !Sync for Seekable","synthetic":true,"types":[]},{"text":"impl !Sync for Settings","synthetic":true,"types":[]},{"text":"impl !Sync for SettingsBackend","synthetic":true,"types":[]},{"text":"impl !Sync for SimpleAction","synthetic":true,"types":[]},{"text":"impl !Sync for SimpleActionGroup","synthetic":true,"types":[]},{"text":"impl !Sync for SimplePermission","synthetic":true,"types":[]},{"text":"impl !Sync for Socket","synthetic":true,"types":[]},{"text":"impl !Sync for SocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl !Sync for SocketClient","synthetic":true,"types":[]},{"text":"impl !Sync for SocketConnectable","synthetic":true,"types":[]},{"text":"impl !Sync for SocketConnection","synthetic":true,"types":[]},{"text":"impl !Sync for SocketListener","synthetic":true,"types":[]},{"text":"impl !Sync for SocketService","synthetic":true,"types":[]},{"text":"impl !Sync for Subprocess","synthetic":true,"types":[]},{"text":"impl !Sync for SubprocessLauncher","synthetic":true,"types":[]},{"text":"impl !Sync for TcpConnection","synthetic":true,"types":[]},{"text":"impl !Sync for ThemedIcon","synthetic":true,"types":[]},{"text":"impl !Sync for ThreadedSocketService","synthetic":true,"types":[]},{"text":"impl !Sync for TlsCertificate","synthetic":true,"types":[]},{"text":"impl !Sync for TlsClientConnection","synthetic":true,"types":[]},{"text":"impl !Sync for TlsConnection","synthetic":true,"types":[]},{"text":"impl !Sync for TlsDatabase","synthetic":true,"types":[]},{"text":"impl !Sync for TlsFileDatabase","synthetic":true,"types":[]},{"text":"impl !Sync for TlsInteraction","synthetic":true,"types":[]},{"text":"impl !Sync for TlsPassword","synthetic":true,"types":[]},{"text":"impl !Sync for TlsServerConnection","synthetic":true,"types":[]},{"text":"impl !Sync for UnixFDList","synthetic":true,"types":[]},{"text":"impl !Sync for UnixInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for UnixOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for Volume","synthetic":true,"types":[]},{"text":"impl !Sync for VolumeMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for ZlibCompressor","synthetic":true,"types":[]},{"text":"impl !Sync for ZlibDecompressor","synthetic":true,"types":[]},{"text":"impl !Sync for DBusArgInfo","synthetic":true,"types":[]},{"text":"impl !Sync for DBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl !Sync for DBusMethodInfo","synthetic":true,"types":[]},{"text":"impl !Sync for DBusNodeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for DBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Sync for DBusSignalInfo","synthetic":true,"types":[]},{"text":"impl !Sync for FileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl !Sync for Resource","synthetic":true,"types":[]},{"text":"impl !Sync for SettingsSchema","synthetic":true,"types":[]},{"text":"impl !Sync for SettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl !Sync for SettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl !Sync for SrvTarget","synthetic":true,"types":[]},{"text":"impl Sync for BusType","synthetic":true,"types":[]},{"text":"impl Sync for ConverterResult","synthetic":true,"types":[]},{"text":"impl Sync for CredentialsType","synthetic":true,"types":[]},{"text":"impl Sync for DBusMessageByteOrder","synthetic":true,"types":[]},{"text":"impl Sync for DBusMessageHeaderField","synthetic":true,"types":[]},{"text":"impl Sync for DBusMessageType","synthetic":true,"types":[]},{"text":"impl Sync for DataStreamByteOrder","synthetic":true,"types":[]},{"text":"impl Sync for DataStreamNewlineType","synthetic":true,"types":[]},{"text":"impl Sync for DriveStartStopType","synthetic":true,"types":[]},{"text":"impl Sync for EmblemOrigin","synthetic":true,"types":[]},{"text":"impl Sync for FileAttributeStatus","synthetic":true,"types":[]},{"text":"impl Sync for FileAttributeType","synthetic":true,"types":[]},{"text":"impl Sync for FileMonitorEvent","synthetic":true,"types":[]},{"text":"impl Sync for FileType","synthetic":true,"types":[]},{"text":"impl Sync for IOErrorEnum","synthetic":true,"types":[]},{"text":"impl Sync for MountOperationResult","synthetic":true,"types":[]},{"text":"impl Sync for NotificationPriority","synthetic":true,"types":[]},{"text":"impl Sync for PasswordSave","synthetic":true,"types":[]},{"text":"impl Sync for ResolverRecordType","synthetic":true,"types":[]},{"text":"impl Sync for ResourceError","synthetic":true,"types":[]},{"text":"impl Sync for SocketClientEvent","synthetic":true,"types":[]},{"text":"impl Sync for SocketFamily","synthetic":true,"types":[]},{"text":"impl Sync for SocketProtocol","synthetic":true,"types":[]},{"text":"impl Sync for SocketType","synthetic":true,"types":[]},{"text":"impl Sync for TlsAuthenticationMode","synthetic":true,"types":[]},{"text":"impl Sync for TlsCertificateRequestFlags","synthetic":true,"types":[]},{"text":"impl Sync for TlsDatabaseLookupFlags","synthetic":true,"types":[]},{"text":"impl Sync for TlsInteractionResult","synthetic":true,"types":[]},{"text":"impl Sync for TlsRehandshakeMode","synthetic":true,"types":[]},{"text":"impl Sync for UnixSocketAddressType","synthetic":true,"types":[]},{"text":"impl Sync for ZlibCompressorFormat","synthetic":true,"types":[]},{"text":"impl Sync for AppInfoCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for ApplicationFlags","synthetic":true,"types":[]},{"text":"impl Sync for AskPasswordFlags","synthetic":true,"types":[]},{"text":"impl Sync for BusNameOwnerFlags","synthetic":true,"types":[]},{"text":"impl Sync for BusNameWatcherFlags","synthetic":true,"types":[]},{"text":"impl Sync for ConverterFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusCallFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusCapabilityFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusConnectionFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusInterfaceSkeletonFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusMessageFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusProxyFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusSendMessageFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusServerFlags","synthetic":true,"types":[]},{"text":"impl Sync for DBusSignalFlags","synthetic":true,"types":[]},{"text":"impl Sync for DriveStartFlags","synthetic":true,"types":[]},{"text":"impl Sync for FileCopyFlags","synthetic":true,"types":[]},{"text":"impl Sync for FileCreateFlags","synthetic":true,"types":[]},{"text":"impl Sync for FileMeasureFlags","synthetic":true,"types":[]},{"text":"impl Sync for FileMonitorFlags","synthetic":true,"types":[]},{"text":"impl Sync for FileQueryInfoFlags","synthetic":true,"types":[]},{"text":"impl Sync for IOStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl Sync for MountMountFlags","synthetic":true,"types":[]},{"text":"impl Sync for MountUnmountFlags","synthetic":true,"types":[]},{"text":"impl Sync for OutputStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl Sync for ResourceLookupFlags","synthetic":true,"types":[]},{"text":"impl Sync for SettingsBindFlags","synthetic":true,"types":[]},{"text":"impl Sync for SubprocessFlags","synthetic":true,"types":[]},{"text":"impl Sync for TlsCertificateFlags","synthetic":true,"types":[]},{"text":"impl Sync for TlsDatabaseVerifyFlags","synthetic":true,"types":[]},{"text":"impl Sync for TlsPasswordFlags","synthetic":true,"types":[]},{"text":"impl&lt;F, O, T, E&gt; Sync for GioFuture&lt;F, O, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for GioFutureResult&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for ArgumentList","synthetic":true,"types":[]},{"text":"impl !Sync for ReadInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for WriteOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for AppInfoMonitorClass","synthetic":false,"types":[]},{"text":"impl Sync for AppLaunchContextClass","synthetic":false,"types":[]},{"text":"impl Sync for ApplicationClass","synthetic":false,"types":[]},{"text":"impl Sync for ApplicationCommandLineClass","synthetic":false,"types":[]},{"text":"impl Sync for BufferedInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for BufferedOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for BytesIconClass","synthetic":false,"types":[]},{"text":"impl Sync for CancellableClass","synthetic":false,"types":[]},{"text":"impl Sync for Cancellable","synthetic":false,"types":[]},{"text":"impl Sync for CharsetConverterClass","synthetic":false,"types":[]},{"text":"impl Sync for ConverterInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for ConverterOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for CredentialsClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusAuthObserverClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusConnectionClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusInterfaceSkeletonClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusMenuModelClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusMessageClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusMethodInvocationClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusProxyClass","synthetic":false,"types":[]},{"text":"impl Sync for DBusServerClass","synthetic":false,"types":[]},{"text":"impl Sync for DataInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for DataOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for DesktopAppInfoClass","synthetic":false,"types":[]},{"text":"impl Sync for EmblemClass","synthetic":false,"types":[]},{"text":"impl Sync for EmblemedIconClass","synthetic":false,"types":[]},{"text":"impl Sync for File","synthetic":false,"types":[]},{"text":"impl Sync for FileEnumeratorClass","synthetic":false,"types":[]},{"text":"impl Sync for FileIOStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for FileIconClass","synthetic":false,"types":[]},{"text":"impl Sync for FileInfoClass","synthetic":false,"types":[]},{"text":"impl Sync for FileInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for FileMonitorClass","synthetic":false,"types":[]},{"text":"impl Sync for FileOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for FilenameCompleterClass","synthetic":false,"types":[]},{"text":"impl Sync for FilterInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for FilterOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for IOStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for InetAddressClass","synthetic":false,"types":[]},{"text":"impl Sync for InetAddress","synthetic":false,"types":[]},{"text":"impl Sync for InetAddressMaskClass","synthetic":false,"types":[]},{"text":"impl Sync for InetAddressMask","synthetic":false,"types":[]},{"text":"impl Sync for InetSocketAddressClass","synthetic":false,"types":[]},{"text":"impl Sync for InetSocketAddress","synthetic":false,"types":[]},{"text":"impl Sync for InputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for MemoryInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for MemoryOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuAttributeIterClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuItemClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuLinkIterClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuModelClass","synthetic":false,"types":[]},{"text":"impl Sync for MountOperationClass","synthetic":false,"types":[]},{"text":"impl Sync for NetworkAddressClass","synthetic":false,"types":[]},{"text":"impl Sync for NetworkAddress","synthetic":false,"types":[]},{"text":"impl Sync for NetworkServiceClass","synthetic":false,"types":[]},{"text":"impl Sync for NotificationClass","synthetic":false,"types":[]},{"text":"impl Sync for OutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for PermissionClass","synthetic":false,"types":[]},{"text":"impl Sync for PropertyActionClass","synthetic":false,"types":[]},{"text":"impl Sync for ProxyAddressClass","synthetic":false,"types":[]},{"text":"impl Sync for ProxyAddress","synthetic":false,"types":[]},{"text":"impl Sync for ResolverClass","synthetic":false,"types":[]},{"text":"impl Sync for SettingsClass","synthetic":false,"types":[]},{"text":"impl Sync for SettingsBackendClass","synthetic":false,"types":[]},{"text":"impl Sync for SimpleActionClass","synthetic":false,"types":[]},{"text":"impl Sync for SimpleActionGroupClass","synthetic":false,"types":[]},{"text":"impl Sync for SimplePermissionClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketAddressClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketAddress","synthetic":false,"types":[]},{"text":"impl Sync for SocketAddressEnumeratorClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketClientClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketConnectionClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketListenerClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketServiceClass","synthetic":false,"types":[]},{"text":"impl Sync for SubprocessClass","synthetic":false,"types":[]},{"text":"impl Sync for SubprocessLauncherClass","synthetic":false,"types":[]},{"text":"impl Sync for TcpConnectionClass","synthetic":false,"types":[]},{"text":"impl Sync for ThemedIconClass","synthetic":false,"types":[]},{"text":"impl Sync for ThreadedSocketServiceClass","synthetic":false,"types":[]},{"text":"impl Sync for TlsCertificateClass","synthetic":false,"types":[]},{"text":"impl Sync for TlsConnectionClass","synthetic":false,"types":[]},{"text":"impl Sync for TlsDatabaseClass","synthetic":false,"types":[]},{"text":"impl Sync for TlsInteractionClass","synthetic":false,"types":[]},{"text":"impl Sync for TlsPasswordClass","synthetic":false,"types":[]},{"text":"impl Sync for UnixFDListClass","synthetic":false,"types":[]},{"text":"impl Sync for UnixInputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for UnixOutputStreamClass","synthetic":false,"types":[]},{"text":"impl Sync for UnixSocketAddressClass","synthetic":false,"types":[]},{"text":"impl Sync for UnixSocketAddress","synthetic":false,"types":[]},{"text":"impl Sync for VfsClass","synthetic":false,"types":[]},{"text":"impl Sync for Vfs","synthetic":false,"types":[]},{"text":"impl Sync for VolumeMonitorClass","synthetic":false,"types":[]},{"text":"impl Sync for ZlibCompressorClass","synthetic":false,"types":[]},{"text":"impl Sync for ZlibDecompressorClass","synthetic":false,"types":[]}];
implementors["gio_sys"] = [{"text":"impl !Sync for GActionEntry","synthetic":true,"types":[]},{"text":"impl Sync for GActionGroupInterface","synthetic":true,"types":[]},{"text":"impl Sync for GActionInterface","synthetic":true,"types":[]},{"text":"impl Sync for GActionMapInterface","synthetic":true,"types":[]},{"text":"impl Sync for GAppInfoIface","synthetic":true,"types":[]},{"text":"impl !Sync for GAppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl Sync for _GAppLaunchContextPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GApplicationClass","synthetic":true,"types":[]},{"text":"impl !Sync for GApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl Sync for _GApplicationCommandLinePrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GApplicationPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GAsyncInitableIface","synthetic":true,"types":[]},{"text":"impl Sync for GAsyncResultIface","synthetic":true,"types":[]},{"text":"impl !Sync for GBufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GBufferedInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GBufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GBufferedOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GCancellableClass","synthetic":true,"types":[]},{"text":"impl Sync for _GCancellablePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GCharsetConverterClass","synthetic":true,"types":[]},{"text":"impl Sync for GConverterIface","synthetic":true,"types":[]},{"text":"impl !Sync for GConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GConverterInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GConverterOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GCredentialsClass","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusAnnotationInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusArgInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusErrorEntry","synthetic":true,"types":[]},{"text":"impl Sync for GDBusInterfaceIface","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDBusInterfaceSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusInterfaceVTable","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusMethodInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusNodeInfo","synthetic":true,"types":[]},{"text":"impl Sync for GDBusObjectIface","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectManagerClientClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDBusObjectManagerClientPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GDBusObjectManagerIface","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectManagerServerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDBusObjectManagerServerPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectProxyClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDBusObjectProxyPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectSkeletonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDBusObjectSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusProxyClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDBusProxyPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusSignalInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusSubtreeVTable","synthetic":true,"types":[]},{"text":"impl !Sync for GDataInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDataInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GDataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GDataOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GDatagramBasedInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GDesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl Sync for GDesktopAppInfoLookupIface","synthetic":true,"types":[]},{"text":"impl Sync for GDriveIface","synthetic":true,"types":[]},{"text":"impl Sync for GDtlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl Sync for GDtlsConnectionInterface","synthetic":true,"types":[]},{"text":"impl Sync for GDtlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl Sync for _GEmblemClass","synthetic":true,"types":[]},{"text":"impl !Sync for GEmblemedIconClass","synthetic":true,"types":[]},{"text":"impl Sync for _GEmblemedIconPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GFileAttributeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GFileAttributeInfoList","synthetic":true,"types":[]},{"text":"impl Sync for GFileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl Sync for GFileDescriptorBasedIface","synthetic":true,"types":[]},{"text":"impl !Sync for GFileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Sync for _GFileEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GFileIOStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GFileIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GFileIconClass","synthetic":true,"types":[]},{"text":"impl Sync for GFileIface","synthetic":true,"types":[]},{"text":"impl Sync for _GFileInfoClass","synthetic":true,"types":[]},{"text":"impl !Sync for GFileInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GFileInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GFileMonitorClass","synthetic":true,"types":[]},{"text":"impl Sync for _GFileMonitorPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GFileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GFileOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GFilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl !Sync for GFilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl !Sync for GFilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GIOExtension","synthetic":true,"types":[]},{"text":"impl Sync for _GIOExtensionPoint","synthetic":true,"types":[]},{"text":"impl Sync for _GIOModuleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GIOModuleScope","synthetic":true,"types":[]},{"text":"impl Sync for _GIOSchedulerJob","synthetic":true,"types":[]},{"text":"impl Sync for _GIOStreamAdapter","synthetic":true,"types":[]},{"text":"impl !Sync for GIOStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GIconIface","synthetic":true,"types":[]},{"text":"impl !Sync for GInetAddressClass","synthetic":true,"types":[]},{"text":"impl !Sync for GInetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl Sync for _GInetAddressMaskPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GInetAddressPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GInetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GInetSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GInitableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GInputMessage","synthetic":true,"types":[]},{"text":"impl !Sync for GInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GInputVector","synthetic":true,"types":[]},{"text":"impl Sync for GListModelInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GListStoreClass","synthetic":true,"types":[]},{"text":"impl Sync for GLoadableIconIface","synthetic":true,"types":[]},{"text":"impl !Sync for GMemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GMemoryInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GMemoryMonitorInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GMemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GMemoryOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GMenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl Sync for _GMenuAttributeIterPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GMenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl Sync for _GMenuLinkIterPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GMenuModelClass","synthetic":true,"types":[]},{"text":"impl Sync for _GMenuModelPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GMountIface","synthetic":true,"types":[]},{"text":"impl !Sync for GMountOperationClass","synthetic":true,"types":[]},{"text":"impl Sync for _GMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GNativeSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GNativeSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GNativeVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GNetworkAddressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GNetworkAddressPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GNetworkMonitorInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GNetworkServiceClass","synthetic":true,"types":[]},{"text":"impl Sync for _GNetworkServicePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GOutputMessage","synthetic":true,"types":[]},{"text":"impl !Sync for GOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GOutputVector","synthetic":true,"types":[]},{"text":"impl !Sync for GPermissionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GPermissionPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GPollableInputStreamInterface","synthetic":true,"types":[]},{"text":"impl Sync for GPollableOutputStreamInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GProxyAddressClass","synthetic":true,"types":[]},{"text":"impl !Sync for GProxyAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Sync for _GProxyAddressEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GProxyAddressPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GProxyInterface","synthetic":true,"types":[]},{"text":"impl Sync for GProxyResolverInterface","synthetic":true,"types":[]},{"text":"impl Sync for GRemoteActionGroupInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GResolverClass","synthetic":true,"types":[]},{"text":"impl Sync for _GResolverPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GResource","synthetic":true,"types":[]},{"text":"impl Sync for GSeekableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GSettingsBackendClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSettingsBackendPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GSettingsClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSettingsPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GSettingsSchema","synthetic":true,"types":[]},{"text":"impl Sync for GSettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl Sync for GSettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl !Sync for GSimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSimpleActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GSimpleAsyncResultClass","synthetic":true,"types":[]},{"text":"impl !Sync for GSimpleProxyResolverClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSimpleProxyResolverPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketAddressClass","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketClass","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketClientClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSocketClientPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GSocketConnectableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketConnectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSocketConnectionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketControlMessageClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSocketControlMessagePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketListenerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSocketListenerPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GSocketPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketServiceClass","synthetic":true,"types":[]},{"text":"impl Sync for _GSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GSrvTarget","synthetic":true,"types":[]},{"text":"impl !Sync for GStaticResource","synthetic":true,"types":[]},{"text":"impl Sync for _GTaskClass","synthetic":true,"types":[]},{"text":"impl !Sync for GTcpConnectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTcpConnectionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GTcpWrapperConnectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTcpWrapperConnectionPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GThemedIconClass","synthetic":true,"types":[]},{"text":"impl !Sync for GThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl Sync for _GThreadedSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GTlsBackendInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsCertificateClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTlsCertificatePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GTlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsConnectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTlsConnectionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTlsDatabasePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsFileDatabaseInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsInteractionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTlsInteractionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsPasswordClass","synthetic":true,"types":[]},{"text":"impl Sync for _GTlsPasswordPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GTlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixConnectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixConnectionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixCredentialsMessageClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixCredentialsMessagePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixFDListClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixFDListPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixFDMessageClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixFDMessagePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GUnixMountEntry","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixMountMonitorClass","synthetic":true,"types":[]},{"text":"impl Sync for GUnixMountPoint","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GUnixSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GVfsClass","synthetic":true,"types":[]},{"text":"impl Sync for GVolumeIface","synthetic":true,"types":[]},{"text":"impl !Sync for GVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl Sync for GAppInfoMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for GAppLaunchContext","synthetic":true,"types":[]},{"text":"impl !Sync for GApplication","synthetic":true,"types":[]},{"text":"impl !Sync for GApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl !Sync for GBufferedInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GBufferedOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GBytesIcon","synthetic":true,"types":[]},{"text":"impl !Sync for GCancellable","synthetic":true,"types":[]},{"text":"impl Sync for GCharsetConverter","synthetic":true,"types":[]},{"text":"impl !Sync for GConverterInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GConverterOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GCredentials","synthetic":true,"types":[]},{"text":"impl Sync for GDBusActionGroup","synthetic":true,"types":[]},{"text":"impl Sync for GDBusAuthObserver","synthetic":true,"types":[]},{"text":"impl Sync for GDBusConnection","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl Sync for GDBusMenuModel","synthetic":true,"types":[]},{"text":"impl Sync for GDBusMessage","synthetic":true,"types":[]},{"text":"impl Sync for GDBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectManagerClient","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectManagerServer","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectProxy","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusObjectSkeleton","synthetic":true,"types":[]},{"text":"impl !Sync for GDBusProxy","synthetic":true,"types":[]},{"text":"impl Sync for GDBusServer","synthetic":true,"types":[]},{"text":"impl !Sync for GDataInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GDataOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GDesktopAppInfo","synthetic":true,"types":[]},{"text":"impl Sync for GEmblem","synthetic":true,"types":[]},{"text":"impl !Sync for GEmblemedIcon","synthetic":true,"types":[]},{"text":"impl !Sync for GFileEnumerator","synthetic":true,"types":[]},{"text":"impl !Sync for GFileIOStream","synthetic":true,"types":[]},{"text":"impl Sync for GFileIcon","synthetic":true,"types":[]},{"text":"impl Sync for GFileInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GFileInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GFileMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for GFileOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GFilenameCompleter","synthetic":true,"types":[]},{"text":"impl !Sync for GFilterInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GFilterOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GIOModule","synthetic":true,"types":[]},{"text":"impl !Sync for GIOStream","synthetic":true,"types":[]},{"text":"impl !Sync for GInetAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GInetAddressMask","synthetic":true,"types":[]},{"text":"impl !Sync for GInetSocketAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GInputStream","synthetic":true,"types":[]},{"text":"impl Sync for GListStore","synthetic":true,"types":[]},{"text":"impl !Sync for GMemoryInputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GMemoryOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GMenu","synthetic":true,"types":[]},{"text":"impl !Sync for GMenuAttributeIter","synthetic":true,"types":[]},{"text":"impl Sync for GMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GMenuLinkIter","synthetic":true,"types":[]},{"text":"impl !Sync for GMenuModel","synthetic":true,"types":[]},{"text":"impl !Sync for GMountOperation","synthetic":true,"types":[]},{"text":"impl !Sync for GNativeSocketAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GNativeVolumeMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for GNetworkAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GNetworkService","synthetic":true,"types":[]},{"text":"impl Sync for GNotification","synthetic":true,"types":[]},{"text":"impl !Sync for GOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GPermission","synthetic":true,"types":[]},{"text":"impl Sync for GPropertyAction","synthetic":true,"types":[]},{"text":"impl !Sync for GProxyAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GProxyAddressEnumerator","synthetic":true,"types":[]},{"text":"impl !Sync for GResolver","synthetic":true,"types":[]},{"text":"impl !Sync for GSettings","synthetic":true,"types":[]},{"text":"impl !Sync for GSettingsBackend","synthetic":true,"types":[]},{"text":"impl Sync for GSimpleAction","synthetic":true,"types":[]},{"text":"impl !Sync for GSimpleActionGroup","synthetic":true,"types":[]},{"text":"impl Sync for GSimpleAsyncResult","synthetic":true,"types":[]},{"text":"impl Sync for GSimpleIOStream","synthetic":true,"types":[]},{"text":"impl Sync for GSimplePermission","synthetic":true,"types":[]},{"text":"impl !Sync for GSimpleProxyResolver","synthetic":true,"types":[]},{"text":"impl !Sync for GSocket","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketClient","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketConnection","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketControlMessage","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketListener","synthetic":true,"types":[]},{"text":"impl !Sync for GSocketService","synthetic":true,"types":[]},{"text":"impl Sync for GSubprocess","synthetic":true,"types":[]},{"text":"impl Sync for GSubprocessLauncher","synthetic":true,"types":[]},{"text":"impl Sync for GTask","synthetic":true,"types":[]},{"text":"impl !Sync for GTcpConnection","synthetic":true,"types":[]},{"text":"impl !Sync for GTcpWrapperConnection","synthetic":true,"types":[]},{"text":"impl Sync for GTestDBus","synthetic":true,"types":[]},{"text":"impl Sync for GThemedIcon","synthetic":true,"types":[]},{"text":"impl !Sync for GThreadedSocketService","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsCertificate","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsConnection","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsDatabase","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsInteraction","synthetic":true,"types":[]},{"text":"impl !Sync for GTlsPassword","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixConnection","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixCredentialsMessage","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixFDList","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixFDMessage","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixInputStream","synthetic":true,"types":[]},{"text":"impl Sync for GUnixMountMonitor","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixOutputStream","synthetic":true,"types":[]},{"text":"impl !Sync for GUnixSocketAddress","synthetic":true,"types":[]},{"text":"impl !Sync for GVfs","synthetic":true,"types":[]},{"text":"impl !Sync for GVolumeMonitor","synthetic":true,"types":[]},{"text":"impl Sync for GZlibCompressor","synthetic":true,"types":[]},{"text":"impl Sync for GZlibDecompressor","synthetic":true,"types":[]},{"text":"impl Sync for GAction","synthetic":true,"types":[]},{"text":"impl Sync for GActionGroup","synthetic":true,"types":[]},{"text":"impl Sync for GActionMap","synthetic":true,"types":[]},{"text":"impl Sync for GAppInfo","synthetic":true,"types":[]},{"text":"impl Sync for GAsyncInitable","synthetic":true,"types":[]},{"text":"impl Sync for GAsyncResult","synthetic":true,"types":[]},{"text":"impl Sync for GConverter","synthetic":true,"types":[]},{"text":"impl Sync for GDBusInterface","synthetic":true,"types":[]},{"text":"impl Sync for GDBusObject","synthetic":true,"types":[]},{"text":"impl Sync for GDBusObjectManager","synthetic":true,"types":[]},{"text":"impl Sync for GDatagramBased","synthetic":true,"types":[]},{"text":"impl Sync for GDesktopAppInfoLookup","synthetic":true,"types":[]},{"text":"impl Sync for GDrive","synthetic":true,"types":[]},{"text":"impl Sync for GDtlsClientConnection","synthetic":true,"types":[]},{"text":"impl Sync for GDtlsConnection","synthetic":true,"types":[]},{"text":"impl Sync for GDtlsServerConnection","synthetic":true,"types":[]},{"text":"impl Sync for GFile","synthetic":true,"types":[]},{"text":"impl Sync for GFileDescriptorBased","synthetic":true,"types":[]},{"text":"impl Sync for GIcon","synthetic":true,"types":[]},{"text":"impl Sync for GInitable","synthetic":true,"types":[]},{"text":"impl Sync for GListModel","synthetic":true,"types":[]},{"text":"impl Sync for GLoadableIcon","synthetic":true,"types":[]},{"text":"impl Sync for GMemoryMonitor","synthetic":true,"types":[]},{"text":"impl Sync for GMount","synthetic":true,"types":[]},{"text":"impl Sync for GNetworkMonitor","synthetic":true,"types":[]},{"text":"impl Sync for GPollableInputStream","synthetic":true,"types":[]},{"text":"impl Sync for GPollableOutputStream","synthetic":true,"types":[]},{"text":"impl Sync for GProxy","synthetic":true,"types":[]},{"text":"impl Sync for GProxyResolver","synthetic":true,"types":[]},{"text":"impl Sync for GRemoteActionGroup","synthetic":true,"types":[]},{"text":"impl Sync for GSeekable","synthetic":true,"types":[]},{"text":"impl Sync for GSocketConnectable","synthetic":true,"types":[]},{"text":"impl Sync for GTlsBackend","synthetic":true,"types":[]},{"text":"impl Sync for GTlsClientConnection","synthetic":true,"types":[]},{"text":"impl Sync for GTlsFileDatabase","synthetic":true,"types":[]},{"text":"impl Sync for GTlsServerConnection","synthetic":true,"types":[]},{"text":"impl Sync for GVolume","synthetic":true,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T, MM&gt; !Sync for Boxed&lt;T, MM&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, MM&gt; !Sync for Shared&lt;T, MM&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BoolError","synthetic":true,"types":[]},{"text":"impl !Sync for ObjectRef","synthetic":true,"types":[]},{"text":"impl !Sync for Object","synthetic":true,"types":[]},{"text":"impl !Sync for InitiallyUnowned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for KeyFile","synthetic":true,"types":[]},{"text":"impl Sync for ChecksumType","synthetic":true,"types":[]},{"text":"impl Sync for DateMonth","synthetic":true,"types":[]},{"text":"impl Sync for DateWeekday","synthetic":true,"types":[]},{"text":"impl Sync for KeyFileError","synthetic":true,"types":[]},{"text":"impl Sync for OptionArg","synthetic":true,"types":[]},{"text":"impl Sync for SeekType","synthetic":true,"types":[]},{"text":"impl Sync for TimeType","synthetic":true,"types":[]},{"text":"impl Sync for FileTest","synthetic":true,"types":[]},{"text":"impl Sync for FormatSizeFlags","synthetic":true,"types":[]},{"text":"impl Sync for IOCondition","synthetic":true,"types":[]},{"text":"impl Sync for KeyFileFlags","synthetic":true,"types":[]},{"text":"impl Sync for LogLevelFlags","synthetic":true,"types":[]},{"text":"impl Sync for OptionFlags","synthetic":true,"types":[]},{"text":"impl Sync for SpawnFlags","synthetic":true,"types":[]},{"text":"impl Sync for BindingFlags","synthetic":true,"types":[]},{"text":"impl Sync for ParamFlags","synthetic":true,"types":[]},{"text":"impl Sync for SignalFlags","synthetic":true,"types":[]},{"text":"impl !Sync for ByteArray","synthetic":true,"types":[]},{"text":"impl Sync for Char","synthetic":true,"types":[]},{"text":"impl Sync for UChar","synthetic":true,"types":[]},{"text":"impl Sync for UserDirectory","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FlagsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FileError","synthetic":true,"types":[]},{"text":"impl Sync for SignalHandlerId","synthetic":true,"types":[]},{"text":"impl Sync for Inhibit","synthetic":true,"types":[]},{"text":"impl Sync for SourceId","synthetic":true,"types":[]},{"text":"impl Sync for Continue","synthetic":true,"types":[]},{"text":"impl Sync for Priority","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; Sync for Stash&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtr&lt;'a, P&gt;&gt;::Storage: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; Sync for StashMut&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtrMut&lt;'a, P&gt;&gt;::Storage: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Borrowed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for List","synthetic":true,"types":[]},{"text":"impl !Sync for SList","synthetic":true,"types":[]},{"text":"impl !Sync for HashTable","synthetic":true,"types":[]},{"text":"impl !Sync for Array","synthetic":true,"types":[]},{"text":"impl !Sync for PtrArray","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SyncSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for GetError","synthetic":true,"types":[]},{"text":"impl !Sync for Value","synthetic":true,"types":[]},{"text":"impl !Sync for ValueArray","synthetic":true,"types":[]},{"text":"impl !Sync for SendValue","synthetic":true,"types":[]},{"text":"impl !Sync for VariantDict","synthetic":true,"types":[]},{"text":"impl !Sync for ValueArray","synthetic":true,"types":[]},{"text":"impl Sync for Quark","synthetic":true,"types":[]},{"text":"impl Sync for LogHandlerId","synthetic":true,"types":[]},{"text":"impl Sync for LogLevel","synthetic":true,"types":[]},{"text":"impl Sync for LogLevels","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for SendUniqueCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BorrowError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for InstanceStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibType: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ClassStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibClassType: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for InitializingType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SignalInvocationHint","synthetic":true,"types":[]},{"text":"impl !Sync for SignalClassHandlerToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Property&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Boxed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Sync for SourceFuture&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Sync for SourceStream&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;IsClassFor&gt; Sync for ClassRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for ObjectClass","synthetic":false,"types":[]},{"text":"impl Sync for InitiallyUnownedClass","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ObjectType + Sync&gt; Sync for WeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ObjectType&gt; Sync for SendWeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Checksum","synthetic":false,"types":[]},{"text":"impl Sync for DateTime","synthetic":false,"types":[]},{"text":"impl Sync for MainContext","synthetic":false,"types":[]},{"text":"impl Sync for MainLoop","synthetic":false,"types":[]},{"text":"impl Sync for Source","synthetic":false,"types":[]},{"text":"impl Sync for TimeZone","synthetic":false,"types":[]},{"text":"impl Sync for BindingClass","synthetic":false,"types":[]},{"text":"impl Sync for Binding","synthetic":false,"types":[]},{"text":"impl Sync for Bytes","synthetic":false,"types":[]},{"text":"impl Sync for String","synthetic":false,"types":[]},{"text":"impl Sync for Closure","synthetic":false,"types":[]},{"text":"impl Sync for EnumClass","synthetic":false,"types":[]},{"text":"impl Sync for EnumValue","synthetic":false,"types":[]},{"text":"impl Sync for FlagsClass","synthetic":false,"types":[]},{"text":"impl Sync for FlagsValue","synthetic":false,"types":[]},{"text":"impl Sync for Pid","synthetic":false,"types":[]},{"text":"impl Sync for GString","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for TypedValue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Variant","synthetic":false,"types":[]},{"text":"impl Sync for VariantType","synthetic":false,"types":[]},{"text":"impl Sync for VariantTy","synthetic":false,"types":[]},{"text":"impl Sync for Date","synthetic":false,"types":[]},{"text":"impl Sync for ParamSpec","synthetic":false,"types":[]},{"text":"impl Sync for TypeData","synthetic":false,"types":[]},{"text":"impl Sync for ThreadPool","synthetic":false,"types":[]}];
implementors["glib_sys"] = [{"text":"impl Sync for GPollFD","synthetic":true,"types":[]},{"text":"impl Sync for GDoubleIEEE754","synthetic":true,"types":[]},{"text":"impl Sync for GFloatIEEE754","synthetic":true,"types":[]},{"text":"impl !Sync for GMutex","synthetic":true,"types":[]},{"text":"impl !Sync for GTokenValue","synthetic":true,"types":[]},{"text":"impl !Sync for GVariantBuilder_u","synthetic":true,"types":[]},{"text":"impl !Sync for GVariantDict_u","synthetic":true,"types":[]},{"text":"impl !Sync for GArray","synthetic":true,"types":[]},{"text":"impl Sync for _GAsyncQueue","synthetic":true,"types":[]},{"text":"impl Sync for _GBookmarkFile","synthetic":true,"types":[]},{"text":"impl !Sync for GByteArray","synthetic":true,"types":[]},{"text":"impl Sync for GBytes","synthetic":true,"types":[]},{"text":"impl Sync for GChecksum","synthetic":true,"types":[]},{"text":"impl !Sync for GCond","synthetic":true,"types":[]},{"text":"impl Sync for _GData","synthetic":true,"types":[]},{"text":"impl Sync for GDate","synthetic":true,"types":[]},{"text":"impl Sync for GDateTime","synthetic":true,"types":[]},{"text":"impl !Sync for GDebugKey","synthetic":true,"types":[]},{"text":"impl Sync for _GDir","synthetic":true,"types":[]},{"text":"impl Sync for GDoubleIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl !Sync for GError","synthetic":true,"types":[]},{"text":"impl Sync for GFloatIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl Sync for GHashTable","synthetic":true,"types":[]},{"text":"impl !Sync for GHashTableIter","synthetic":true,"types":[]},{"text":"impl Sync for _GHmac","synthetic":true,"types":[]},{"text":"impl !Sync for GHook","synthetic":true,"types":[]},{"text":"impl !Sync for GHookList","synthetic":true,"types":[]},{"text":"impl Sync for _GIConv","synthetic":true,"types":[]},{"text":"impl !Sync for GIOChannel","synthetic":true,"types":[]},{"text":"impl Sync for GIOFuncs","synthetic":true,"types":[]},{"text":"impl Sync for GKeyFile","synthetic":true,"types":[]},{"text":"impl !Sync for GList","synthetic":true,"types":[]},{"text":"impl !Sync for GLogField","synthetic":true,"types":[]},{"text":"impl Sync for GMainContext","synthetic":true,"types":[]},{"text":"impl Sync for GMainLoop","synthetic":true,"types":[]},{"text":"impl Sync for GMappedFile","synthetic":true,"types":[]},{"text":"impl Sync for GMarkupParseContext","synthetic":true,"types":[]},{"text":"impl Sync for GMarkupParser","synthetic":true,"types":[]},{"text":"impl Sync for GMatchInfo","synthetic":true,"types":[]},{"text":"impl Sync for GMemVTable","synthetic":true,"types":[]},{"text":"impl !Sync for GNode","synthetic":true,"types":[]},{"text":"impl !Sync for GOnce","synthetic":true,"types":[]},{"text":"impl Sync for _GOptionContext","synthetic":true,"types":[]},{"text":"impl !Sync for GOptionEntry","synthetic":true,"types":[]},{"text":"impl Sync for GOptionGroup","synthetic":true,"types":[]},{"text":"impl Sync for _GPatternSpec","synthetic":true,"types":[]},{"text":"impl !Sync for GPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GPtrArray","synthetic":true,"types":[]},{"text":"impl !Sync for GQueue","synthetic":true,"types":[]},{"text":"impl !Sync for GRWLock","synthetic":true,"types":[]},{"text":"impl Sync for _GRand","synthetic":true,"types":[]},{"text":"impl !Sync for GRecMutex","synthetic":true,"types":[]},{"text":"impl Sync for GRegex","synthetic":true,"types":[]},{"text":"impl !Sync for GSList","synthetic":true,"types":[]},{"text":"impl !Sync for GScanner","synthetic":true,"types":[]},{"text":"impl !Sync for GScannerConfig","synthetic":true,"types":[]},{"text":"impl Sync for _GSequence","synthetic":true,"types":[]},{"text":"impl Sync for _GSequenceIter","synthetic":true,"types":[]},{"text":"impl !Sync for GSource","synthetic":true,"types":[]},{"text":"impl Sync for GSourceCallbackFuncs","synthetic":true,"types":[]},{"text":"impl Sync for GSourceFuncs","synthetic":true,"types":[]},{"text":"impl Sync for _GSourcePrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GStatBuf","synthetic":true,"types":[]},{"text":"impl !Sync for GString","synthetic":true,"types":[]},{"text":"impl Sync for _GStringChunk","synthetic":true,"types":[]},{"text":"impl Sync for _GTestCase","synthetic":true,"types":[]},{"text":"impl Sync for GTestConfig","synthetic":true,"types":[]},{"text":"impl !Sync for GTestLogBuffer","synthetic":true,"types":[]},{"text":"impl !Sync for GTestLogMsg","synthetic":true,"types":[]},{"text":"impl Sync for _GTestSuite","synthetic":true,"types":[]},{"text":"impl Sync for GThread","synthetic":true,"types":[]},{"text":"impl !Sync for GThreadPool","synthetic":true,"types":[]},{"text":"impl Sync for GTimeVal","synthetic":true,"types":[]},{"text":"impl Sync for GTimeZone","synthetic":true,"types":[]},{"text":"impl Sync for _GTimer","synthetic":true,"types":[]},{"text":"impl !Sync for GTrashStack","synthetic":true,"types":[]},{"text":"impl Sync for _GTree","synthetic":true,"types":[]},{"text":"impl Sync for GVariant","synthetic":true,"types":[]},{"text":"impl !Sync for GVariantBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GVariantBuilder_u_s","synthetic":true,"types":[]},{"text":"impl !Sync for GVariantDict","synthetic":true,"types":[]},{"text":"impl !Sync for GVariantDict_u_s","synthetic":true,"types":[]},{"text":"impl Sync for GVariantIter","synthetic":true,"types":[]},{"text":"impl Sync for GVariantType","synthetic":true,"types":[]}];
implementors["gobject_sys"] = [{"text":"impl Sync for GTypeCValue","synthetic":true,"types":[]},{"text":"impl !Sync for GValue_data","synthetic":true,"types":[]},{"text":"impl !Sync for GWeakRef_priv","synthetic":true,"types":[]},{"text":"impl Sync for GCClosure","synthetic":true,"types":[]},{"text":"impl Sync for GClosure","synthetic":true,"types":[]},{"text":"impl !Sync for GClosureNotifyData","synthetic":true,"types":[]},{"text":"impl !Sync for GEnumClass","synthetic":true,"types":[]},{"text":"impl !Sync for GEnumValue","synthetic":true,"types":[]},{"text":"impl !Sync for GFlagsClass","synthetic":true,"types":[]},{"text":"impl !Sync for GFlagsValue","synthetic":true,"types":[]},{"text":"impl !Sync for GInitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl !Sync for GInterfaceInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GObjectClass","synthetic":true,"types":[]},{"text":"impl !Sync for GObjectConstructParam","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecClass","synthetic":true,"types":[]},{"text":"impl Sync for _GParamSpecPool","synthetic":true,"types":[]},{"text":"impl Sync for GParamSpecTypeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GParameter","synthetic":true,"types":[]},{"text":"impl Sync for GSignalInvocationHint","synthetic":true,"types":[]},{"text":"impl !Sync for GSignalQuery","synthetic":true,"types":[]},{"text":"impl Sync for GTypeClass","synthetic":true,"types":[]},{"text":"impl Sync for GTypeFundamentalInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GTypeInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GTypeInstance","synthetic":true,"types":[]},{"text":"impl Sync for GTypeInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GTypeModuleClass","synthetic":true,"types":[]},{"text":"impl Sync for GTypePluginClass","synthetic":true,"types":[]},{"text":"impl !Sync for GTypeQuery","synthetic":true,"types":[]},{"text":"impl !Sync for GTypeValueTable","synthetic":true,"types":[]},{"text":"impl !Sync for GValue","synthetic":true,"types":[]},{"text":"impl !Sync for GValueArray","synthetic":true,"types":[]},{"text":"impl !Sync for GWeakRef","synthetic":true,"types":[]},{"text":"impl Sync for GBinding","synthetic":true,"types":[]},{"text":"impl !Sync for GInitiallyUnowned","synthetic":true,"types":[]},{"text":"impl !Sync for GObject","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpec","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecBoolean","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecBoxed","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecChar","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecDouble","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecEnum","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecFlags","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecFloat","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecGType","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecInt","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecInt64","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecLong","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecObject","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecOverride","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecParam","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecPointer","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecString","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecUChar","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecUInt","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecUInt64","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecULong","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecUnichar","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecValueArray","synthetic":true,"types":[]},{"text":"impl !Sync for GParamSpecVariant","synthetic":true,"types":[]},{"text":"impl !Sync for GTypeModule","synthetic":true,"types":[]},{"text":"impl Sync for GTypePlugin","synthetic":true,"types":[]}];
implementors["gtk"] = [{"text":"impl !Sync for AboutDialog","synthetic":true,"types":[]},{"text":"impl !Sync for AboutDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for AccelGroup","synthetic":true,"types":[]},{"text":"impl !Sync for AccelLabel","synthetic":true,"types":[]},{"text":"impl !Sync for AccelLabelBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ActionBar","synthetic":true,"types":[]},{"text":"impl !Sync for ActionBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Actionable","synthetic":true,"types":[]},{"text":"impl !Sync for Adjustment","synthetic":true,"types":[]},{"text":"impl Sync for AdjustmentBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooserButton","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Application","synthetic":true,"types":[]},{"text":"impl !Sync for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ApplicationWindow","synthetic":true,"types":[]},{"text":"impl !Sync for ApplicationWindowBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for AspectFrame","synthetic":true,"types":[]},{"text":"impl !Sync for AspectFrameBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Assistant","synthetic":true,"types":[]},{"text":"impl !Sync for AssistantBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Bin","synthetic":true,"types":[]},{"text":"impl !Sync for Box","synthetic":true,"types":[]},{"text":"impl !Sync for BoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Buildable","synthetic":true,"types":[]},{"text":"impl !Sync for Builder","synthetic":true,"types":[]},{"text":"impl !Sync for Button","synthetic":true,"types":[]},{"text":"impl !Sync for ButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ButtonBox","synthetic":true,"types":[]},{"text":"impl !Sync for ButtonBoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Calendar","synthetic":true,"types":[]},{"text":"impl !Sync for CalendarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellArea","synthetic":true,"types":[]},{"text":"impl !Sync for CellAreaBox","synthetic":true,"types":[]},{"text":"impl !Sync for CellAreaBoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellAreaContext","synthetic":true,"types":[]},{"text":"impl !Sync for CellEditable","synthetic":true,"types":[]},{"text":"impl !Sync for CellLayout","synthetic":true,"types":[]},{"text":"impl !Sync for CellRenderer","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererAccel","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererAccelBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererCombo","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererComboBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererPixbufBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererProgress","synthetic":true,"types":[]},{"text":"impl Sync for CellRendererProgressBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererSpin","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererSpinBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererSpinner","synthetic":true,"types":[]},{"text":"impl Sync for CellRendererSpinnerBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererText","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererTextBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellRendererToggle","synthetic":true,"types":[]},{"text":"impl Sync for CellRendererToggleBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CellView","synthetic":true,"types":[]},{"text":"impl !Sync for CellViewBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CheckButton","synthetic":true,"types":[]},{"text":"impl !Sync for CheckButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for CheckMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for CheckMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Clipboard","synthetic":true,"types":[]},{"text":"impl !Sync for ColorButton","synthetic":true,"types":[]},{"text":"impl !Sync for ColorButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ColorChooser","synthetic":true,"types":[]},{"text":"impl !Sync for ColorChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for ColorChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ColorChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for ColorChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ComboBox","synthetic":true,"types":[]},{"text":"impl !Sync for ComboBoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ComboBoxText","synthetic":true,"types":[]},{"text":"impl !Sync for ComboBoxTextBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Container","synthetic":true,"types":[]},{"text":"impl !Sync for CssProvider","synthetic":true,"types":[]},{"text":"impl !Sync for Dialog","synthetic":true,"types":[]},{"text":"impl !Sync for DialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for DrawingArea","synthetic":true,"types":[]},{"text":"impl !Sync for DrawingAreaBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Editable","synthetic":true,"types":[]},{"text":"impl !Sync for Entry","synthetic":true,"types":[]},{"text":"impl !Sync for EntryBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for EntryCompletion","synthetic":true,"types":[]},{"text":"impl !Sync for EntryCompletionBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for EventBox","synthetic":true,"types":[]},{"text":"impl !Sync for EventBoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for EventController","synthetic":true,"types":[]},{"text":"impl !Sync for Expander","synthetic":true,"types":[]},{"text":"impl !Sync for ExpanderBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooser","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooserButton","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for FileChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FileFilter","synthetic":true,"types":[]},{"text":"impl !Sync for Fixed","synthetic":true,"types":[]},{"text":"impl !Sync for FixedBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FlowBox","synthetic":true,"types":[]},{"text":"impl !Sync for FlowBoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FlowBoxChild","synthetic":true,"types":[]},{"text":"impl !Sync for FlowBoxChildBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FontButton","synthetic":true,"types":[]},{"text":"impl !Sync for FontButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FontChooser","synthetic":true,"types":[]},{"text":"impl !Sync for FontChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for FontChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for FontChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for FontChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Frame","synthetic":true,"types":[]},{"text":"impl !Sync for FrameBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Gesture","synthetic":true,"types":[]},{"text":"impl !Sync for GestureDrag","synthetic":true,"types":[]},{"text":"impl !Sync for GestureDragBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GestureLongPress","synthetic":true,"types":[]},{"text":"impl !Sync for GestureLongPressBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GestureMultiPress","synthetic":true,"types":[]},{"text":"impl !Sync for GestureMultiPressBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GesturePan","synthetic":true,"types":[]},{"text":"impl !Sync for GesturePanBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GestureRotate","synthetic":true,"types":[]},{"text":"impl !Sync for GestureRotateBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GestureSingle","synthetic":true,"types":[]},{"text":"impl !Sync for GestureSwipe","synthetic":true,"types":[]},{"text":"impl !Sync for GestureSwipeBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GestureZoom","synthetic":true,"types":[]},{"text":"impl !Sync for GestureZoomBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Grid","synthetic":true,"types":[]},{"text":"impl !Sync for GridBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for HeaderBar","synthetic":true,"types":[]},{"text":"impl !Sync for HeaderBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for IMContext","synthetic":true,"types":[]},{"text":"impl !Sync for IMContextSimple","synthetic":true,"types":[]},{"text":"impl Sync for IMContextSimpleBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for IMMulticontext","synthetic":true,"types":[]},{"text":"impl Sync for IMMulticontextBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for IconInfo","synthetic":true,"types":[]},{"text":"impl !Sync for IconTheme","synthetic":true,"types":[]},{"text":"impl !Sync for IconView","synthetic":true,"types":[]},{"text":"impl !Sync for IconViewBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Image","synthetic":true,"types":[]},{"text":"impl !Sync for ImageBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for InfoBar","synthetic":true,"types":[]},{"text":"impl !Sync for InfoBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Invisible","synthetic":true,"types":[]},{"text":"impl !Sync for InvisibleBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Label","synthetic":true,"types":[]},{"text":"impl !Sync for LabelBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Layout","synthetic":true,"types":[]},{"text":"impl !Sync for LayoutBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for LevelBar","synthetic":true,"types":[]},{"text":"impl !Sync for LevelBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for LinkButton","synthetic":true,"types":[]},{"text":"impl !Sync for LinkButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ListBox","synthetic":true,"types":[]},{"text":"impl !Sync for ListBoxBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ListBoxRow","synthetic":true,"types":[]},{"text":"impl !Sync for ListBoxRowBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ListStore","synthetic":true,"types":[]},{"text":"impl !Sync for LockButton","synthetic":true,"types":[]},{"text":"impl !Sync for LockButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Menu","synthetic":true,"types":[]},{"text":"impl !Sync for MenuBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for MenuBar","synthetic":true,"types":[]},{"text":"impl !Sync for MenuBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for MenuButton","synthetic":true,"types":[]},{"text":"impl !Sync for MenuButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for MenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for MenuItemBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for MenuShell","synthetic":true,"types":[]},{"text":"impl !Sync for MenuToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for MenuToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for MessageDialog","synthetic":true,"types":[]},{"text":"impl !Sync for MessageDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Misc","synthetic":true,"types":[]},{"text":"impl !Sync for MountOperation","synthetic":true,"types":[]},{"text":"impl !Sync for MountOperationBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Notebook","synthetic":true,"types":[]},{"text":"impl !Sync for NotebookBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for OffscreenWindow","synthetic":true,"types":[]},{"text":"impl !Sync for OffscreenWindowBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Orientable","synthetic":true,"types":[]},{"text":"impl !Sync for Overlay","synthetic":true,"types":[]},{"text":"impl !Sync for OverlayBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for PageSetup","synthetic":true,"types":[]},{"text":"impl !Sync for Paned","synthetic":true,"types":[]},{"text":"impl !Sync for PanedBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for PlacesSidebar","synthetic":true,"types":[]},{"text":"impl !Sync for PlacesSidebarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Plug","synthetic":true,"types":[]},{"text":"impl !Sync for PlugBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Popover","synthetic":true,"types":[]},{"text":"impl !Sync for PopoverBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for PrintContext","synthetic":true,"types":[]},{"text":"impl !Sync for PrintOperation","synthetic":true,"types":[]},{"text":"impl !Sync for PrintOperationBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for PrintOperationPreview","synthetic":true,"types":[]},{"text":"impl !Sync for PrintSettings","synthetic":true,"types":[]},{"text":"impl !Sync for ProgressBar","synthetic":true,"types":[]},{"text":"impl !Sync for ProgressBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for RadioButton","synthetic":true,"types":[]},{"text":"impl !Sync for RadioButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for RadioMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for RadioMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for RadioToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for RadioToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Range","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooser","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooserMenu","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooserMenuBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for RecentChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for RecentFilter","synthetic":true,"types":[]},{"text":"impl !Sync for RecentManager","synthetic":true,"types":[]},{"text":"impl Sync for RecentManagerBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Revealer","synthetic":true,"types":[]},{"text":"impl !Sync for RevealerBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Scale","synthetic":true,"types":[]},{"text":"impl !Sync for ScaleBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ScaleButton","synthetic":true,"types":[]},{"text":"impl !Sync for ScaleButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Scrollable","synthetic":true,"types":[]},{"text":"impl !Sync for Scrollbar","synthetic":true,"types":[]},{"text":"impl !Sync for ScrollbarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ScrolledWindow","synthetic":true,"types":[]},{"text":"impl !Sync for ScrolledWindowBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for SearchBar","synthetic":true,"types":[]},{"text":"impl !Sync for SearchBarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for SearchEntry","synthetic":true,"types":[]},{"text":"impl !Sync for SearchEntryBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Separator","synthetic":true,"types":[]},{"text":"impl !Sync for SeparatorBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for SeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for SeparatorMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for SeparatorToolItem","synthetic":true,"types":[]},{"text":"impl !Sync for SeparatorToolItemBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Settings","synthetic":true,"types":[]},{"text":"impl !Sync for SizeGroup","synthetic":true,"types":[]},{"text":"impl Sync for SizeGroupBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Socket","synthetic":true,"types":[]},{"text":"impl !Sync for SocketBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for SpinButton","synthetic":true,"types":[]},{"text":"impl !Sync for SpinButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Spinner","synthetic":true,"types":[]},{"text":"impl !Sync for SpinnerBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Stack","synthetic":true,"types":[]},{"text":"impl !Sync for StackBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for StackSwitcher","synthetic":true,"types":[]},{"text":"impl !Sync for StackSwitcherBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Statusbar","synthetic":true,"types":[]},{"text":"impl !Sync for StatusbarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for StyleContext","synthetic":true,"types":[]},{"text":"impl !Sync for StyleContextBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for StyleProperties","synthetic":true,"types":[]},{"text":"impl !Sync for StyleProvider","synthetic":true,"types":[]},{"text":"impl !Sync for Switch","synthetic":true,"types":[]},{"text":"impl !Sync for SwitchBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for TextBuffer","synthetic":true,"types":[]},{"text":"impl !Sync for TextBufferBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for TextChildAnchor","synthetic":true,"types":[]},{"text":"impl !Sync for TextMark","synthetic":true,"types":[]},{"text":"impl Sync for TextMarkBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for TextTag","synthetic":true,"types":[]},{"text":"impl !Sync for TextTagBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for TextTagTable","synthetic":true,"types":[]},{"text":"impl !Sync for TextView","synthetic":true,"types":[]},{"text":"impl !Sync for TextViewBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToggleButton","synthetic":true,"types":[]},{"text":"impl !Sync for ToggleButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToggleToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for ToggleToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for ToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToolItem","synthetic":true,"types":[]},{"text":"impl !Sync for ToolItemBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToolItemGroup","synthetic":true,"types":[]},{"text":"impl !Sync for ToolItemGroupBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToolPalette","synthetic":true,"types":[]},{"text":"impl !Sync for ToolPaletteBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ToolShell","synthetic":true,"types":[]},{"text":"impl !Sync for Toolbar","synthetic":true,"types":[]},{"text":"impl !Sync for ToolbarBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Tooltip","synthetic":true,"types":[]},{"text":"impl !Sync for TreeDragDest","synthetic":true,"types":[]},{"text":"impl !Sync for TreeDragSource","synthetic":true,"types":[]},{"text":"impl !Sync for TreeModel","synthetic":true,"types":[]},{"text":"impl !Sync for TreeModelFilter","synthetic":true,"types":[]},{"text":"impl !Sync for TreeModelSort","synthetic":true,"types":[]},{"text":"impl !Sync for TreeSelection","synthetic":true,"types":[]},{"text":"impl !Sync for TreeSortable","synthetic":true,"types":[]},{"text":"impl !Sync for TreeStore","synthetic":true,"types":[]},{"text":"impl !Sync for TreeView","synthetic":true,"types":[]},{"text":"impl !Sync for TreeViewBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for TreeViewColumn","synthetic":true,"types":[]},{"text":"impl !Sync for TreeViewColumnBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Viewport","synthetic":true,"types":[]},{"text":"impl !Sync for ViewportBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for VolumeButton","synthetic":true,"types":[]},{"text":"impl !Sync for VolumeButtonBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Widget","synthetic":true,"types":[]},{"text":"impl !Sync for Window","synthetic":true,"types":[]},{"text":"impl !Sync for WindowBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for WindowGroup","synthetic":true,"types":[]},{"text":"impl !Sync for CssSection","synthetic":true,"types":[]},{"text":"impl !Sync for PaperSize","synthetic":true,"types":[]},{"text":"impl !Sync for RecentInfo","synthetic":true,"types":[]},{"text":"impl !Sync for SelectionData","synthetic":true,"types":[]},{"text":"impl !Sync for TargetList","synthetic":true,"types":[]},{"text":"impl !Sync for TextAttributes","synthetic":true,"types":[]},{"text":"impl !Sync for TextIter","synthetic":true,"types":[]},{"text":"impl !Sync for TreeIter","synthetic":true,"types":[]},{"text":"impl !Sync for TreePath","synthetic":true,"types":[]},{"text":"impl !Sync for TreeRowReference","synthetic":true,"types":[]},{"text":"impl !Sync for WidgetPath","synthetic":true,"types":[]},{"text":"impl Sync for Align","synthetic":true,"types":[]},{"text":"impl Sync for ArrowType","synthetic":true,"types":[]},{"text":"impl Sync for AssistantPageType","synthetic":true,"types":[]},{"text":"impl Sync for BaselinePosition","synthetic":true,"types":[]},{"text":"impl Sync for BorderStyle","synthetic":true,"types":[]},{"text":"impl Sync for BuilderError","synthetic":true,"types":[]},{"text":"impl Sync for ButtonBoxStyle","synthetic":true,"types":[]},{"text":"impl Sync for ButtonsType","synthetic":true,"types":[]},{"text":"impl Sync for CellRendererAccelMode","synthetic":true,"types":[]},{"text":"impl Sync for CellRendererMode","synthetic":true,"types":[]},{"text":"impl Sync for CornerType","synthetic":true,"types":[]},{"text":"impl Sync for CssProviderError","synthetic":true,"types":[]},{"text":"impl Sync for CssSectionType","synthetic":true,"types":[]},{"text":"impl Sync for DeleteType","synthetic":true,"types":[]},{"text":"impl Sync for DirectionType","synthetic":true,"types":[]},{"text":"impl Sync for DragResult","synthetic":true,"types":[]},{"text":"impl Sync for EntryIconPosition","synthetic":true,"types":[]},{"text":"impl Sync for EventSequenceState","synthetic":true,"types":[]},{"text":"impl Sync for FileChooserAction","synthetic":true,"types":[]},{"text":"impl Sync for FileChooserConfirmation","synthetic":true,"types":[]},{"text":"impl Sync for FileChooserError","synthetic":true,"types":[]},{"text":"impl Sync for IMPreeditStyle","synthetic":true,"types":[]},{"text":"impl Sync for IMStatusStyle","synthetic":true,"types":[]},{"text":"impl Sync for IconSize","synthetic":true,"types":[]},{"text":"impl Sync for IconThemeError","synthetic":true,"types":[]},{"text":"impl Sync for IconViewDropPosition","synthetic":true,"types":[]},{"text":"impl Sync for ImageType","synthetic":true,"types":[]},{"text":"impl Sync for InputPurpose","synthetic":true,"types":[]},{"text":"impl Sync for Justification","synthetic":true,"types":[]},{"text":"impl Sync for LevelBarMode","synthetic":true,"types":[]},{"text":"impl Sync for License","synthetic":true,"types":[]},{"text":"impl Sync for MenuDirectionType","synthetic":true,"types":[]},{"text":"impl Sync for MessageType","synthetic":true,"types":[]},{"text":"impl Sync for MovementStep","synthetic":true,"types":[]},{"text":"impl Sync for NotebookTab","synthetic":true,"types":[]},{"text":"impl Sync for NumberUpLayout","synthetic":true,"types":[]},{"text":"impl Sync for Orientation","synthetic":true,"types":[]},{"text":"impl Sync for PackDirection","synthetic":true,"types":[]},{"text":"impl Sync for PackType","synthetic":true,"types":[]},{"text":"impl Sync for PageOrientation","synthetic":true,"types":[]},{"text":"impl Sync for PageSet","synthetic":true,"types":[]},{"text":"impl Sync for PanDirection","synthetic":true,"types":[]},{"text":"impl Sync for PolicyType","synthetic":true,"types":[]},{"text":"impl Sync for PositionType","synthetic":true,"types":[]},{"text":"impl Sync for PrintDuplex","synthetic":true,"types":[]},{"text":"impl Sync for PrintError","synthetic":true,"types":[]},{"text":"impl Sync for PrintOperationAction","synthetic":true,"types":[]},{"text":"impl Sync for PrintOperationResult","synthetic":true,"types":[]},{"text":"impl Sync for PrintPages","synthetic":true,"types":[]},{"text":"impl Sync for PrintQuality","synthetic":true,"types":[]},{"text":"impl Sync for PrintStatus","synthetic":true,"types":[]},{"text":"impl Sync for PropagationPhase","synthetic":true,"types":[]},{"text":"impl Sync for RecentChooserError","synthetic":true,"types":[]},{"text":"impl Sync for RecentManagerError","synthetic":true,"types":[]},{"text":"impl Sync for RecentSortType","synthetic":true,"types":[]},{"text":"impl Sync for ReliefStyle","synthetic":true,"types":[]},{"text":"impl Sync for ResizeMode","synthetic":true,"types":[]},{"text":"impl Sync for RevealerTransitionType","synthetic":true,"types":[]},{"text":"impl Sync for ScrollStep","synthetic":true,"types":[]},{"text":"impl Sync for ScrollType","synthetic":true,"types":[]},{"text":"impl Sync for ScrollablePolicy","synthetic":true,"types":[]},{"text":"impl Sync for SelectionMode","synthetic":true,"types":[]},{"text":"impl Sync for SensitivityType","synthetic":true,"types":[]},{"text":"impl Sync for ShadowType","synthetic":true,"types":[]},{"text":"impl Sync for SizeGroupMode","synthetic":true,"types":[]},{"text":"impl Sync for SizeRequestMode","synthetic":true,"types":[]},{"text":"impl Sync for SortType","synthetic":true,"types":[]},{"text":"impl Sync for SpinButtonUpdatePolicy","synthetic":true,"types":[]},{"text":"impl Sync for SpinType","synthetic":true,"types":[]},{"text":"impl Sync for StackTransitionType","synthetic":true,"types":[]},{"text":"impl Sync for StateType","synthetic":true,"types":[]},{"text":"impl Sync for TextDirection","synthetic":true,"types":[]},{"text":"impl Sync for TextViewLayer","synthetic":true,"types":[]},{"text":"impl Sync for TextWindowType","synthetic":true,"types":[]},{"text":"impl Sync for ToolbarStyle","synthetic":true,"types":[]},{"text":"impl Sync for TreeViewColumnSizing","synthetic":true,"types":[]},{"text":"impl Sync for TreeViewDropPosition","synthetic":true,"types":[]},{"text":"impl Sync for TreeViewGridLines","synthetic":true,"types":[]},{"text":"impl Sync for Unit","synthetic":true,"types":[]},{"text":"impl Sync for WidgetHelpType","synthetic":true,"types":[]},{"text":"impl Sync for WindowPosition","synthetic":true,"types":[]},{"text":"impl Sync for WindowType","synthetic":true,"types":[]},{"text":"impl Sync for WrapMode","synthetic":true,"types":[]},{"text":"impl Sync for AccelFlags","synthetic":true,"types":[]},{"text":"impl Sync for ApplicationInhibitFlags","synthetic":true,"types":[]},{"text":"impl Sync for CalendarDisplayOptions","synthetic":true,"types":[]},{"text":"impl Sync for CellRendererState","synthetic":true,"types":[]},{"text":"impl Sync for DestDefaults","synthetic":true,"types":[]},{"text":"impl Sync for DialogFlags","synthetic":true,"types":[]},{"text":"impl Sync for FileFilterFlags","synthetic":true,"types":[]},{"text":"impl Sync for IconLookupFlags","synthetic":true,"types":[]},{"text":"impl Sync for InputHints","synthetic":true,"types":[]},{"text":"impl Sync for JunctionSides","synthetic":true,"types":[]},{"text":"impl Sync for PlacesOpenFlags","synthetic":true,"types":[]},{"text":"impl Sync for RecentFilterFlags","synthetic":true,"types":[]},{"text":"impl Sync for RegionFlags","synthetic":true,"types":[]},{"text":"impl Sync for StateFlags","synthetic":true,"types":[]},{"text":"impl Sync for TargetFlags","synthetic":true,"types":[]},{"text":"impl Sync for TextSearchFlags","synthetic":true,"types":[]},{"text":"impl Sync for ToolPaletteDragTargets","synthetic":true,"types":[]},{"text":"impl Sync for TreeModelFlags","synthetic":true,"types":[]},{"text":"impl !Sync for AppChooser","synthetic":true,"types":[]},{"text":"impl !Sync for Border","synthetic":true,"types":[]},{"text":"impl !Sync for EntryBuffer","synthetic":true,"types":[]},{"text":"impl Sync for PageRange","synthetic":true,"types":[]},{"text":"impl Sync for RecentData","synthetic":true,"types":[]},{"text":"impl Sync for Requisition","synthetic":true,"types":[]},{"text":"impl Sync for ResponseType","synthetic":true,"types":[]},{"text":"impl Sync for TargetEntry","synthetic":true,"types":[]},{"text":"impl Sync for SortColumn","synthetic":true,"types":[]},{"text":"impl !Sync for TickCallbackId","synthetic":true,"types":[]},{"text":"impl Sync for AboutDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for AccelGroupClass","synthetic":false,"types":[]},{"text":"impl Sync for AccelLabelClass","synthetic":false,"types":[]},{"text":"impl Sync for ActionBarClass","synthetic":false,"types":[]},{"text":"impl Sync for AdjustmentClass","synthetic":false,"types":[]},{"text":"impl Sync for AppChooserButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for AppChooserDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for AppChooserWidgetClass","synthetic":false,"types":[]},{"text":"impl Sync for ApplicationClass","synthetic":false,"types":[]},{"text":"impl Sync for ApplicationWindowClass","synthetic":false,"types":[]},{"text":"impl Sync for AspectFrameClass","synthetic":false,"types":[]},{"text":"impl Sync for AssistantClass","synthetic":false,"types":[]},{"text":"impl Sync for BinClass","synthetic":false,"types":[]},{"text":"impl Sync for BoxClass","synthetic":false,"types":[]},{"text":"impl Sync for BuilderClass","synthetic":false,"types":[]},{"text":"impl Sync for ButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ButtonBoxClass","synthetic":false,"types":[]},{"text":"impl Sync for CalendarClass","synthetic":false,"types":[]},{"text":"impl Sync for CellAreaClass","synthetic":false,"types":[]},{"text":"impl Sync for CellAreaBoxClass","synthetic":false,"types":[]},{"text":"impl Sync for CellAreaContextClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererAccelClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererComboClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererPixbufClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererProgressClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererSpinClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererSpinnerClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererTextClass","synthetic":false,"types":[]},{"text":"impl Sync for CellRendererToggleClass","synthetic":false,"types":[]},{"text":"impl Sync for CellViewClass","synthetic":false,"types":[]},{"text":"impl Sync for CheckButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for CheckMenuItemClass","synthetic":false,"types":[]},{"text":"impl Sync for ClipboardClass","synthetic":false,"types":[]},{"text":"impl Sync for ColorButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ColorChooserDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for ColorChooserWidgetClass","synthetic":false,"types":[]},{"text":"impl Sync for ComboBoxClass","synthetic":false,"types":[]},{"text":"impl Sync for ComboBoxTextClass","synthetic":false,"types":[]},{"text":"impl Sync for ContainerClass","synthetic":false,"types":[]},{"text":"impl Sync for CssProviderClass","synthetic":false,"types":[]},{"text":"impl Sync for DialogClass","synthetic":false,"types":[]},{"text":"impl Sync for DrawingAreaClass","synthetic":false,"types":[]},{"text":"impl Sync for EntryClass","synthetic":false,"types":[]},{"text":"impl Sync for EntryCompletionClass","synthetic":false,"types":[]},{"text":"impl Sync for EventBoxClass","synthetic":false,"types":[]},{"text":"impl Sync for EventControllerClass","synthetic":false,"types":[]},{"text":"impl Sync for ExpanderClass","synthetic":false,"types":[]},{"text":"impl Sync for FileChooserButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for FileChooserDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for FileChooserWidgetClass","synthetic":false,"types":[]},{"text":"impl Sync for FileFilterClass","synthetic":false,"types":[]},{"text":"impl Sync for FixedClass","synthetic":false,"types":[]},{"text":"impl Sync for FlowBoxClass","synthetic":false,"types":[]},{"text":"impl Sync for FlowBoxChildClass","synthetic":false,"types":[]},{"text":"impl Sync for FontButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for FontChooserDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for FontChooserWidgetClass","synthetic":false,"types":[]},{"text":"impl Sync for FrameClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureDragClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureLongPressClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureMultiPressClass","synthetic":false,"types":[]},{"text":"impl Sync for GesturePanClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureRotateClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureSingleClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureSwipeClass","synthetic":false,"types":[]},{"text":"impl Sync for GestureZoomClass","synthetic":false,"types":[]},{"text":"impl Sync for GridClass","synthetic":false,"types":[]},{"text":"impl Sync for HeaderBarClass","synthetic":false,"types":[]},{"text":"impl Sync for IMContextClass","synthetic":false,"types":[]},{"text":"impl Sync for IMContextSimpleClass","synthetic":false,"types":[]},{"text":"impl Sync for IMMulticontextClass","synthetic":false,"types":[]},{"text":"impl Sync for IconInfoClass","synthetic":false,"types":[]},{"text":"impl Sync for IconThemeClass","synthetic":false,"types":[]},{"text":"impl Sync for IconViewClass","synthetic":false,"types":[]},{"text":"impl Sync for ImageClass","synthetic":false,"types":[]},{"text":"impl Sync for InfoBarClass","synthetic":false,"types":[]},{"text":"impl Sync for InvisibleClass","synthetic":false,"types":[]},{"text":"impl Sync for LabelClass","synthetic":false,"types":[]},{"text":"impl Sync for LayoutClass","synthetic":false,"types":[]},{"text":"impl Sync for LevelBarClass","synthetic":false,"types":[]},{"text":"impl Sync for LinkButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ListBoxClass","synthetic":false,"types":[]},{"text":"impl Sync for ListBoxRowClass","synthetic":false,"types":[]},{"text":"impl Sync for ListStoreClass","synthetic":false,"types":[]},{"text":"impl Sync for LockButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuBarClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuItemClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuShellClass","synthetic":false,"types":[]},{"text":"impl Sync for MenuToolButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for MessageDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for MiscClass","synthetic":false,"types":[]},{"text":"impl Sync for MountOperationClass","synthetic":false,"types":[]},{"text":"impl Sync for NotebookClass","synthetic":false,"types":[]},{"text":"impl Sync for OffscreenWindowClass","synthetic":false,"types":[]},{"text":"impl Sync for OverlayClass","synthetic":false,"types":[]},{"text":"impl Sync for PageSetupClass","synthetic":false,"types":[]},{"text":"impl Sync for PanedClass","synthetic":false,"types":[]},{"text":"impl Sync for PlacesSidebarClass","synthetic":false,"types":[]},{"text":"impl Sync for PlugClass","synthetic":false,"types":[]},{"text":"impl Sync for PopoverClass","synthetic":false,"types":[]},{"text":"impl Sync for PrintContextClass","synthetic":false,"types":[]},{"text":"impl Sync for PrintOperationClass","synthetic":false,"types":[]},{"text":"impl Sync for PrintSettingsClass","synthetic":false,"types":[]},{"text":"impl Sync for ProgressBarClass","synthetic":false,"types":[]},{"text":"impl Sync for RadioButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for RadioMenuItemClass","synthetic":false,"types":[]},{"text":"impl Sync for RadioToolButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for RangeClass","synthetic":false,"types":[]},{"text":"impl Sync for RecentChooserDialogClass","synthetic":false,"types":[]},{"text":"impl Sync for RecentChooserMenuClass","synthetic":false,"types":[]},{"text":"impl Sync for RecentChooserWidgetClass","synthetic":false,"types":[]},{"text":"impl Sync for RecentFilterClass","synthetic":false,"types":[]},{"text":"impl Sync for RecentManagerClass","synthetic":false,"types":[]},{"text":"impl Sync for RevealerClass","synthetic":false,"types":[]},{"text":"impl Sync for ScaleClass","synthetic":false,"types":[]},{"text":"impl Sync for ScaleButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ScrollbarClass","synthetic":false,"types":[]},{"text":"impl Sync for ScrolledWindowClass","synthetic":false,"types":[]},{"text":"impl Sync for SearchBarClass","synthetic":false,"types":[]},{"text":"impl Sync for SearchEntryClass","synthetic":false,"types":[]},{"text":"impl Sync for SeparatorClass","synthetic":false,"types":[]},{"text":"impl Sync for SeparatorMenuItemClass","synthetic":false,"types":[]},{"text":"impl Sync for SeparatorToolItemClass","synthetic":false,"types":[]},{"text":"impl Sync for SettingsClass","synthetic":false,"types":[]},{"text":"impl Sync for SizeGroupClass","synthetic":false,"types":[]},{"text":"impl Sync for SocketClass","synthetic":false,"types":[]},{"text":"impl Sync for SpinButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for SpinnerClass","synthetic":false,"types":[]},{"text":"impl Sync for StackClass","synthetic":false,"types":[]},{"text":"impl Sync for StackSwitcherClass","synthetic":false,"types":[]},{"text":"impl Sync for StatusbarClass","synthetic":false,"types":[]},{"text":"impl Sync for StyleContextClass","synthetic":false,"types":[]},{"text":"impl Sync for StylePropertiesClass","synthetic":false,"types":[]},{"text":"impl Sync for SwitchClass","synthetic":false,"types":[]},{"text":"impl Sync for TextBufferClass","synthetic":false,"types":[]},{"text":"impl Sync for TextChildAnchorClass","synthetic":false,"types":[]},{"text":"impl Sync for TextMarkClass","synthetic":false,"types":[]},{"text":"impl Sync for TextTagClass","synthetic":false,"types":[]},{"text":"impl Sync for TextTagTableClass","synthetic":false,"types":[]},{"text":"impl Sync for TextViewClass","synthetic":false,"types":[]},{"text":"impl Sync for ToggleButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ToggleToolButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ToolButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for ToolItemClass","synthetic":false,"types":[]},{"text":"impl Sync for ToolItemGroupClass","synthetic":false,"types":[]},{"text":"impl Sync for ToolPaletteClass","synthetic":false,"types":[]},{"text":"impl Sync for ToolbarClass","synthetic":false,"types":[]},{"text":"impl Sync for TooltipClass","synthetic":false,"types":[]},{"text":"impl Sync for TreeModelFilterClass","synthetic":false,"types":[]},{"text":"impl Sync for TreeModelSortClass","synthetic":false,"types":[]},{"text":"impl Sync for TreeSelectionClass","synthetic":false,"types":[]},{"text":"impl Sync for TreeStoreClass","synthetic":false,"types":[]},{"text":"impl Sync for TreeViewClass","synthetic":false,"types":[]},{"text":"impl Sync for TreeViewColumnClass","synthetic":false,"types":[]},{"text":"impl Sync for ViewportClass","synthetic":false,"types":[]},{"text":"impl Sync for VolumeButtonClass","synthetic":false,"types":[]},{"text":"impl Sync for WidgetClass","synthetic":false,"types":[]},{"text":"impl Sync for WindowClass","synthetic":false,"types":[]},{"text":"impl Sync for WindowGroupClass","synthetic":false,"types":[]}];
implementors["gtk_sys"] = [{"text":"impl !Sync for GtkBindingArg_d","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextAppearance_u1","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextAttributes_u1","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAboutDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAboutDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccelGroupClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccelGroupEntry","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAccelGroupPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkAccelKey","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccelLabelClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAccelLabelPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAccelMapClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkActionBarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkActionBarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkActionClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkActionEntry","synthetic":true,"types":[]},{"text":"impl !Sync for GtkActionGroupClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkActionPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkActionableInterface","synthetic":true,"types":[]},{"text":"impl Sync for GtkActivatableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAdjustmentClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAdjustmentPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAlignmentClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAlignmentPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAppChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAppChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAppChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkApplicationClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkApplicationPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkApplicationWindowPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkArrowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkArrowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkArrowClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkArrowPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAspectFrameClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAspectFramePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAssistantClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkAssistantPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBinClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkBinPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBindingArg","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBindingEntry","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBindingSet","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBindingSignal","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBooleanCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkBooleanCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkBorder","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBoxClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkBoxPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkBuildableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBuilderClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkBuilderPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkButtonBoxClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkButtonBoxPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCalendarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCalendarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkCellAccessibleParentIface","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellAreaBoxPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAreaClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAreaContextClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellAreaContextPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellAreaPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkCellEditableIface","synthetic":true,"types":[]},{"text":"impl Sync for GtkCellLayoutIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererAccelPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererClassPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererComboClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererComboPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererPixbufPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererProgressPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererSpinPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererTextClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererTextPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellRendererTogglePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellViewClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCellViewPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCheckButtonClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCheckMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCheckMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCheckMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkColorButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkColorChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorChooserInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkColorChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorSelectionClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkColorSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkColorSelectionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkComboBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkComboBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkComboBoxClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkComboBoxPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkComboBoxTextPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkContainerAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkContainerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkContainerCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkContainerCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkContainerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkContainerPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCssProviderClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkCssProviderPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkCssSection","synthetic":true,"types":[]},{"text":"impl !Sync for GtkDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkDrawingAreaClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkEditableInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEntryAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryBufferClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEntryBufferPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryCompletionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEntryCompletionPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEntryPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEventBoxClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEventBoxPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEventControllerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEventControllerKeyClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEventControllerMotionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkEventControllerScrollClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkExpanderAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkExpanderAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkExpanderClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkExpanderPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFileChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFileChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserNativeClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFileChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileFilterInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFixedChild","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFixedClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFixedPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFlowBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxChildAccessibleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFontButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFontChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontChooserIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFontChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontSelectionClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFontSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFontSelectionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFrameAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFrameAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFrameClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkFramePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkGLAreaClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureDragClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureLongPressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGesturePanClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureRotateClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureSingleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureStylusClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureSwipeClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGestureZoomClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkGradient","synthetic":true,"types":[]},{"text":"impl !Sync for GtkGridClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkGridPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHBoxClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHButtonBoxClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHPanedClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHSVClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkHSVPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHScaleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHScrollbarClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHSeparatorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHandleBoxClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkHandleBoxPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHeaderBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkHeaderBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHeaderBarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkHeaderBarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMContextClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMContextInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIMContextSimplePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMMulticontextClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIMMulticontextPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconFactoryClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIconFactoryPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIconInfoClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkIconSet","synthetic":true,"types":[]},{"text":"impl Sync for GtkIconSource","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconThemeClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIconThemePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIconViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconViewClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkIconViewPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkImageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkImageCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageMenuItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkImageMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkImagePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkInfoBarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkInfoBarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkInvisibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkInvisiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLabelAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLabelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLabelClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLabelPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLabelSelectionInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLayoutClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLayoutPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLevelBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLevelBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLevelBarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLevelBarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLinkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLinkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLinkButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLinkButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkListBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxRowAccessibleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxRowClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListStoreClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkListStorePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLockButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLockButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLockButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkLockButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuBarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuBarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuShellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuShellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuShellClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuShellPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMenuToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMessageDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMessageDialogPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMiscClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMiscPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMountOperationClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNativeDialogClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNotebookAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkNotebookAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNotebookClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNotebookPageAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkNotebookPageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkNotebookPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNumerableIconClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkNumerableIconPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkOffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkOrientableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkOverlayClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkOverlayPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPadActionEntry","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPadControllerClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkPageRange","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPanedAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPanedAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPanedClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPanedPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkPaperSize","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPlugClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPlugPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPopoverAccessibleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPopoverClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPopoverMenuClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPopoverPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPrintOperationClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrintOperationPreviewIface","synthetic":true,"types":[]},{"text":"impl Sync for _GtkPrintOperationPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkProgressBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkProgressBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkProgressBarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkProgressBarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioActionClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioActionEntry","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRadioActionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRadioButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRadioButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRadioMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRadioMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRangeAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRangeAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRangeClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRangePrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRcContext","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRcProperty","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRcStyleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentActionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRecentActionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRecentChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkRecentChooserIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRecentChooserMenuPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRecentChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentData","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentFilterInfo","synthetic":true,"types":[]},{"text":"impl Sync for GtkRecentInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentManagerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRecentManagerPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRendererCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkRendererCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRequestedSize","synthetic":true,"types":[]},{"text":"impl Sync for GtkRequisition","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRevealerClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkScaleAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkScaleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkScaleButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkScalePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkScrollableInterface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScrollbarClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScrolledWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkScrolledWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkScrolledWindowPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSearchBarClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSearchEntryClass","synthetic":true,"types":[]},{"text":"impl Sync for GtkSelectionData","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSeparatorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSeparatorPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSeparatorToolItemPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSettingsClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSettingsPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSettingsValue","synthetic":true,"types":[]},{"text":"impl Sync for _GtkShortcutLabelClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkShortcutsGroupClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkShortcutsSectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkShortcutsShortcutClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkShortcutsWindowClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSizeGroupClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSizeGroupPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSocketClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSocketPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSpinButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSpinButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinnerAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSpinnerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinnerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackAccessibleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackSidebarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkStackSidebarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackSwitcherClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStatusIconClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkStatusIconPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStatusbarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkStatusbarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStatusbarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkStatusbarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStockItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStyleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStyleContextClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkStyleContextPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStylePropertiesClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkStylePropertiesPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkStyleProviderIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSwitchAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSwitchAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSwitchClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkSwitchPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkSymbolicColor","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTableChild","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTableClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTablePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkTableRowCol","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTargetEntry","synthetic":true,"types":[]},{"text":"impl Sync for GtkTargetList","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTargetPair","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTearoffMenuItemClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTearoffMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkTextAppearance","synthetic":true,"types":[]},{"text":"impl Sync for GtkTextAttributes","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextBTree","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextBufferClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextBufferPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextIter","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextMarkClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextTagClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextTagPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextTagTableClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextTagTablePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextViewClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTextViewPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkThemeEngine","synthetic":true,"types":[]},{"text":"impl !Sync for GtkThemingEngineClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkThemingEnginePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleActionClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleActionEntry","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToggleActionPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToggleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToggleButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToggleToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolButtonClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolItemClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToolItemGroupPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToolItemPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolPaletteClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToolPalettePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkToolShellIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolbarClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToolbarPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToplevelAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkToplevelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeDragDestIface","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeDragSourceIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeIter","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeModelFilterPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeModelIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeModelSortClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeModelSortPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreePath","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeRowReference","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeSelectionClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeSelectionPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeSortableIface","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeStoreClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeStorePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeViewClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeViewColumnPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkTreeViewPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkUIManagerClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkUIManagerPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVBoxClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVButtonBoxClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVPanedClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVScaleClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVScrollbarClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVSeparatorClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkViewportClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkViewportPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVolumeButtonClass","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWidgetAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWidgetAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWidgetClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWidgetClassPrivate","synthetic":true,"types":[]},{"text":"impl Sync for GtkWidgetPath","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWidgetPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWindowClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWindowGeometryInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWindowGroupClass","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWindowGroupPrivate","synthetic":true,"types":[]},{"text":"impl Sync for _GtkWindowPrivate","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAboutDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccelGroup","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccelLabel","synthetic":true,"types":[]},{"text":"impl Sync for GtkAccelMap","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAction","synthetic":true,"types":[]},{"text":"impl !Sync for GtkActionBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkActionGroup","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAdjustment","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAlignment","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAppChooserButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAppChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAppChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for GtkApplication","synthetic":true,"types":[]},{"text":"impl !Sync for GtkApplicationWindow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkArrow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkArrowAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAspectFrame","synthetic":true,"types":[]},{"text":"impl !Sync for GtkAssistant","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBin","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBooleanCellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for GtkButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkButtonBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCalendar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellArea","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAreaBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellAreaContext","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRenderer","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererAccel","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererCombo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererProgress","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererSpin","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererSpinner","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererText","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellRendererToggle","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCellView","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCheckButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCheckMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCheckMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl Sync for GtkClipboard","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorSelection","synthetic":true,"types":[]},{"text":"impl !Sync for GtkColorSelectionDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkComboBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkComboBoxAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkComboBoxText","synthetic":true,"types":[]},{"text":"impl !Sync for GtkContainer","synthetic":true,"types":[]},{"text":"impl !Sync for GtkContainerAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkContainerCellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkCssProvider","synthetic":true,"types":[]},{"text":"impl !Sync for GtkDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkDrawingArea","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntry","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryBuffer","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEntryCompletion","synthetic":true,"types":[]},{"text":"impl Sync for GtkEntryIconAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkEventBox","synthetic":true,"types":[]},{"text":"impl Sync for GtkEventController","synthetic":true,"types":[]},{"text":"impl Sync for GtkEventControllerKey","synthetic":true,"types":[]},{"text":"impl Sync for GtkEventControllerMotion","synthetic":true,"types":[]},{"text":"impl Sync for GtkEventControllerScroll","synthetic":true,"types":[]},{"text":"impl !Sync for GtkExpander","synthetic":true,"types":[]},{"text":"impl !Sync for GtkExpanderAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserDialog","synthetic":true,"types":[]},{"text":"impl Sync for GtkFileChooserNative","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFileChooserWidget","synthetic":true,"types":[]},{"text":"impl Sync for GtkFileFilter","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFixed","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxChild","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFlowBoxChildAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontChooserWidget","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontSelection","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFontSelectionDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFrame","synthetic":true,"types":[]},{"text":"impl !Sync for GtkFrameAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkGLArea","synthetic":true,"types":[]},{"text":"impl Sync for GtkGesture","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureDrag","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureLongPress","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureMultiPress","synthetic":true,"types":[]},{"text":"impl Sync for GtkGesturePan","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureRotate","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureSingle","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureStylus","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureSwipe","synthetic":true,"types":[]},{"text":"impl Sync for GtkGestureZoom","synthetic":true,"types":[]},{"text":"impl !Sync for GtkGrid","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHButtonBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHPaned","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHSV","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHScale","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHScrollbar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHSeparator","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHandleBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHeaderBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkHeaderBarAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMContext","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMContextSimple","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIMMulticontext","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconFactory","synthetic":true,"types":[]},{"text":"impl Sync for GtkIconInfo","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconTheme","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconView","synthetic":true,"types":[]},{"text":"impl !Sync for GtkIconViewAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImage","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageCellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkImageMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkInfoBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkInvisible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLabel","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLabelAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLayout","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLevelBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLevelBarAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLinkButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLinkButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxRow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListBoxRowAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkListStore","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLockButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkLockButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenu","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuShell","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuShellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMenuToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMessageDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMisc","synthetic":true,"types":[]},{"text":"impl Sync for GtkModelButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkMountOperation","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNativeDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNotebook","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNotebookAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNotebookPageAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkNumerableIcon","synthetic":true,"types":[]},{"text":"impl !Sync for GtkOffscreenWindow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkOverlay","synthetic":true,"types":[]},{"text":"impl Sync for GtkPadController","synthetic":true,"types":[]},{"text":"impl Sync for GtkPageSetup","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPaned","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPanedAccessible","synthetic":true,"types":[]},{"text":"impl Sync for GtkPlacesSidebar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPlug","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPopover","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPopoverAccessible","synthetic":true,"types":[]},{"text":"impl Sync for GtkPopoverMenu","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrintContext","synthetic":true,"types":[]},{"text":"impl !Sync for GtkPrintOperation","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrintSettings","synthetic":true,"types":[]},{"text":"impl !Sync for GtkProgressBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkProgressBarAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioAction","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRadioToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRange","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRangeAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRcStyle","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentAction","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentChooserDialog","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentChooserMenu","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentChooserWidget","synthetic":true,"types":[]},{"text":"impl Sync for GtkRecentFilter","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRecentManager","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRendererCellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkRevealer","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScale","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScaleButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScrollbar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScrolledWindow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkScrolledWindowAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSearchBar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSearchEntry","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSeparator","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSeparatorToolItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSettings","synthetic":true,"types":[]},{"text":"impl Sync for GtkShortcutLabel","synthetic":true,"types":[]},{"text":"impl Sync for GtkShortcutsGroup","synthetic":true,"types":[]},{"text":"impl Sync for GtkShortcutsSection","synthetic":true,"types":[]},{"text":"impl Sync for GtkShortcutsShortcut","synthetic":true,"types":[]},{"text":"impl !Sync for GtkShortcutsWindow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSizeGroup","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSocket","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinner","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSpinnerAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStack","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackSidebar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStackSwitcher","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStatusIcon","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStatusbar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStatusbarAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStyle","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStyleContext","synthetic":true,"types":[]},{"text":"impl !Sync for GtkStyleProperties","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSwitch","synthetic":true,"types":[]},{"text":"impl !Sync for GtkSwitchAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTable","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTearoffMenuItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextBuffer","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextCellAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextChildAnchor","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextMark","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextTag","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextTagTable","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextView","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTextViewAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkThemingEngine","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleAction","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleButtonAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToggleToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolItem","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolItemGroup","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolPalette","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToolbar","synthetic":true,"types":[]},{"text":"impl Sync for GtkTooltip","synthetic":true,"types":[]},{"text":"impl !Sync for GtkToplevelAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeModelFilter","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeModelSort","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeSelection","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeStore","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeView","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeViewAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkTreeViewColumn","synthetic":true,"types":[]},{"text":"impl !Sync for GtkUIManager","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVButtonBox","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVPaned","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVScale","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVScrollbar","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVSeparator","synthetic":true,"types":[]},{"text":"impl !Sync for GtkViewport","synthetic":true,"types":[]},{"text":"impl !Sync for GtkVolumeButton","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWidget","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWidgetAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWindow","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWindowAccessible","synthetic":true,"types":[]},{"text":"impl !Sync for GtkWindowGroup","synthetic":true,"types":[]},{"text":"impl Sync for GtkActionable","synthetic":true,"types":[]},{"text":"impl Sync for GtkActivatable","synthetic":true,"types":[]},{"text":"impl Sync for GtkAppChooser","synthetic":true,"types":[]},{"text":"impl Sync for GtkBuildable","synthetic":true,"types":[]},{"text":"impl Sync for GtkCellAccessibleParent","synthetic":true,"types":[]},{"text":"impl Sync for GtkCellEditable","synthetic":true,"types":[]},{"text":"impl Sync for GtkCellLayout","synthetic":true,"types":[]},{"text":"impl Sync for GtkColorChooser","synthetic":true,"types":[]},{"text":"impl Sync for GtkEditable","synthetic":true,"types":[]},{"text":"impl Sync for GtkFileChooser","synthetic":true,"types":[]},{"text":"impl Sync for GtkFontChooser","synthetic":true,"types":[]},{"text":"impl Sync for GtkOrientable","synthetic":true,"types":[]},{"text":"impl Sync for GtkPrintOperationPreview","synthetic":true,"types":[]},{"text":"impl Sync for GtkRecentChooser","synthetic":true,"types":[]},{"text":"impl Sync for GtkScrollable","synthetic":true,"types":[]},{"text":"impl Sync for GtkStyleProvider","synthetic":true,"types":[]},{"text":"impl Sync for GtkToolShell","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeDragDest","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeDragSource","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeModel","synthetic":true,"types":[]},{"text":"impl Sync for GtkTreeSortable","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for SendRequest&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for ReadySendRequest&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Sync for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Sync for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl Sync for PushPromise","synthetic":true,"types":[]},{"text":"impl Sync for PushPromises","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Sync for Handshake&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Sync for Connection&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send + Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for SendResponse&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for SendPushedResponse&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for SendStream&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StreamId","synthetic":true,"types":[]},{"text":"impl Sync for RecvStream","synthetic":true,"types":[]},{"text":"impl Sync for FlowControl","synthetic":true,"types":[]},{"text":"impl Sync for PingPong","synthetic":true,"types":[]},{"text":"impl Sync for Ping","synthetic":true,"types":[]},{"text":"impl Sync for Pong","synthetic":true,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; !Sync for Bucket&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RawIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for RawIterHash&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Sync for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Sync for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for ValuesMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawEntryBuilderMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawEntryMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawVacantEntryMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawEntryBuilder&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Sync for Iter&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Sync for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Sync for Drain&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Sync for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for SymmetricDifference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TryReserveError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RawTable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for RawIntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for RawDrain&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V, S&gt; Sync for RawOccupiedEntryMut&lt;'_, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V, S&gt; Sync for OccupiedEntry&lt;'_, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Sync for HeaderMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Keys&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Values&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ValuesMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for GetAll&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Entry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for OccupiedEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ValueIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HeaderName","synthetic":true,"types":[]},{"text":"impl Sync for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl Sync for HeaderValue","synthetic":true,"types":[]},{"text":"impl Sync for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl Sync for ToStrError","synthetic":true,"types":[]},{"text":"impl Sync for Method","synthetic":true,"types":[]},{"text":"impl Sync for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Request&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Parts","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Response&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Parts","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for StatusCode","synthetic":true,"types":[]},{"text":"impl Sync for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl Sync for Authority","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Scheme","synthetic":true,"types":[]},{"text":"impl Sync for Uri","synthetic":true,"types":[]},{"text":"impl Sync for Parts","synthetic":true,"types":[]},{"text":"impl Sync for InvalidUri","synthetic":true,"types":[]},{"text":"impl Sync for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl Sync for Version","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Extensions","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Sync for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Sync for IterMut&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Sync for Drain&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Sync for ValueIterMut&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync&gt; Sync for ValueDrain&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["httparse"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Sync for Request&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Sync for Response&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Sync for Idna","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Sync for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Sync for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for ValuesMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Sync for SymmetricDifference&lt;'a, T, S1, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K:&nbsp;Sync, V:&nbsp;Sync&gt; Sync for OccupiedEntry&lt;'_, K, V&gt;","synthetic":false,"types":[]}];
implementors["iovec"] = [{"text":"impl Sync for IoVec","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, Pred&gt; Sync for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; Sync for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Sync for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Sync for TakeWhileRef&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Sync for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !Sync for Format&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; !Sync for FormatWith&lt;'a, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Sync for IntoChunks&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !Sync for Chunk&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !Sync for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; !Sync for GroupBy&lt;K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; !Sync for Group&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; !Sync for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Sync for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Sync for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Sync for PeekingTakeWhile&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; Sync for ProcessResults&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Sync for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Sync for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Sync for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Sync for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Sync for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; Sync for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Sync for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Sync for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Sync for Buffer","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for LanguageTag","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Sync for statvfs","synthetic":true,"types":[]},{"text":"impl Sync for max_align_t","synthetic":true,"types":[]},{"text":"impl Sync for sigaction","synthetic":true,"types":[]},{"text":"impl Sync for statfs","synthetic":true,"types":[]},{"text":"impl Sync for flock","synthetic":true,"types":[]},{"text":"impl Sync for flock64","synthetic":true,"types":[]},{"text":"impl Sync for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Sync for stack_t","synthetic":true,"types":[]},{"text":"impl Sync for stat","synthetic":true,"types":[]},{"text":"impl Sync for stat64","synthetic":true,"types":[]},{"text":"impl Sync for statfs64","synthetic":true,"types":[]},{"text":"impl Sync for statvfs64","synthetic":true,"types":[]},{"text":"impl Sync for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Sync for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for user","synthetic":true,"types":[]},{"text":"impl !Sync for mcontext_t","synthetic":true,"types":[]},{"text":"impl Sync for ipc_perm","synthetic":true,"types":[]},{"text":"impl Sync for shmid_ds","synthetic":true,"types":[]},{"text":"impl Sync for termios2","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Sync for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for ucontext_t","synthetic":true,"types":[]},{"text":"impl Sync for sigset_t","synthetic":true,"types":[]},{"text":"impl Sync for sysinfo","synthetic":true,"types":[]},{"text":"impl Sync for msqid_ds","synthetic":true,"types":[]},{"text":"impl Sync for sem_t","synthetic":true,"types":[]},{"text":"impl Sync for statx","synthetic":true,"types":[]},{"text":"impl Sync for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Sync for aiocb","synthetic":true,"types":[]},{"text":"impl Sync for __exit_status","synthetic":true,"types":[]},{"text":"impl Sync for __timeval","synthetic":true,"types":[]},{"text":"impl !Sync for glob64_t","synthetic":true,"types":[]},{"text":"impl !Sync for msghdr","synthetic":true,"types":[]},{"text":"impl Sync for cmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for termios","synthetic":true,"types":[]},{"text":"impl Sync for mallinfo","synthetic":true,"types":[]},{"text":"impl Sync for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Sync for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Sync for nlattr","synthetic":true,"types":[]},{"text":"impl !Sync for rtentry","synthetic":true,"types":[]},{"text":"impl Sync for timex","synthetic":true,"types":[]},{"text":"impl Sync for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Sync for regex_t","synthetic":true,"types":[]},{"text":"impl Sync for utmpx","synthetic":true,"types":[]},{"text":"impl Sync for fpos64_t","synthetic":true,"types":[]},{"text":"impl Sync for rlimit64","synthetic":true,"types":[]},{"text":"impl !Sync for glob_t","synthetic":true,"types":[]},{"text":"impl !Sync for passwd","synthetic":true,"types":[]},{"text":"impl !Sync for spwd","synthetic":true,"types":[]},{"text":"impl Sync for dqblk","synthetic":true,"types":[]},{"text":"impl Sync for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Sync for itimerspec","synthetic":true,"types":[]},{"text":"impl Sync for fsid_t","synthetic":true,"types":[]},{"text":"impl Sync for packet_mreq","synthetic":true,"types":[]},{"text":"impl Sync for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Sync for if_nameindex","synthetic":true,"types":[]},{"text":"impl Sync for msginfo","synthetic":true,"types":[]},{"text":"impl Sync for sembuf","synthetic":true,"types":[]},{"text":"impl Sync for input_event","synthetic":true,"types":[]},{"text":"impl Sync for input_id","synthetic":true,"types":[]},{"text":"impl Sync for input_absinfo","synthetic":true,"types":[]},{"text":"impl Sync for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Sync for input_mask","synthetic":true,"types":[]},{"text":"impl Sync for ff_replay","synthetic":true,"types":[]},{"text":"impl Sync for ff_trigger","synthetic":true,"types":[]},{"text":"impl Sync for ff_envelope","synthetic":true,"types":[]},{"text":"impl Sync for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Sync for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_effect","synthetic":true,"types":[]},{"text":"impl !Sync for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for ucred","synthetic":true,"types":[]},{"text":"impl !Sync for mntent","synthetic":true,"types":[]},{"text":"impl !Sync for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Sync for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Sync for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for arpd_request","synthetic":true,"types":[]},{"text":"impl Sync for inotify_event","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_response","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Sync for regmatch_t","synthetic":true,"types":[]},{"text":"impl Sync for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Sync for __c_anonymous_sockaddr_can_tp","synthetic":true,"types":[]},{"text":"impl Sync for __c_anonymous_sockaddr_can_j1939","synthetic":true,"types":[]},{"text":"impl Sync for can_filter","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Sync for dirent","synthetic":true,"types":[]},{"text":"impl Sync for dirent64","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Sync for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Sync for mq_attr","synthetic":true,"types":[]},{"text":"impl Sync for __c_anonymous_sockaddr_can_can_addr","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_can","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Sync for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Sync for can_frame","synthetic":true,"types":[]},{"text":"impl Sync for canfd_frame","synthetic":true,"types":[]},{"text":"impl Sync for timezone","synthetic":true,"types":[]},{"text":"impl Sync for in_addr","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Sync for addrinfo","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Sync for fd_set","synthetic":true,"types":[]},{"text":"impl !Sync for tm","synthetic":true,"types":[]},{"text":"impl Sync for sched_param","synthetic":true,"types":[]},{"text":"impl !Sync for Dl_info","synthetic":true,"types":[]},{"text":"impl !Sync for lconv","synthetic":true,"types":[]},{"text":"impl Sync for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Sync for ifaddrs","synthetic":true,"types":[]},{"text":"impl Sync for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Sync for arpreq","synthetic":true,"types":[]},{"text":"impl Sync for arpreq_old","synthetic":true,"types":[]},{"text":"impl Sync for arphdr","synthetic":true,"types":[]},{"text":"impl !Sync for mmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for epoll_event","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Sync for utsname","synthetic":true,"types":[]},{"text":"impl !Sync for sigevent","synthetic":true,"types":[]},{"text":"impl Sync for in6_addr","synthetic":true,"types":[]},{"text":"impl Sync for DIR","synthetic":true,"types":[]},{"text":"impl !Sync for group","synthetic":true,"types":[]},{"text":"impl Sync for utimbuf","synthetic":true,"types":[]},{"text":"impl Sync for timeval","synthetic":true,"types":[]},{"text":"impl Sync for timespec","synthetic":true,"types":[]},{"text":"impl Sync for rlimit","synthetic":true,"types":[]},{"text":"impl Sync for rusage","synthetic":true,"types":[]},{"text":"impl Sync for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Sync for hostent","synthetic":true,"types":[]},{"text":"impl !Sync for iovec","synthetic":true,"types":[]},{"text":"impl Sync for pollfd","synthetic":true,"types":[]},{"text":"impl Sync for winsize","synthetic":true,"types":[]},{"text":"impl Sync for linger","synthetic":true,"types":[]},{"text":"impl !Sync for sigval","synthetic":true,"types":[]},{"text":"impl Sync for itimerval","synthetic":true,"types":[]},{"text":"impl Sync for tms","synthetic":true,"types":[]},{"text":"impl !Sync for servent","synthetic":true,"types":[]},{"text":"impl !Sync for protoent","synthetic":true,"types":[]},{"text":"impl Sync for FILE","synthetic":true,"types":[]},{"text":"impl Sync for fpos_t","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;'a, K, V&gt; Sync for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !Sync for Entry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&nbsp;=&nbsp;RandomState&gt; !Sync for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K:&nbsp;Sync, V:&nbsp;Sync, S:&nbsp;Sync&gt; Sync for LinkedHashMap&lt;K, V, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for Entries&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl Sync for GuardSend","synthetic":true,"types":[]},{"text":"impl !Sync for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, G:&nbsp;GetThreadId + Sync, T:&nbsp;?Sized + Send&gt; Sync for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Sync, T:&nbsp;?Sized + Send + Sync&gt; Sync for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelError","synthetic":true,"types":[]}];
implementors["lru_cache"] = [{"text":"impl&lt;K, V, S&gt; Sync for LruCache&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Sync for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Sync for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Sync for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Sync for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Sync for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Sync for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Sync for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Sync for MinReset","synthetic":true,"types":[]},{"text":"impl Sync for ZeroReset","synthetic":true,"types":[]},{"text":"impl Sync for FullReset","synthetic":true,"types":[]},{"text":"impl Sync for InflateState","synthetic":true,"types":[]},{"text":"impl Sync for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Sync for MZFlush","synthetic":true,"types":[]},{"text":"impl Sync for MZStatus","synthetic":true,"types":[]},{"text":"impl Sync for MZError","synthetic":true,"types":[]},{"text":"impl Sync for DataFormat","synthetic":true,"types":[]},{"text":"impl Sync for StreamResult","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Sync for PollOpt","synthetic":true,"types":[]},{"text":"impl Sync for Ready","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Poll","synthetic":true,"types":[]},{"text":"impl Sync for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UnixReady","synthetic":true,"types":[]},{"text":"impl Sync for Token","synthetic":true,"types":[]},{"text":"impl Sync for TcpStream","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]},{"text":"impl Sync for Registration","synthetic":false,"types":[]},{"text":"impl Sync for SetReadiness","synthetic":false,"types":[]}];
implementors["mio_uds"] = [{"text":"impl Sync for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Sync for UnixListener","synthetic":true,"types":[]},{"text":"impl Sync for UnixStream","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !Sync for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for UdpBuilder","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Sync for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Sync for FloatErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for ParseFloatError","synthetic":true,"types":[]}];
implementors["object"] = [{"text":"impl Sync for Architecture","synthetic":true,"types":[]},{"text":"impl Sync for AddressSize","synthetic":true,"types":[]},{"text":"impl Sync for BinaryFormat","synthetic":true,"types":[]},{"text":"impl Sync for SectionKind","synthetic":true,"types":[]},{"text":"impl Sync for ComdatKind","synthetic":true,"types":[]},{"text":"impl Sync for SymbolKind","synthetic":true,"types":[]},{"text":"impl Sync for SymbolScope","synthetic":true,"types":[]},{"text":"impl Sync for RelocationKind","synthetic":true,"types":[]},{"text":"impl Sync for RelocationEncoding","synthetic":true,"types":[]},{"text":"impl Sync for FileFlags","synthetic":true,"types":[]},{"text":"impl Sync for SectionFlags","synthetic":true,"types":[]},{"text":"impl&lt;Section&gt; Sync for SymbolFlags&lt;Section&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Endianness","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]},{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for Bytes&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for StringTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for File&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Segment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Section&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for ComdatIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Comdat&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for ComdatSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SymbolTable&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Symbol&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for DynamicRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SectionRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ArchiveKind","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ArchiveFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ArchiveMemberIterator&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ArchiveMember&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for CoffFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for SectionTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSegment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSection&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for SymbolTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSymbolTable&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSymbol&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffComdatIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffComdat&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffComdatSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for ElfFile&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSegmentIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSegment&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for SectionTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSectionIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSection&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for SymbolTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSymbolTable&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSymbolIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSymbol&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RelocationSections","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfDynamicRelocationIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rel: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rela: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSectionRelocationIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rel: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rela: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfComdatIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfComdat&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfComdatSectionIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for NoteIterator&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for Note&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::NoteHeader: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Sync for MachOFile&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOComdatIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOComdat&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOComdatSectionIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSegmentIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSegment&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Segment: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSectionIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSection&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Sync for SymbolTable&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSymbolTable&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSymbolIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSymbol&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachORelocationIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Pe&gt; Sync for PeFile&lt;'data, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeComdatIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeComdat&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeComdatSectionIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSegmentIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSegment&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSectionIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSection&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NoDynamicRelocationIterator","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for FileKind","synthetic":true,"types":[]},{"text":"impl Sync for SectionIndex","synthetic":true,"types":[]},{"text":"impl Sync for SymbolIndex","synthetic":true,"types":[]},{"text":"impl Sync for SymbolSection","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SymbolMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for SymbolMapName&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ObjectMap&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ObjectMapEntry&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for Import&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for Export&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Sync for Relocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for CompressedData&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CompressionFormat","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FileHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FileHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Ident","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SectionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SectionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for CompressionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for CompressionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Sym32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Sym64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Syminfo32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Syminfo64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rel32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rela32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rel64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rela64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ProgramHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ProgramHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Dyn32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Dyn64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for NoteHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for NoteHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FatHeader","synthetic":true,"types":[]},{"text":"impl Sync for FatArch32","synthetic":true,"types":[]},{"text":"impl Sync for FatArch64","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for MachHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for MachHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LoadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LcStr&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SegmentCommand32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SegmentCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Section32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Section64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Fvmlib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FvmlibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Dylib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubFrameworkCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubClientCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubUmbrellaCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubLibraryCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for PreboundDylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylinkerCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ThreadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for RoutinesCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for RoutinesCommand_64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DysymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibTableOfContents&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibModule32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibModule64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibReference&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for TwolevelHintsCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for TwolevelHint&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for PrebindCksumCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for UuidCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for RpathCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LinkeditDataCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for EncryptionInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for EncryptionInfoCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for VersionMinCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for BuildVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for BuildToolVersion&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DyldInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LinkerOptionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SymSegCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for IdentCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FvmfileCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for EntryPointCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SourceVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DataInCodeEntry&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for NoteCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Nlist32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Nlist64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Relocation&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RelocationInfo","synthetic":true,"types":[]},{"text":"impl Sync for ScatteredRelocationInfo","synthetic":true,"types":[]},{"text":"impl Sync for ImageDosHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageOs2Header","synthetic":true,"types":[]},{"text":"impl Sync for ImageVxdHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageFileHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageDataDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageOptionalHeader32","synthetic":true,"types":[]},{"text":"impl Sync for ImageRomOptionalHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageOptionalHeader64","synthetic":true,"types":[]},{"text":"impl Sync for ImageNtHeaders64","synthetic":true,"types":[]},{"text":"impl Sync for ImageNtHeaders32","synthetic":true,"types":[]},{"text":"impl Sync for ImageRomHeaders","synthetic":true,"types":[]},{"text":"impl Sync for Guid","synthetic":true,"types":[]},{"text":"impl Sync for AnonObjectHeader","synthetic":true,"types":[]},{"text":"impl Sync for AnonObjectHeaderV2","synthetic":true,"types":[]},{"text":"impl Sync for AnonObjectHeaderBigobj","synthetic":true,"types":[]},{"text":"impl Sync for ImageSectionHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbol","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbolBytes","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbolEx","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbolExBytes","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolTokenDef","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolFunction","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolFunctionBeginEnd","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolWeak","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolSection","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolCrc","synthetic":true,"types":[]},{"text":"impl Sync for ImageRelocation","synthetic":true,"types":[]},{"text":"impl Sync for ImageLinenumber","synthetic":true,"types":[]},{"text":"impl Sync for ImageBaseRelocation","synthetic":true,"types":[]},{"text":"impl Sync for ImageArchiveMemberHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageExportDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageImportByName","synthetic":true,"types":[]},{"text":"impl Sync for ImageTlsDirectory64","synthetic":true,"types":[]},{"text":"impl Sync for ImageTlsDirectory32","synthetic":true,"types":[]},{"text":"impl Sync for ImageImportDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ImageBoundImportDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ImageBoundForwarderRef","synthetic":true,"types":[]},{"text":"impl Sync for ImageDelayloadDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirectoryEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirectoryString","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirStringU","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDataEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageLoadConfigCodeIntegrity","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocationTable","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation32","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation64","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation32V2","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation64V2","synthetic":true,"types":[]},{"text":"impl Sync for ImagePrologueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageEpilogueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageLoadConfigDirectory32","synthetic":true,"types":[]},{"text":"impl Sync for ImageLoadConfigDirectory64","synthetic":true,"types":[]},{"text":"impl Sync for ImageHotPatchInfo","synthetic":true,"types":[]},{"text":"impl Sync for ImageHotPatchBase","synthetic":true,"types":[]},{"text":"impl Sync for ImageHotPatchHashes","synthetic":true,"types":[]},{"text":"impl Sync for ImageArmRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageArm64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageAlpha64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageAlphaRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageEnclaveConfig32","synthetic":true,"types":[]},{"text":"impl Sync for ImageEnclaveConfig64","synthetic":true,"types":[]},{"text":"impl Sync for ImageEnclaveImport","synthetic":true,"types":[]},{"text":"impl Sync for ImageDebugDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageCoffSymbolsHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageDebugMisc","synthetic":true,"types":[]},{"text":"impl Sync for ImageFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageFunctionEntry64","synthetic":true,"types":[]},{"text":"impl Sync for ImageSeparateDebugHeader","synthetic":true,"types":[]},{"text":"impl Sync for NonPagedDebugInfo","synthetic":true,"types":[]},{"text":"impl Sync for ImageArchitectureEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImportObjectHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageCor20Header","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Sync for OnceCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T&gt; !Sync for Lazy&lt;T, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for OnceNonZeroUsize","synthetic":true,"types":[]},{"text":"impl Sync for OnceBool","synthetic":true,"types":[]},{"text":"impl&lt;T, F:&nbsp;Send&gt; Sync for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnceCell&lt;T&gt;: Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync + Send&gt; Sync for OnceBox&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pango"] = [{"text":"impl !Sync for Context","synthetic":true,"types":[]},{"text":"impl !Sync for EngineLang","synthetic":true,"types":[]},{"text":"impl !Sync for EngineShape","synthetic":true,"types":[]},{"text":"impl !Sync for Font","synthetic":true,"types":[]},{"text":"impl !Sync for FontFace","synthetic":true,"types":[]},{"text":"impl !Sync for FontFamily","synthetic":true,"types":[]},{"text":"impl !Sync for FontMap","synthetic":true,"types":[]},{"text":"impl !Sync for Fontset","synthetic":true,"types":[]},{"text":"impl !Sync for FontsetSimple","synthetic":true,"types":[]},{"text":"impl !Sync for Layout","synthetic":true,"types":[]},{"text":"impl !Sync for Renderer","synthetic":true,"types":[]},{"text":"impl !Sync for AttrIterator","synthetic":true,"types":[]},{"text":"impl !Sync for AttrList","synthetic":true,"types":[]},{"text":"impl !Sync for Attribute","synthetic":true,"types":[]},{"text":"impl !Sync for Color","synthetic":true,"types":[]},{"text":"impl !Sync for FontDescription","synthetic":true,"types":[]},{"text":"impl !Sync for FontMetrics","synthetic":true,"types":[]},{"text":"impl !Sync for GlyphItem","synthetic":true,"types":[]},{"text":"impl !Sync for GlyphItemIter","synthetic":true,"types":[]},{"text":"impl !Sync for GlyphString","synthetic":true,"types":[]},{"text":"impl !Sync for Item","synthetic":true,"types":[]},{"text":"impl !Sync for LayoutIter","synthetic":true,"types":[]},{"text":"impl !Sync for LayoutLine","synthetic":true,"types":[]},{"text":"impl !Sync for Matrix","synthetic":true,"types":[]},{"text":"impl !Sync for TabArray","synthetic":true,"types":[]},{"text":"impl Sync for Alignment","synthetic":true,"types":[]},{"text":"impl Sync for AttrType","synthetic":true,"types":[]},{"text":"impl Sync for BidiType","synthetic":true,"types":[]},{"text":"impl Sync for CoverageLevel","synthetic":true,"types":[]},{"text":"impl Sync for Direction","synthetic":true,"types":[]},{"text":"impl Sync for EllipsizeMode","synthetic":true,"types":[]},{"text":"impl Sync for Gravity","synthetic":true,"types":[]},{"text":"impl Sync for GravityHint","synthetic":true,"types":[]},{"text":"impl Sync for RenderPart","synthetic":true,"types":[]},{"text":"impl Sync for Script","synthetic":true,"types":[]},{"text":"impl Sync for Stretch","synthetic":true,"types":[]},{"text":"impl Sync for Style","synthetic":true,"types":[]},{"text":"impl Sync for TabAlign","synthetic":true,"types":[]},{"text":"impl Sync for Underline","synthetic":true,"types":[]},{"text":"impl Sync for Variant","synthetic":true,"types":[]},{"text":"impl Sync for Weight","synthetic":true,"types":[]},{"text":"impl Sync for WrapMode","synthetic":true,"types":[]},{"text":"impl Sync for FontMask","synthetic":true,"types":[]},{"text":"impl !Sync for Analysis","synthetic":true,"types":[]},{"text":"impl !Sync for AttrClass","synthetic":true,"types":[]},{"text":"impl !Sync for Language","synthetic":true,"types":[]},{"text":"impl Sync for Rectangle","synthetic":true,"types":[]},{"text":"impl !Sync for GlyphInfo","synthetic":true,"types":[]},{"text":"impl Sync for GlyphGeometry","synthetic":true,"types":[]},{"text":"impl !Sync for Coverage","synthetic":true,"types":[]},{"text":"impl Sync for ContextClass","synthetic":false,"types":[]},{"text":"impl Sync for EngineLangClass","synthetic":false,"types":[]},{"text":"impl Sync for EngineShapeClass","synthetic":false,"types":[]},{"text":"impl Sync for FontClass","synthetic":false,"types":[]},{"text":"impl Sync for FontFaceClass","synthetic":false,"types":[]},{"text":"impl Sync for FontFamilyClass","synthetic":false,"types":[]},{"text":"impl Sync for FontMapClass","synthetic":false,"types":[]},{"text":"impl Sync for FontsetClass","synthetic":false,"types":[]},{"text":"impl Sync for FontsetSimpleClass","synthetic":false,"types":[]},{"text":"impl Sync for LayoutClass","synthetic":false,"types":[]},{"text":"impl Sync for RendererClass","synthetic":false,"types":[]}];
implementors["pango_sys"] = [{"text":"impl !Sync for PangoAnalysis","synthetic":true,"types":[]},{"text":"impl Sync for PangoAttrClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrColor","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrFloat","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrFontDesc","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrFontFeatures","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrInt","synthetic":true,"types":[]},{"text":"impl Sync for PangoAttrIterator","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrLanguage","synthetic":true,"types":[]},{"text":"impl Sync for PangoAttrList","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrShape","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrSize","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttrString","synthetic":true,"types":[]},{"text":"impl !Sync for PangoAttribute","synthetic":true,"types":[]},{"text":"impl Sync for PangoColor","synthetic":true,"types":[]},{"text":"impl Sync for _PangoContextClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineInfo","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineLangClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineScriptInfo","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineShapeClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontClass","synthetic":true,"types":[]},{"text":"impl Sync for PangoFontDescription","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontFaceClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontFamilyClass","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontMapClass","synthetic":true,"types":[]},{"text":"impl Sync for PangoFontMetrics","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontsetClass","synthetic":true,"types":[]},{"text":"impl Sync for _PangoFontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl Sync for PangoGlyphGeometry","synthetic":true,"types":[]},{"text":"impl Sync for PangoGlyphInfo","synthetic":true,"types":[]},{"text":"impl !Sync for PangoGlyphItem","synthetic":true,"types":[]},{"text":"impl !Sync for PangoGlyphItemIter","synthetic":true,"types":[]},{"text":"impl !Sync for PangoGlyphString","synthetic":true,"types":[]},{"text":"impl Sync for PangoGlyphVisAttr","synthetic":true,"types":[]},{"text":"impl Sync for PangoIncludedModule","synthetic":true,"types":[]},{"text":"impl !Sync for PangoItem","synthetic":true,"types":[]},{"text":"impl Sync for PangoLanguage","synthetic":true,"types":[]},{"text":"impl Sync for _PangoLayoutClass","synthetic":true,"types":[]},{"text":"impl Sync for PangoLayoutIter","synthetic":true,"types":[]},{"text":"impl !Sync for PangoLayoutLine","synthetic":true,"types":[]},{"text":"impl Sync for PangoLogAttr","synthetic":true,"types":[]},{"text":"impl Sync for _PangoMap","synthetic":true,"types":[]},{"text":"impl Sync for _PangoMapEntry","synthetic":true,"types":[]},{"text":"impl Sync for PangoMatrix","synthetic":true,"types":[]},{"text":"impl Sync for PangoRectangle","synthetic":true,"types":[]},{"text":"impl !Sync for PangoRendererClass","synthetic":true,"types":[]},{"text":"impl Sync for _PangoRendererPrivate","synthetic":true,"types":[]},{"text":"impl Sync for PangoScriptIter","synthetic":true,"types":[]},{"text":"impl Sync for PangoTabArray","synthetic":true,"types":[]},{"text":"impl Sync for PangoContext","synthetic":true,"types":[]},{"text":"impl Sync for PangoCoverage","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngine","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineLang","synthetic":true,"types":[]},{"text":"impl !Sync for PangoEngineShape","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFont","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontFace","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontFamily","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontMap","synthetic":true,"types":[]},{"text":"impl !Sync for PangoFontset","synthetic":true,"types":[]},{"text":"impl Sync for PangoFontsetSimple","synthetic":true,"types":[]},{"text":"impl Sync for PangoLayout","synthetic":true,"types":[]},{"text":"impl !Sync for PangoRenderer","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Sync for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Sync for Condvar","synthetic":true,"types":[]},{"text":"impl Sync for OnceState","synthetic":true,"types":[]},{"text":"impl Sync for Once","synthetic":true,"types":[]},{"text":"impl Sync for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawRwLock","synthetic":true,"types":[]},{"text":"impl Sync for RawThreadId","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Sync for ParkResult","synthetic":true,"types":[]},{"text":"impl Sync for UnparkResult","synthetic":true,"types":[]},{"text":"impl Sync for RequeueOp","synthetic":true,"types":[]},{"text":"impl Sync for FilterOp","synthetic":true,"types":[]},{"text":"impl Sync for UnparkToken","synthetic":true,"types":[]},{"text":"impl Sync for ParkToken","synthetic":true,"types":[]},{"text":"impl Sync for SpinWait","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Sync for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Sync for YesS3","synthetic":true,"types":[]},{"text":"impl Sync for NoS3","synthetic":true,"types":[]},{"text":"impl Sync for YesS4","synthetic":true,"types":[]},{"text":"impl Sync for NoS4","synthetic":true,"types":[]},{"text":"impl Sync for YesA1","synthetic":true,"types":[]},{"text":"impl Sync for NoA1","synthetic":true,"types":[]},{"text":"impl Sync for YesA2","synthetic":true,"types":[]},{"text":"impl Sync for NoA2","synthetic":true,"types":[]},{"text":"impl Sync for YesNI","synthetic":true,"types":[]},{"text":"impl Sync for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Sync for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Sync for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for vec128_storage","synthetic":true,"types":[]},{"text":"impl Sync for vec256_storage","synthetic":true,"types":[]},{"text":"impl Sync for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Sync for IntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for TokenStream","synthetic":true,"types":[]},{"text":"impl !Sync for LexError","synthetic":true,"types":[]},{"text":"impl !Sync for Span","synthetic":true,"types":[]},{"text":"impl !Sync for TokenTree","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl Sync for Delimiter","synthetic":true,"types":[]},{"text":"impl !Sync for Punct","synthetic":true,"types":[]},{"text":"impl Sync for Spacing","synthetic":true,"types":[]},{"text":"impl !Sync for Ident","synthetic":true,"types":[]},{"text":"impl !Sync for Literal","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl !Sync for Diagnostic","synthetic":true,"types":[]},{"text":"impl !Sync for SpanRange","synthetic":true,"types":[]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Sync for Context&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["quick_xml"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytesStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytesDecl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytesEnd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytesText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Sync for Bernoulli","synthetic":true,"types":[]},{"text":"impl Sync for BernoulliError","synthetic":true,"types":[]},{"text":"impl Sync for Binomial","synthetic":true,"types":[]},{"text":"impl Sync for Cauchy","synthetic":true,"types":[]},{"text":"impl Sync for Dirichlet","synthetic":true,"types":[]},{"text":"impl Sync for Exp1","synthetic":true,"types":[]},{"text":"impl Sync for Exp","synthetic":true,"types":[]},{"text":"impl Sync for Gamma","synthetic":true,"types":[]},{"text":"impl Sync for ChiSquared","synthetic":true,"types":[]},{"text":"impl Sync for FisherF","synthetic":true,"types":[]},{"text":"impl Sync for StudentT","synthetic":true,"types":[]},{"text":"impl Sync for Beta","synthetic":true,"types":[]},{"text":"impl Sync for StandardNormal","synthetic":true,"types":[]},{"text":"impl Sync for Normal","synthetic":true,"types":[]},{"text":"impl Sync for LogNormal","synthetic":true,"types":[]},{"text":"impl Sync for Pareto","synthetic":true,"types":[]},{"text":"impl Sync for Poisson","synthetic":true,"types":[]},{"text":"impl Sync for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for UniformDuration","synthetic":true,"types":[]},{"text":"impl Sync for UnitCircle","synthetic":true,"types":[]},{"text":"impl Sync for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Sync for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Sync for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for WeightedError","synthetic":true,"types":[]},{"text":"impl Sync for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Sync for Open01","synthetic":true,"types":[]},{"text":"impl Sync for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Sync for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Sync for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for EntropyRng","synthetic":true,"types":[]},{"text":"impl Sync for StepRng","synthetic":true,"types":[]},{"text":"impl Sync for StdRng","synthetic":true,"types":[]},{"text":"impl !Sync for ThreadRng","synthetic":true,"types":[]},{"text":"impl Sync for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Sync for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Sync for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Sync for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Sync for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Sync for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for OsRng","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Sync for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Sync for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Sync for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RegexSet","synthetic":true,"types":[]},{"text":"impl Sync for SetMatches","synthetic":true,"types":[]},{"text":"impl Sync for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl Sync for RegexSet","synthetic":true,"types":[]},{"text":"impl Sync for SetMatches","synthetic":true,"types":[]},{"text":"impl Sync for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Sync for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Sync for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; !Sync for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Sync for ReplacerRef&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Sync for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Sync for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Parser","synthetic":true,"types":[]},{"text":"impl Sync for Printer","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for Span","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl Sync for WithComments","synthetic":true,"types":[]},{"text":"impl Sync for Comment","synthetic":true,"types":[]},{"text":"impl Sync for Ast","synthetic":true,"types":[]},{"text":"impl Sync for Alternation","synthetic":true,"types":[]},{"text":"impl Sync for Concat","synthetic":true,"types":[]},{"text":"impl Sync for Literal","synthetic":true,"types":[]},{"text":"impl Sync for LiteralKind","synthetic":true,"types":[]},{"text":"impl Sync for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Sync for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Sync for Class","synthetic":true,"types":[]},{"text":"impl Sync for ClassPerl","synthetic":true,"types":[]},{"text":"impl Sync for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassAscii","synthetic":true,"types":[]},{"text":"impl Sync for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Sync for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Sync for ClassSet","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Sync for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Sync for Assertion","synthetic":true,"types":[]},{"text":"impl Sync for AssertionKind","synthetic":true,"types":[]},{"text":"impl Sync for Repetition","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Sync for Group","synthetic":true,"types":[]},{"text":"impl Sync for GroupKind","synthetic":true,"types":[]},{"text":"impl Sync for CaptureName","synthetic":true,"types":[]},{"text":"impl Sync for SetFlags","synthetic":true,"types":[]},{"text":"impl Sync for Flags","synthetic":true,"types":[]},{"text":"impl Sync for FlagsItem","synthetic":true,"types":[]},{"text":"impl Sync for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Sync for Flag","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Literals","synthetic":true,"types":[]},{"text":"impl Sync for Literal","synthetic":true,"types":[]},{"text":"impl Sync for Printer","synthetic":true,"types":[]},{"text":"impl Sync for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Translator","synthetic":true,"types":[]},{"text":"impl Sync for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for Hir","synthetic":true,"types":[]},{"text":"impl Sync for HirKind","synthetic":true,"types":[]},{"text":"impl Sync for Literal","synthetic":true,"types":[]},{"text":"impl Sync for Class","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Sync for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Sync for Anchor","synthetic":true,"types":[]},{"text":"impl Sync for WordBoundary","synthetic":true,"types":[]},{"text":"impl Sync for Group","synthetic":true,"types":[]},{"text":"impl Sync for GroupKind","synthetic":true,"types":[]},{"text":"impl Sync for Repetition","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Sync for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Sync for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for Parser","synthetic":true,"types":[]},{"text":"impl Sync for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Sync for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl Sync for Utf8Range","synthetic":true,"types":[]},{"text":"impl Sync for Utf8Sequences","synthetic":true,"types":[]}];
implementors["resolv_conf"] = [{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for Network","synthetic":true,"types":[]},{"text":"impl Sync for ScopedIp","synthetic":true,"types":[]},{"text":"impl Sync for AddrParseError","synthetic":true,"types":[]},{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DomainIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Lookup","synthetic":true,"types":[]},{"text":"impl Sync for Family","synthetic":true,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Sync for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TryDemangleError","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Sync for Buffer","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Sync for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Sync for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Sync for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Sync for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Sync for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Sync for BytesDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Sync for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Sync for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Sync for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Sync for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Sync for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Sync for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Sync for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CharEscape","synthetic":true,"types":[]},{"text":"impl Sync for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Serializer","synthetic":true,"types":[]},{"text":"impl Sync for Number","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Sync for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !Sync for Serializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !Sync for SeqSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !Sync for TupleSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !Sync for TupleStructSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !Sync for TupleVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !Sync for MapSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; !Sync for StructSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; !Sync for StructVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]}];
implementors["sha1"] = [{"text":"impl Sync for Sha1","synthetic":true,"types":[]},{"text":"impl Sync for Digest","synthetic":true,"types":[]},{"text":"impl Sync for DigestParseError","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Sync for SigId","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Sync for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VacantEntry&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl Sync for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync + Array&gt; Sync for Drain&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["socket2"] = [{"text":"impl Sync for SockAddr","synthetic":true,"types":[]},{"text":"impl Sync for Socket","synthetic":true,"types":[]},{"text":"impl Sync for Domain","synthetic":true,"types":[]},{"text":"impl Sync for Type","synthetic":true,"types":[]},{"text":"impl Sync for Protocol","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !Sync for Underscore","synthetic":true,"types":[]},{"text":"impl !Sync for Abstract","synthetic":true,"types":[]},{"text":"impl !Sync for As","synthetic":true,"types":[]},{"text":"impl !Sync for Async","synthetic":true,"types":[]},{"text":"impl !Sync for Auto","synthetic":true,"types":[]},{"text":"impl !Sync for Await","synthetic":true,"types":[]},{"text":"impl !Sync for Become","synthetic":true,"types":[]},{"text":"impl !Sync for Box","synthetic":true,"types":[]},{"text":"impl !Sync for Break","synthetic":true,"types":[]},{"text":"impl !Sync for Const","synthetic":true,"types":[]},{"text":"impl !Sync for Continue","synthetic":true,"types":[]},{"text":"impl !Sync for Crate","synthetic":true,"types":[]},{"text":"impl !Sync for Default","synthetic":true,"types":[]},{"text":"impl !Sync for Do","synthetic":true,"types":[]},{"text":"impl !Sync for Dyn","synthetic":true,"types":[]},{"text":"impl !Sync for Else","synthetic":true,"types":[]},{"text":"impl !Sync for Enum","synthetic":true,"types":[]},{"text":"impl !Sync for Extern","synthetic":true,"types":[]},{"text":"impl !Sync for Final","synthetic":true,"types":[]},{"text":"impl !Sync for Fn","synthetic":true,"types":[]},{"text":"impl !Sync for For","synthetic":true,"types":[]},{"text":"impl !Sync for If","synthetic":true,"types":[]},{"text":"impl !Sync for Impl","synthetic":true,"types":[]},{"text":"impl !Sync for In","synthetic":true,"types":[]},{"text":"impl !Sync for Let","synthetic":true,"types":[]},{"text":"impl !Sync for Loop","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for Match","synthetic":true,"types":[]},{"text":"impl !Sync for Mod","synthetic":true,"types":[]},{"text":"impl !Sync for Move","synthetic":true,"types":[]},{"text":"impl !Sync for Mut","synthetic":true,"types":[]},{"text":"impl !Sync for Override","synthetic":true,"types":[]},{"text":"impl !Sync for Priv","synthetic":true,"types":[]},{"text":"impl !Sync for Pub","synthetic":true,"types":[]},{"text":"impl !Sync for Ref","synthetic":true,"types":[]},{"text":"impl !Sync for Return","synthetic":true,"types":[]},{"text":"impl !Sync for SelfType","synthetic":true,"types":[]},{"text":"impl !Sync for SelfValue","synthetic":true,"types":[]},{"text":"impl !Sync for Static","synthetic":true,"types":[]},{"text":"impl !Sync for Struct","synthetic":true,"types":[]},{"text":"impl !Sync for Super","synthetic":true,"types":[]},{"text":"impl !Sync for Trait","synthetic":true,"types":[]},{"text":"impl !Sync for Try","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for Typeof","synthetic":true,"types":[]},{"text":"impl !Sync for Union","synthetic":true,"types":[]},{"text":"impl !Sync for Unsafe","synthetic":true,"types":[]},{"text":"impl !Sync for Unsized","synthetic":true,"types":[]},{"text":"impl !Sync for Use","synthetic":true,"types":[]},{"text":"impl !Sync for Virtual","synthetic":true,"types":[]},{"text":"impl !Sync for Where","synthetic":true,"types":[]},{"text":"impl !Sync for While","synthetic":true,"types":[]},{"text":"impl !Sync for Yield","synthetic":true,"types":[]},{"text":"impl !Sync for Add","synthetic":true,"types":[]},{"text":"impl !Sync for AddEq","synthetic":true,"types":[]},{"text":"impl !Sync for And","synthetic":true,"types":[]},{"text":"impl !Sync for AndAnd","synthetic":true,"types":[]},{"text":"impl !Sync for AndEq","synthetic":true,"types":[]},{"text":"impl !Sync for At","synthetic":true,"types":[]},{"text":"impl !Sync for Bang","synthetic":true,"types":[]},{"text":"impl !Sync for Caret","synthetic":true,"types":[]},{"text":"impl !Sync for CaretEq","synthetic":true,"types":[]},{"text":"impl !Sync for Colon","synthetic":true,"types":[]},{"text":"impl !Sync for Colon2","synthetic":true,"types":[]},{"text":"impl !Sync for Comma","synthetic":true,"types":[]},{"text":"impl !Sync for Div","synthetic":true,"types":[]},{"text":"impl !Sync for DivEq","synthetic":true,"types":[]},{"text":"impl !Sync for Dollar","synthetic":true,"types":[]},{"text":"impl !Sync for Dot","synthetic":true,"types":[]},{"text":"impl !Sync for Dot2","synthetic":true,"types":[]},{"text":"impl !Sync for Dot3","synthetic":true,"types":[]},{"text":"impl !Sync for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Sync for Eq","synthetic":true,"types":[]},{"text":"impl !Sync for EqEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ge","synthetic":true,"types":[]},{"text":"impl !Sync for Gt","synthetic":true,"types":[]},{"text":"impl !Sync for Le","synthetic":true,"types":[]},{"text":"impl !Sync for Lt","synthetic":true,"types":[]},{"text":"impl !Sync for MulEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ne","synthetic":true,"types":[]},{"text":"impl !Sync for Or","synthetic":true,"types":[]},{"text":"impl !Sync for OrEq","synthetic":true,"types":[]},{"text":"impl !Sync for OrOr","synthetic":true,"types":[]},{"text":"impl !Sync for Pound","synthetic":true,"types":[]},{"text":"impl !Sync for Question","synthetic":true,"types":[]},{"text":"impl !Sync for RArrow","synthetic":true,"types":[]},{"text":"impl !Sync for LArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Rem","synthetic":true,"types":[]},{"text":"impl !Sync for RemEq","synthetic":true,"types":[]},{"text":"impl !Sync for FatArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Semi","synthetic":true,"types":[]},{"text":"impl !Sync for Shl","synthetic":true,"types":[]},{"text":"impl !Sync for ShlEq","synthetic":true,"types":[]},{"text":"impl !Sync for Shr","synthetic":true,"types":[]},{"text":"impl !Sync for ShrEq","synthetic":true,"types":[]},{"text":"impl !Sync for Star","synthetic":true,"types":[]},{"text":"impl !Sync for Sub","synthetic":true,"types":[]},{"text":"impl !Sync for SubEq","synthetic":true,"types":[]},{"text":"impl !Sync for Tilde","synthetic":true,"types":[]},{"text":"impl !Sync for Brace","synthetic":true,"types":[]},{"text":"impl !Sync for Bracket","synthetic":true,"types":[]},{"text":"impl !Sync for Paren","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for Attribute","synthetic":true,"types":[]},{"text":"impl !Sync for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for Meta","synthetic":true,"types":[]},{"text":"impl !Sync for MetaList","synthetic":true,"types":[]},{"text":"impl !Sync for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Sync for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Sync for Variant","synthetic":true,"types":[]},{"text":"impl !Sync for Fields","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Sync for Field","synthetic":true,"types":[]},{"text":"impl !Sync for Visibility","synthetic":true,"types":[]},{"text":"impl !Sync for VisPublic","synthetic":true,"types":[]},{"text":"impl !Sync for VisCrate","synthetic":true,"types":[]},{"text":"impl !Sync for VisRestricted","synthetic":true,"types":[]},{"text":"impl !Sync for Expr","synthetic":true,"types":[]},{"text":"impl !Sync for ExprArray","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAssign","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAwait","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBinary","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBlock","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBox","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCast","synthetic":true,"types":[]},{"text":"impl !Sync for ExprClosure","synthetic":true,"types":[]},{"text":"impl !Sync for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Sync for ExprField","synthetic":true,"types":[]},{"text":"impl !Sync for ExprForLoop","synthetic":true,"types":[]},{"text":"impl !Sync for ExprGroup","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIf","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIndex","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLet","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLit","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLoop","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMacro","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMatch","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprParen","synthetic":true,"types":[]},{"text":"impl !Sync for ExprPath","synthetic":true,"types":[]},{"text":"impl !Sync for ExprRange","synthetic":true,"types":[]},{"text":"impl !Sync for ExprReference","synthetic":true,"types":[]},{"text":"impl !Sync for ExprRepeat","synthetic":true,"types":[]},{"text":"impl !Sync for ExprReturn","synthetic":true,"types":[]},{"text":"impl !Sync for ExprStruct","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTry","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTuple","synthetic":true,"types":[]},{"text":"impl !Sync for ExprType","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnary","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Sync for ExprWhile","synthetic":true,"types":[]},{"text":"impl !Sync for ExprYield","synthetic":true,"types":[]},{"text":"impl !Sync for Member","synthetic":true,"types":[]},{"text":"impl !Sync for Index","synthetic":true,"types":[]},{"text":"impl !Sync for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl !Sync for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl !Sync for FieldValue","synthetic":true,"types":[]},{"text":"impl !Sync for Label","synthetic":true,"types":[]},{"text":"impl !Sync for Arm","synthetic":true,"types":[]},{"text":"impl !Sync for RangeLimits","synthetic":true,"types":[]},{"text":"impl !Sync for Generics","synthetic":true,"types":[]},{"text":"impl !Sync for GenericParam","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParam","synthetic":true,"types":[]},{"text":"impl !Sync for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Sync for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBound","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Sync for WhereClause","synthetic":true,"types":[]},{"text":"impl !Sync for WherePredicate","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateType","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Sync for Item","synthetic":true,"types":[]},{"text":"impl !Sync for ItemConst","synthetic":true,"types":[]},{"text":"impl !Sync for ItemEnum","synthetic":true,"types":[]},{"text":"impl !Sync for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl !Sync for ItemFn","synthetic":true,"types":[]},{"text":"impl !Sync for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl !Sync for ItemImpl","synthetic":true,"types":[]},{"text":"impl !Sync for ItemMacro","synthetic":true,"types":[]},{"text":"impl !Sync for ItemMacro2","synthetic":true,"types":[]},{"text":"impl !Sync for ItemMod","synthetic":true,"types":[]},{"text":"impl !Sync for ItemStatic","synthetic":true,"types":[]},{"text":"impl !Sync for ItemStruct","synthetic":true,"types":[]},{"text":"impl !Sync for ItemTrait","synthetic":true,"types":[]},{"text":"impl !Sync for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl !Sync for ItemType","synthetic":true,"types":[]},{"text":"impl !Sync for ItemUnion","synthetic":true,"types":[]},{"text":"impl !Sync for ItemUse","synthetic":true,"types":[]},{"text":"impl !Sync for UseTree","synthetic":true,"types":[]},{"text":"impl !Sync for UsePath","synthetic":true,"types":[]},{"text":"impl !Sync for UseName","synthetic":true,"types":[]},{"text":"impl !Sync for UseRename","synthetic":true,"types":[]},{"text":"impl !Sync for UseGlob","synthetic":true,"types":[]},{"text":"impl !Sync for UseGroup","synthetic":true,"types":[]},{"text":"impl !Sync for ForeignItem","synthetic":true,"types":[]},{"text":"impl !Sync for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl !Sync for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl !Sync for ForeignItemType","synthetic":true,"types":[]},{"text":"impl !Sync for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl !Sync for TraitItem","synthetic":true,"types":[]},{"text":"impl !Sync for TraitItemConst","synthetic":true,"types":[]},{"text":"impl !Sync for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl !Sync for TraitItemType","synthetic":true,"types":[]},{"text":"impl !Sync for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl !Sync for ImplItem","synthetic":true,"types":[]},{"text":"impl !Sync for ImplItemConst","synthetic":true,"types":[]},{"text":"impl !Sync for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl !Sync for ImplItemType","synthetic":true,"types":[]},{"text":"impl !Sync for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl !Sync for Signature","synthetic":true,"types":[]},{"text":"impl !Sync for FnArg","synthetic":true,"types":[]},{"text":"impl !Sync for Receiver","synthetic":true,"types":[]},{"text":"impl !Sync for File","synthetic":true,"types":[]},{"text":"impl !Sync for Lifetime","synthetic":true,"types":[]},{"text":"impl !Sync for Lit","synthetic":true,"types":[]},{"text":"impl !Sync for LitStr","synthetic":true,"types":[]},{"text":"impl !Sync for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Sync for LitByte","synthetic":true,"types":[]},{"text":"impl !Sync for LitChar","synthetic":true,"types":[]},{"text":"impl !Sync for LitInt","synthetic":true,"types":[]},{"text":"impl !Sync for LitFloat","synthetic":true,"types":[]},{"text":"impl !Sync for LitBool","synthetic":true,"types":[]},{"text":"impl Sync for StrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Sync for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Sync for Data","synthetic":true,"types":[]},{"text":"impl !Sync for DataStruct","synthetic":true,"types":[]},{"text":"impl !Sync for DataEnum","synthetic":true,"types":[]},{"text":"impl !Sync for DataUnion","synthetic":true,"types":[]},{"text":"impl !Sync for BinOp","synthetic":true,"types":[]},{"text":"impl !Sync for UnOp","synthetic":true,"types":[]},{"text":"impl !Sync for Block","synthetic":true,"types":[]},{"text":"impl !Sync for Stmt","synthetic":true,"types":[]},{"text":"impl !Sync for Local","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for TypeArray","synthetic":true,"types":[]},{"text":"impl !Sync for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Sync for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Sync for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Sync for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Sync for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Sync for TypeNever","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParen","synthetic":true,"types":[]},{"text":"impl !Sync for TypePath","synthetic":true,"types":[]},{"text":"impl !Sync for TypePtr","synthetic":true,"types":[]},{"text":"impl !Sync for TypeReference","synthetic":true,"types":[]},{"text":"impl !Sync for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Sync for Abi","synthetic":true,"types":[]},{"text":"impl !Sync for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Sync for Variadic","synthetic":true,"types":[]},{"text":"impl !Sync for ReturnType","synthetic":true,"types":[]},{"text":"impl !Sync for Pat","synthetic":true,"types":[]},{"text":"impl !Sync for PatBox","synthetic":true,"types":[]},{"text":"impl !Sync for PatIdent","synthetic":true,"types":[]},{"text":"impl !Sync for PatLit","synthetic":true,"types":[]},{"text":"impl !Sync for PatMacro","synthetic":true,"types":[]},{"text":"impl !Sync for PatOr","synthetic":true,"types":[]},{"text":"impl !Sync for PatPath","synthetic":true,"types":[]},{"text":"impl !Sync for PatRange","synthetic":true,"types":[]},{"text":"impl !Sync for PatReference","synthetic":true,"types":[]},{"text":"impl !Sync for PatRest","synthetic":true,"types":[]},{"text":"impl !Sync for PatSlice","synthetic":true,"types":[]},{"text":"impl !Sync for PatStruct","synthetic":true,"types":[]},{"text":"impl !Sync for PatTuple","synthetic":true,"types":[]},{"text":"impl !Sync for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl !Sync for PatType","synthetic":true,"types":[]},{"text":"impl !Sync for PatWild","synthetic":true,"types":[]},{"text":"impl !Sync for FieldPat","synthetic":true,"types":[]},{"text":"impl !Sync for Path","synthetic":true,"types":[]},{"text":"impl !Sync for PathSegment","synthetic":true,"types":[]},{"text":"impl !Sync for PathArguments","synthetic":true,"types":[]},{"text":"impl !Sync for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Sync for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Binding","synthetic":true,"types":[]},{"text":"impl !Sync for Constraint","synthetic":true,"types":[]},{"text":"impl !Sync for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for QSelf","synthetic":true,"types":[]},{"text":"impl !Sync for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Sync for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl Sync for AddBounds","synthetic":true,"types":[]},{"text":"impl Sync for BindStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Structure&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; Sync for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["threadpool"] = [{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl !Sync for ThreadPool","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Sync for Duration","synthetic":true,"types":[]},{"text":"impl Sync for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Sync for Timespec","synthetic":true,"types":[]},{"text":"impl Sync for PreciseTime","synthetic":true,"types":[]},{"text":"impl Sync for SteadyTime","synthetic":true,"types":[]},{"text":"impl Sync for Tm","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Sync for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Sync for ArrayVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for ArrayVecDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Sync for SliceVec&lt;'s, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, 's, T&gt; Sync for SliceVecDrain&lt;'p, 's, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Sync for TinyVecDrain&lt;'p, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Sync for TinyVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl&lt;E&gt; Sync for PollEvented&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Sync for Seek&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RW&gt; Sync for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized, W:&nbsp;?Sized&gt; Sync for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Empty","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DuplexStream","synthetic":true,"types":[]},{"text":"impl Sync for Repeat","synthetic":true,"types":[]},{"text":"impl Sync for Sink","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, B&gt; Sync for StreamReader&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ReaderStream&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Sync for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Sync for ReuniteError","synthetic":true,"types":[]},{"text":"impl Sync for TcpStream","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]},{"text":"impl Sync for SendHalf","synthetic":true,"types":[]},{"text":"impl Sync for RecvHalf","synthetic":true,"types":[]},{"text":"impl Sync for ReuniteError","synthetic":true,"types":[]},{"text":"impl Sync for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for RecvHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SendHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OwnedSendHalf","synthetic":true,"types":[]},{"text":"impl Sync for OwnedRecvHalf","synthetic":true,"types":[]},{"text":"impl Sync for ReuniteError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Sync for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Sync for ReuniteError","synthetic":true,"types":[]},{"text":"impl Sync for UnixStream","synthetic":true,"types":[]},{"text":"impl Sync for UCred","synthetic":true,"types":[]},{"text":"impl Sync for JoinError","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for Handle","synthetic":true,"types":[]},{"text":"impl Sync for TryCurrentError","synthetic":true,"types":[]},{"text":"impl Sync for Runtime","synthetic":true,"types":[]},{"text":"impl Sync for SignalKind","synthetic":true,"types":[]},{"text":"impl Sync for Signal","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for StreamMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Barrier","synthetic":true,"types":[]},{"text":"impl Sync for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnboundedReceiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl Sync for ClosedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for TryLockError","synthetic":true,"types":[]},{"text":"impl Sync for Notify","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Receiver&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Sender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Ref&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DelayQueue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl Sync for Delay","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Instant","synthetic":true,"types":[]},{"text":"impl Sync for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Throttle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Registration","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for ReadHalf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sync&gt; Sync for WriteHalf&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for JoinHandle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for MutexGuard&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for OwnedMutexGuard&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for RwLockReadGuard&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for RwLockWriteGuard&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Sync for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; Sync for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Sync for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl Sync for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Sync for LinesCodec","synthetic":true,"types":[]},{"text":"impl Sync for LinesCodecError","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Sync for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Datetime","synthetic":true,"types":[]},{"text":"impl Sync for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; Sync for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Entered&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for EnteredSpan","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Sync for Identifier","synthetic":true,"types":[]},{"text":"impl Sync for Dispatch","synthetic":true,"types":[]},{"text":"impl Sync for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Sync for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Field","synthetic":true,"types":[]},{"text":"impl Sync for Empty","synthetic":true,"types":[]},{"text":"impl Sync for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for LevelFilter","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Sync for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Current","synthetic":true,"types":[]},{"text":"impl Sync for Interest","synthetic":true,"types":[]}];
implementors["tracing_futures"] = [{"text":"impl&lt;T&gt; Sync for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["trust_dns_proto"] = [{"text":"impl Sync for SslErrorStack","synthetic":true,"types":[]},{"text":"impl Sync for Unspecified","synthetic":true,"types":[]},{"text":"impl Sync for ProtoErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for ProtoError","synthetic":true,"types":[]},{"text":"impl Sync for Edns","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl Sync for MessageType","synthetic":true,"types":[]},{"text":"impl Sync for Message","synthetic":true,"types":[]},{"text":"impl Sync for HeaderCounts","synthetic":true,"types":[]},{"text":"impl Sync for NoopMessageFinalizer","synthetic":true,"types":[]},{"text":"impl Sync for OpCode","synthetic":true,"types":[]},{"text":"impl Sync for Query","synthetic":true,"types":[]},{"text":"impl Sync for ResponseCode","synthetic":true,"types":[]},{"text":"impl Sync for DNSClass","synthetic":true,"types":[]},{"text":"impl Sync for Label","synthetic":true,"types":[]},{"text":"impl Sync for Name","synthetic":true,"types":[]},{"text":"impl Sync for DEFAULT","synthetic":true,"types":[]},{"text":"impl Sync for IN_ADDR_ARPA","synthetic":true,"types":[]},{"text":"impl Sync for IP6_ARPA","synthetic":true,"types":[]},{"text":"impl Sync for LOCALHOST","synthetic":true,"types":[]},{"text":"impl Sync for IN_ADDR_ARPA_127","synthetic":true,"types":[]},{"text":"impl Sync for IP6_ARPA_1","synthetic":true,"types":[]},{"text":"impl Sync for LOCAL","synthetic":true,"types":[]},{"text":"impl Sync for IN_ADDR_ARPA_169_254","synthetic":true,"types":[]},{"text":"impl Sync for IP6_ARPA_FE_8","synthetic":true,"types":[]},{"text":"impl Sync for IP6_ARPA_FE_9","synthetic":true,"types":[]},{"text":"impl Sync for IP6_ARPA_FE_B","synthetic":true,"types":[]},{"text":"impl Sync for INVALID","synthetic":true,"types":[]},{"text":"impl Sync for UserUsage","synthetic":true,"types":[]},{"text":"impl Sync for AppUsage","synthetic":true,"types":[]},{"text":"impl Sync for ResolverUsage","synthetic":true,"types":[]},{"text":"impl Sync for CacheUsage","synthetic":true,"types":[]},{"text":"impl Sync for AuthUsage","synthetic":true,"types":[]},{"text":"impl Sync for OpUsage","synthetic":true,"types":[]},{"text":"impl Sync for RegistryUsage","synthetic":true,"types":[]},{"text":"impl Sync for ZoneUsage","synthetic":true,"types":[]},{"text":"impl Sync for CAA","synthetic":true,"types":[]},{"text":"impl Sync for Property","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]},{"text":"impl Sync for KeyValue","synthetic":true,"types":[]},{"text":"impl Sync for MX","synthetic":true,"types":[]},{"text":"impl Sync for NAPTR","synthetic":true,"types":[]},{"text":"impl Sync for NULL","synthetic":true,"types":[]},{"text":"impl Sync for OPENPGPKEY","synthetic":true,"types":[]},{"text":"impl Sync for OPT","synthetic":true,"types":[]},{"text":"impl Sync for EdnsCode","synthetic":true,"types":[]},{"text":"impl Sync for EdnsOption","synthetic":true,"types":[]},{"text":"impl Sync for SOA","synthetic":true,"types":[]},{"text":"impl Sync for SRV","synthetic":true,"types":[]},{"text":"impl Sync for SSHFP","synthetic":true,"types":[]},{"text":"impl Sync for Algorithm","synthetic":true,"types":[]},{"text":"impl Sync for FingerprintType","synthetic":true,"types":[]},{"text":"impl Sync for TLSA","synthetic":true,"types":[]},{"text":"impl Sync for CertUsage","synthetic":true,"types":[]},{"text":"impl Sync for Selector","synthetic":true,"types":[]},{"text":"impl Sync for Matching","synthetic":true,"types":[]},{"text":"impl Sync for TXT","synthetic":true,"types":[]},{"text":"impl Sync for RData","synthetic":true,"types":[]},{"text":"impl Sync for RecordType","synthetic":true,"types":[]},{"text":"impl Sync for Record","synthetic":true,"types":[]},{"text":"impl Sync for RecordSet","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Sync for RrsetRecords&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BinDecoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BinEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for EncodeMode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Restrict&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Verified&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for TcpClientStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Sync for TcpClientConnect&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for TcpStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; Sync for UdpClientStream&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for UdpResponse","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; Sync for UdpClientConnect&lt;S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for UdpStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Sync for DnsExchange&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, S, R&gt; Sync for DnsExchangeConnect&lt;F, S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for StreamHandle","synthetic":true,"types":[]},{"text":"impl Sync for BasicDnsHandle","synthetic":true,"types":[]},{"text":"impl&lt;S, MF, D&gt; Sync for DnsMultiplexer&lt;S, MF, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, S, MF&gt; !Sync for DnsMultiplexerConnect&lt;F, S, MF&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DnsMultiplexerSerialResponse","synthetic":true,"types":[]},{"text":"impl Sync for DnsRequestOptions","synthetic":true,"types":[]},{"text":"impl Sync for DnsRequest","synthetic":true,"types":[]},{"text":"impl Sync for DnsResponse","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Sync for RetryDnsHandle&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SerialMessage","synthetic":true,"types":[]},{"text":"impl Sync for BufStreamHandle","synthetic":true,"types":[]},{"text":"impl Sync for BufDnsStreamHandle","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for DnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for BufDnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for OneshotDnsRequest&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Sync for OneshotDnsResponseReceiver&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["trust_dns_resolver"] = [{"text":"impl Sync for AsyncResolver","synthetic":true,"types":[]},{"text":"impl&lt;F, G&gt; Sync for Background&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as Future&gt;::Output: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ResolverConfig","synthetic":true,"types":[]},{"text":"impl Sync for Protocol","synthetic":true,"types":[]},{"text":"impl Sync for NameServerConfig","synthetic":true,"types":[]},{"text":"impl Sync for NameServerConfigGroup","synthetic":true,"types":[]},{"text":"impl Sync for LookupIpStrategy","synthetic":true,"types":[]},{"text":"impl Sync for ResolverOpts","synthetic":true,"types":[]},{"text":"impl Sync for ResolveErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for ResolveError","synthetic":true,"types":[]},{"text":"impl Sync for Hosts","synthetic":true,"types":[]},{"text":"impl Sync for Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for LookupIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for LookupRecordIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LookupIntoIter","synthetic":true,"types":[]},{"text":"impl Sync for SrvLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for SrvLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SrvLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for SrvLookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for ReverseLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for ReverseLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ReverseLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for ReverseLookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for Ipv4Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for Ipv4LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Ipv4LookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for Ipv4LookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for Ipv6LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6LookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for Ipv6LookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for MxLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for MxLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MxLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for MxLookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for TxtLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for TxtLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TxtLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for TxtLookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for SoaLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for SoaLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SoaLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for SoaLookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for NsLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for NsLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NsLookupIntoIter","synthetic":true,"types":[]},{"text":"impl !Sync for NsLookupFuture","synthetic":true,"types":[]},{"text":"impl Sync for LookupIp","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for LookupIpIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LookupIpIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;C&nbsp;=&nbsp;LookupEither&lt;ConnectionHandle, StandardConnection&gt;&gt; !Sync for LookupIpFuture&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Resolver","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for BidiClass","synthetic":true,"types":[]},{"text":"impl Sync for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Sync for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Sync for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Sync for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Replacements&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Sync for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl Sync for GraphemeIncomplete","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Sync for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Origin","synthetic":true,"types":[]},{"text":"impl Sync for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl Sync for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["woab"] = [{"text":"impl Sync for BuilderFactory","synthetic":true,"types":[]},{"text":"impl !Sync for BuilderConnector","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !Sync for ActorBuilder&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; !Sync for ActorBuilderContext&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T, I&gt; Sync for BuilderSingalConnector&lt;S, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; Sync for SignalRouter&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Remove","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()