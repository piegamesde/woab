(function() {var implementors = {};
implementors["actix"] = [{"text":"impl Freeze for ActorState","synthetic":true,"types":[]},{"text":"impl Freeze for Running","synthetic":true,"types":[]},{"text":"impl Freeze for SpawnHandle","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Context&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for ContextParts&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; Freeze for ContextFut&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for MessageResult&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Message&gt;::Result: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for Response&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, I, E&gt; Freeze for ActorResponse&lt;A, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Supervisor&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for AddressSender&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for AddressReceiver&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Envelope&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, M&gt; Freeze for Request&lt;A, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for RecipientRequest&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MailboxError","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Addr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for WeakAddr&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for Recipient&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for Mailbox&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Mocker&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Resolve","synthetic":true,"types":[]},{"text":"impl Freeze for Connect","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectAddr","synthetic":true,"types":[]},{"text":"impl Freeze for ResolverError","synthetic":true,"types":[]},{"text":"impl Freeze for Resolver","synthetic":true,"types":[]},{"text":"impl Freeze for TcpConnector","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Finish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F&gt; Freeze for Map&lt;A, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, A&gt; Freeze for Ready&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E, A&gt; Freeze for FutureResult&lt;T, E, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for StreamFinish&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, Fut, T&gt; Freeze for StreamFold&lt;S, F, Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as IntoActorFuture&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for StreamMap&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, F, U&gt; Freeze for StreamThen&lt;S, F, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as IntoActorFuture&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for StreamTimeout&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B, F&gt; Freeze for Then&lt;A, B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as IntoActorFuture&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Timeout&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, A&gt; Freeze for FutureWrap&lt;F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, A&gt; Freeze for StreamWrap&lt;S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Freeze for Writer&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for FramedWrite&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, S&gt; Freeze for SinkWrite&lt;I, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Registry","synthetic":true,"types":[]},{"text":"impl Freeze for SystemRegistry","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SyncArbiter&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SyncContext&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Condition&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TimerFunc&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for IntervalFunc&lt;A&gt;","synthetic":true,"types":[]}];
implementors["actix_codec"] = [{"text":"impl Freeze for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_connect"] = [{"text":"impl&lt;T&gt; Freeze for Connect&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Connection&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TcpConnectorFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TcpConnector&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for ConnectError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ResolverFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Resolver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ConnectServiceFactory&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ConnectService&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TcpConnectService&lt;T&gt;","synthetic":true,"types":[]}];
implementors["actix_http"] = [{"text":"impl Freeze for BodySize","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !Freeze for ResponseBody&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Body","synthetic":true,"types":[]},{"text":"impl&lt;S, E&gt; Freeze for BodyStream&lt;S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for SizedStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, X, U&gt; Freeze for HttpServiceBuilder&lt;T, S, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Connector&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for ConnectError","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidUrl","synthetic":true,"types":[]},{"text":"impl !Freeze for SendRequestError","synthetic":true,"types":[]},{"text":"impl Freeze for FreezeRequestError","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]},{"text":"impl !Freeze for Connect","synthetic":true,"types":[]},{"text":"impl Freeze for KeepAlive","synthetic":true,"types":[]},{"text":"impl Freeze for ServiceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Extensions","synthetic":true,"types":[]},{"text":"impl Freeze for AcceptCharset","synthetic":true,"types":[]},{"text":"impl Freeze for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl Freeze for Accept","synthetic":true,"types":[]},{"text":"impl Freeze for Allow","synthetic":true,"types":[]},{"text":"impl Freeze for CacheControl","synthetic":true,"types":[]},{"text":"impl Freeze for CacheDirective","synthetic":true,"types":[]},{"text":"impl Freeze for DispositionType","synthetic":true,"types":[]},{"text":"impl Freeze for DispositionParam","synthetic":true,"types":[]},{"text":"impl Freeze for ContentDisposition","synthetic":true,"types":[]},{"text":"impl Freeze for ContentLanguage","synthetic":true,"types":[]},{"text":"impl Freeze for ContentRange","synthetic":true,"types":[]},{"text":"impl Freeze for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl Freeze for ContentType","synthetic":true,"types":[]},{"text":"impl Freeze for Date","synthetic":true,"types":[]},{"text":"impl Freeze for ETag","synthetic":true,"types":[]},{"text":"impl Freeze for Expires","synthetic":true,"types":[]},{"text":"impl Freeze for IfMatch","synthetic":true,"types":[]},{"text":"impl Freeze for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl Freeze for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl Freeze for IfRange","synthetic":true,"types":[]},{"text":"impl Freeze for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl Freeze for LastModified","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderMap","synthetic":true,"types":[]},{"text":"impl Freeze for ContentEncoding","synthetic":true,"types":[]},{"text":"impl Freeze for ExtendedValue","synthetic":true,"types":[]},{"text":"impl Freeze for ConnectionType","synthetic":true,"types":[]},{"text":"impl !Freeze for RequestHead","synthetic":true,"types":[]},{"text":"impl !Freeze for RequestHeadType","synthetic":true,"types":[]},{"text":"impl !Freeze for ResponseHead","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Message&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Payload&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Freeze for Request&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !Freeze for Response&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for HttpService&lt;T, S, B, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CookieBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SameSite","synthetic":true,"types":[]},{"text":"impl Freeze for CookieJar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Delta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Freeze for Cookie&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'c&gt; Freeze for EncodedCookie&lt;'a, 'c&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for PayloadError","synthetic":true,"types":[]},{"text":"impl Freeze for DispatchError","synthetic":true,"types":[]},{"text":"impl Freeze for ContentTypeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for InternalError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClientCodec","synthetic":true,"types":[]},{"text":"impl Freeze for ClientPayloadCodec","synthetic":true,"types":[]},{"text":"impl Freeze for Codec","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !Freeze for Dispatcher&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ExpectHandler","synthetic":true,"types":[]},{"text":"impl Freeze for Payload","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for H1Service&lt;T, S, B, X, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; Freeze for H1ServiceHandler&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for OneRequest&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UpgradeHandler&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !Freeze for SendResponse&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Message&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MessageType","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !Freeze for Dispatcher&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; Freeze for H2Service&lt;T, S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Payload","synthetic":true,"types":[]},{"text":"impl !Freeze for TestRequest","synthetic":true,"types":[]},{"text":"impl Freeze for TestBuffer","synthetic":true,"types":[]},{"text":"impl !Freeze for Message","synthetic":true,"types":[]},{"text":"impl !Freeze for Frame","synthetic":true,"types":[]},{"text":"impl !Freeze for Item","synthetic":true,"types":[]},{"text":"impl Freeze for Codec","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Freeze for Dispatcher&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&gt;::Error: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Parser","synthetic":true,"types":[]},{"text":"impl Freeze for OpCode","synthetic":true,"types":[]},{"text":"impl Freeze for CloseCode","synthetic":true,"types":[]},{"text":"impl Freeze for CloseReason","synthetic":true,"types":[]},{"text":"impl Freeze for ProtocolError","synthetic":true,"types":[]},{"text":"impl Freeze for HandshakeError","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]}];
implementors["actix_rt"] = [{"text":"impl Freeze for Arbiter","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl !Freeze for SystemRunner","synthetic":true,"types":[]},{"text":"impl !Freeze for Runtime","synthetic":true,"types":[]},{"text":"impl Freeze for System","synthetic":true,"types":[]}];
implementors["actix_service"] = [{"text":"impl&lt;T, F, R, In, Out, Err&gt; Freeze for Apply&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R, In, Out, Err&gt; Freeze for ApplyServiceFactory&lt;T, F, R, In, Out, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C, Req, Res, Err, InitErr&gt; Freeze for BoxServiceFactory&lt;C, Req, Res, Err, InitErr&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err&gt; Freeze for FnService&lt;F, Fut, Req, Res, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Req, Res, Err, Cfg&gt; Freeze for FnServiceFactory&lt;F, Fut, Req, Res, Err, Cfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, Fut, Cfg, Srv, Err&gt; Freeze for FnServiceConfig&lt;F, Fut, Cfg, Srv, Err&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, C, S, R, E&gt; Freeze for FnServiceNoConfig&lt;F, C, S, R, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Response&gt; Freeze for Map&lt;A, F, Response&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, Res&gt; Freeze for MapServiceFactory&lt;A, F, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, C&gt; Freeze for MapConfig&lt;A, F, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, C&gt; Freeze for UnitConfig&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; Freeze for MapErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; Freeze for MapErrServiceFactory&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, F, E&gt; Freeze for MapInitErr&lt;A, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pipeline&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PipelineFactory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Freeze for ApplyTransform&lt;T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, F, E&gt; Freeze for TransformMapInitErr&lt;T, S, F, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["actix_threadpool"] = [{"text":"impl&lt;E&gt; Freeze for BlockingError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for CpuFuture&lt;I, E&gt;","synthetic":true,"types":[]}];
implementors["actix_utils"] = [{"text":"impl Freeze for Condition","synthetic":true,"types":[]},{"text":"impl Freeze for Waiter","synthetic":true,"types":[]},{"text":"impl Freeze for Counter","synthetic":true,"types":[]},{"text":"impl Freeze for CounterGuard","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for EitherService&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E, U&gt; Freeze for DispatcherError&lt;E, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Decoder&gt;::Error: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Error: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T, U&gt; Freeze for Dispatcher&lt;S, T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as Service&gt;::Error: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Decoder&gt;::Error: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Encoder&gt;::Error: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for InFlight","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for InFlightService&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; Freeze for KeepAlive&lt;R, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, E, F&gt; Freeze for KeepAliveService&lt;R, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for InOrderError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for InOrder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for InOrderService&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Freeze for Dispatcher&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for LocalWaker","synthetic":true,"types":[]},{"text":"impl Freeze for LowResTime","synthetic":true,"types":[]},{"text":"impl Freeze for LowResTimeService","synthetic":true,"types":[]},{"text":"impl Freeze for SystemTime","synthetic":true,"types":[]},{"text":"impl Freeze for SystemTimeService","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Timeout&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for TimeoutError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for TimeoutService&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TimeoutServiceResponse&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Service&gt;::Future: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["addr2line"] = [{"text":"impl&lt;R&gt; Freeze for Context&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Freeze for LocationRangeIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Freeze for FrameIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Freeze for Frame&lt;'ctx, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for FunctionName&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Location&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["adler"] = [{"text":"impl Freeze for Adler32","synthetic":true,"types":[]}];
implementors["ahash"] = [{"text":"impl Freeze for AHasher","synthetic":true,"types":[]},{"text":"impl Freeze for RandomState","synthetic":true,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for AhoCorasick&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for FindIter&lt;'a, 'b, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for FindOverlappingIter&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, S&gt; Freeze for StreamFindIter&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for AhoCorasickBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MatchKind","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for MatchKind","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for Searcher","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'h&gt; Freeze for FindIter&lt;'s, 'h&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["atk"] = [{"text":"impl Freeze for Action","synthetic":true,"types":[]},{"text":"impl Freeze for Component","synthetic":true,"types":[]},{"text":"impl Freeze for Document","synthetic":true,"types":[]},{"text":"impl Freeze for EditableText","synthetic":true,"types":[]},{"text":"impl Freeze for GObjectAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for Hyperlink","synthetic":true,"types":[]},{"text":"impl Freeze for HyperlinkClass","synthetic":true,"types":[]},{"text":"impl Freeze for HyperlinkImpl","synthetic":true,"types":[]},{"text":"impl Freeze for Hypertext","synthetic":true,"types":[]},{"text":"impl Freeze for Image","synthetic":true,"types":[]},{"text":"impl Freeze for Misc","synthetic":true,"types":[]},{"text":"impl Freeze for MiscClass","synthetic":true,"types":[]},{"text":"impl Freeze for NoOpObject","synthetic":true,"types":[]},{"text":"impl Freeze for NoOpObjectClass","synthetic":true,"types":[]},{"text":"impl Freeze for NoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl Freeze for NoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl Freeze for Object","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectClass","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectFactory","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl Freeze for Plug","synthetic":true,"types":[]},{"text":"impl Freeze for PlugClass","synthetic":true,"types":[]},{"text":"impl Freeze for Registry","synthetic":true,"types":[]},{"text":"impl Freeze for RegistryClass","synthetic":true,"types":[]},{"text":"impl Freeze for Relation","synthetic":true,"types":[]},{"text":"impl Freeze for RelationClass","synthetic":true,"types":[]},{"text":"impl Freeze for RelationSet","synthetic":true,"types":[]},{"text":"impl Freeze for RelationSetClass","synthetic":true,"types":[]},{"text":"impl Freeze for Selection","synthetic":true,"types":[]},{"text":"impl Freeze for Socket","synthetic":true,"types":[]},{"text":"impl Freeze for SocketClass","synthetic":true,"types":[]},{"text":"impl Freeze for StateSet","synthetic":true,"types":[]},{"text":"impl Freeze for StateSetClass","synthetic":true,"types":[]},{"text":"impl Freeze for StreamableContent","synthetic":true,"types":[]},{"text":"impl Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for TableCell","synthetic":true,"types":[]},{"text":"impl Freeze for Text","synthetic":true,"types":[]},{"text":"impl Freeze for Util","synthetic":true,"types":[]},{"text":"impl Freeze for UtilClass","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Window","synthetic":true,"types":[]},{"text":"impl Freeze for Range","synthetic":true,"types":[]},{"text":"impl Freeze for Rectangle","synthetic":true,"types":[]},{"text":"impl Freeze for TextRange","synthetic":true,"types":[]},{"text":"impl Freeze for CoordType","synthetic":true,"types":[]},{"text":"impl Freeze for Layer","synthetic":true,"types":[]},{"text":"impl Freeze for RelationType","synthetic":true,"types":[]},{"text":"impl Freeze for Role","synthetic":true,"types":[]},{"text":"impl Freeze for StateType","synthetic":true,"types":[]},{"text":"impl Freeze for TextAttribute","synthetic":true,"types":[]},{"text":"impl Freeze for TextBoundary","synthetic":true,"types":[]},{"text":"impl Freeze for TextClipType","synthetic":true,"types":[]},{"text":"impl Freeze for TextGranularity","synthetic":true,"types":[]},{"text":"impl Freeze for ValueType","synthetic":true,"types":[]},{"text":"impl Freeze for HyperlinkStateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for TextRectangle","synthetic":true,"types":[]}];
implementors["atk_sys"] = [{"text":"impl Freeze for AtkActionIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkAttribute","synthetic":true,"types":[]},{"text":"impl Freeze for AtkComponentIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkDocumentIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkEditableTextIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkGObjectAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkHyperlinkClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkHyperlinkImplIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkHypertextIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkImageIface","synthetic":true,"types":[]},{"text":"impl Freeze for _AtkImplementor","synthetic":true,"types":[]},{"text":"impl Freeze for AtkKeyEventStruct","synthetic":true,"types":[]},{"text":"impl Freeze for AtkMiscClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkNoOpObjectClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkNoOpObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkObjectClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkObjectFactoryClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkPlugClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkPropertyValues","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRange","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRectangle","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRegistryClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRelationClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRelationSetClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkSelectionIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkSocketClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkStateSetClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkStreamableContentIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTableCellIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTableIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTextIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTextRange","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTextRectangle","synthetic":true,"types":[]},{"text":"impl Freeze for AtkUtilClass","synthetic":true,"types":[]},{"text":"impl Freeze for AtkValueIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkWindowIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkGObjectAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for AtkHyperlink","synthetic":true,"types":[]},{"text":"impl Freeze for AtkMisc","synthetic":true,"types":[]},{"text":"impl Freeze for AtkNoOpObject","synthetic":true,"types":[]},{"text":"impl Freeze for AtkNoOpObjectFactory","synthetic":true,"types":[]},{"text":"impl Freeze for AtkObject","synthetic":true,"types":[]},{"text":"impl Freeze for AtkObjectFactory","synthetic":true,"types":[]},{"text":"impl Freeze for AtkPlug","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRegistry","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRelation","synthetic":true,"types":[]},{"text":"impl Freeze for AtkRelationSet","synthetic":true,"types":[]},{"text":"impl Freeze for AtkSocket","synthetic":true,"types":[]},{"text":"impl Freeze for AtkStateSet","synthetic":true,"types":[]},{"text":"impl Freeze for AtkUtil","synthetic":true,"types":[]},{"text":"impl Freeze for AtkAction","synthetic":true,"types":[]},{"text":"impl Freeze for AtkComponent","synthetic":true,"types":[]},{"text":"impl Freeze for AtkDocument","synthetic":true,"types":[]},{"text":"impl Freeze for AtkEditableText","synthetic":true,"types":[]},{"text":"impl Freeze for AtkHyperlinkImpl","synthetic":true,"types":[]},{"text":"impl Freeze for AtkHypertext","synthetic":true,"types":[]},{"text":"impl Freeze for AtkImage","synthetic":true,"types":[]},{"text":"impl Freeze for AtkImplementorIface","synthetic":true,"types":[]},{"text":"impl Freeze for AtkSelection","synthetic":true,"types":[]},{"text":"impl Freeze for AtkStreamableContent","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTable","synthetic":true,"types":[]},{"text":"impl Freeze for AtkTableCell","synthetic":true,"types":[]},{"text":"impl Freeze for AtkText","synthetic":true,"types":[]},{"text":"impl Freeze for AtkValue","synthetic":true,"types":[]},{"text":"impl Freeze for AtkWindow","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl Freeze for Frame","synthetic":true,"types":[]},{"text":"impl Freeze for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Freeze for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PrintFmt","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; Freeze for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Backtrace","synthetic":true,"types":[]},{"text":"impl Freeze for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl Freeze for BacktraceSymbol","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Freeze for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Freeze for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeError","synthetic":true,"types":[]},{"text":"impl Freeze for CharacterSet","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Freeze for BigEndian","synthetic":true,"types":[]},{"text":"impl Freeze for LittleEndian","synthetic":true,"types":[]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Freeze for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Limit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UninitSlice","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Writer&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Bytes","synthetic":true,"types":[]},{"text":"impl Freeze for BytesMut","synthetic":true,"types":[]}];
implementors["cairo"] = [{"text":"impl&lt;T&gt; Freeze for UserDataKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for RectangleList","synthetic":true,"types":[]},{"text":"impl Freeze for Context","synthetic":true,"types":[]},{"text":"impl Freeze for Device","synthetic":true,"types":[]},{"text":"impl Freeze for Antialias","synthetic":true,"types":[]},{"text":"impl Freeze for FillRule","synthetic":true,"types":[]},{"text":"impl Freeze for LineCap","synthetic":true,"types":[]},{"text":"impl Freeze for LineJoin","synthetic":true,"types":[]},{"text":"impl Freeze for Operator","synthetic":true,"types":[]},{"text":"impl Freeze for PathDataType","synthetic":true,"types":[]},{"text":"impl Freeze for Content","synthetic":true,"types":[]},{"text":"impl Freeze for Extend","synthetic":true,"types":[]},{"text":"impl Freeze for Filter","synthetic":true,"types":[]},{"text":"impl Freeze for PatternType","synthetic":true,"types":[]},{"text":"impl Freeze for FontSlant","synthetic":true,"types":[]},{"text":"impl Freeze for FontWeight","synthetic":true,"types":[]},{"text":"impl Freeze for TextClusterFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FontType","synthetic":true,"types":[]},{"text":"impl Freeze for SubpixelOrder","synthetic":true,"types":[]},{"text":"impl Freeze for HintStyle","synthetic":true,"types":[]},{"text":"impl Freeze for HintMetrics","synthetic":true,"types":[]},{"text":"impl Freeze for SurfaceType","synthetic":true,"types":[]},{"text":"impl Freeze for Format","synthetic":true,"types":[]},{"text":"impl Freeze for RegionOverlap","synthetic":true,"types":[]},{"text":"impl Freeze for PdfOutline","synthetic":true,"types":[]},{"text":"impl Freeze for MeshCorner","synthetic":true,"types":[]},{"text":"impl Freeze for FtSynthesize","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceType","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for IoError","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowError","synthetic":true,"types":[]},{"text":"impl Freeze for FontFace","synthetic":true,"types":[]},{"text":"impl Freeze for FontOptions","synthetic":true,"types":[]},{"text":"impl Freeze for ScaledFont","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSurface","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImageSurfaceData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Matrix","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PathSegments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Pattern","synthetic":true,"types":[]},{"text":"impl Freeze for SolidPattern","synthetic":true,"types":[]},{"text":"impl Freeze for Gradient","synthetic":true,"types":[]},{"text":"impl Freeze for LinearGradient","synthetic":true,"types":[]},{"text":"impl Freeze for RadialGradient","synthetic":true,"types":[]},{"text":"impl Freeze for SurfacePattern","synthetic":true,"types":[]},{"text":"impl Freeze for Mesh","synthetic":true,"types":[]},{"text":"impl Freeze for RecordingSurface","synthetic":true,"types":[]},{"text":"impl Freeze for Rectangle","synthetic":true,"types":[]},{"text":"impl Freeze for RectangleInt","synthetic":true,"types":[]},{"text":"impl Freeze for Region","synthetic":true,"types":[]},{"text":"impl Freeze for Surface","synthetic":true,"types":[]},{"text":"impl Freeze for MappedImageSurface","synthetic":true,"types":[]}];
implementors["cairo_sys"] = [{"text":"impl Freeze for cairo_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_surface_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_device_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_pattern_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_rectangle_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_rectangle_int_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_rectangle_list_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_path_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_path_data_header","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_path_data","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_glyph_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_region_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_font_face_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_scaled_font_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_font_options_t","synthetic":true,"types":[]},{"text":"impl Freeze for FontExtents","synthetic":true,"types":[]},{"text":"impl Freeze for Glyph","synthetic":true,"types":[]},{"text":"impl Freeze for TextCluster","synthetic":true,"types":[]},{"text":"impl Freeze for TextExtents","synthetic":true,"types":[]},{"text":"impl Freeze for Matrix","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_user_data_key_t","synthetic":true,"types":[]},{"text":"impl Freeze for cairo_bool_t","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Freeze for FixedOffset","synthetic":true,"types":[]},{"text":"impl Freeze for Local","synthetic":true,"types":[]},{"text":"impl Freeze for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveDate","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Freeze for IsoWeek","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Freeze for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Freeze for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Pad","synthetic":true,"types":[]},{"text":"impl Freeze for Numeric","synthetic":true,"types":[]},{"text":"impl Freeze for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Freeze for Fixed","synthetic":true,"types":[]},{"text":"impl Freeze for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RoundingError","synthetic":true,"types":[]},{"text":"impl Freeze for Weekday","synthetic":true,"types":[]},{"text":"impl Freeze for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Freeze for Month","synthetic":true,"types":[]},{"text":"impl Freeze for ParseMonthError","synthetic":true,"types":[]}];
implementors["copyless"] = [{"text":"impl&lt;T&gt; Freeze for BoxAllocation&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for VecAllocation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for VecEntry&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl Freeze for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl Freeze for TrySelectError","synthetic":true,"types":[]},{"text":"impl Freeze for SelectTimeoutError","synthetic":true,"types":[]},{"text":"impl Freeze for TryReadyError","synthetic":true,"types":[]},{"text":"impl Freeze for ReadyTimeoutError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Select&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SelectedOperation&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; !Freeze for AtomicCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for CachePadded&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Backoff","synthetic":true,"types":[]},{"text":"impl Freeze for Parker","synthetic":true,"types":[]},{"text":"impl Freeze for Unparker","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for ShardedLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for ShardedLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for ShardedLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for WaitGroup","synthetic":true,"types":[]},{"text":"impl&lt;'env&gt; Freeze for Scope&lt;'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, 'env&gt; Freeze for ScopedThreadBuilder&lt;'scope, 'env&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Freeze for ScopedJoinHandle&lt;'scope, T&gt;","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["encoding_rs"] = [{"text":"impl Freeze for Latin1Bidi","synthetic":true,"types":[]},{"text":"impl Freeze for Encoding","synthetic":true,"types":[]},{"text":"impl Freeze for CoderResult","synthetic":true,"types":[]},{"text":"impl Freeze for DecoderResult","synthetic":true,"types":[]},{"text":"impl Freeze for Decoder","synthetic":true,"types":[]},{"text":"impl Freeze for EncoderResult","synthetic":true,"types":[]},{"text":"impl Freeze for Encoder","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl !Freeze for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !Freeze for Context&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for SyncFailure&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Freeze for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Freeze for FnvHasher","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Freeze for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Canceled","synthetic":true,"types":[]}];
implementors["futures_executor"] = [{"text":"impl !Freeze for LocalPool","synthetic":true,"types":[]},{"text":"impl Freeze for LocalSpawner","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for BlockingStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Enter","synthetic":true,"types":[]},{"text":"impl Freeze for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Freeze for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for LocalFutureObj&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for FutureObj&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Freeze for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RemoteHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Remote&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Shared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for WeakShared&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, T&gt; Freeze for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, Si&gt; Freeze for FlattenSink&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Freeze for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, E&gt; Freeze for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F, G&gt; Freeze for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut, F&gt; Freeze for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Lazy&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Ready&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as Future&gt;::Output: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for JoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Select&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for SelectAll&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as TryFuture&gt;::Ok: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as TryFuture&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for TryJoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for TrySelect&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for SelectOk&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Freeze for AbortHandle","synthetic":true,"types":[]},{"text":"impl Freeze for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Freeze for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Freeze for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, FromA, FromB&gt; Freeze for Unzip&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Cycle&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Freeze for Next&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Freeze for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St&gt; Freeze for Peek&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut&gt; Freeze for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Freeze for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as Stream&gt;::Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for BufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for Buffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for SplitStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, Item&gt; Freeze for SplitSink&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Item&gt; Freeze for ReuniteError&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as Stream&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Si&gt; Freeze for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, U, F&gt; Freeze for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Freeze for TryNext&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, C&gt; Freeze for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Freeze for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; Freeze for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for TryBufferUnordered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for TryBuffered&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Freeze for IntoAsyncRead&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, E&gt; Freeze for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Repeat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for RepeatWith&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Empty&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; Freeze for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for PollFn&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St1, St2&gt; Freeze for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, Fut&gt; Freeze for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for FuturesOrdered&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Freeze for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Fut&gt; !Freeze for FuturesUnordered&lt;Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; !Freeze for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Close&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Drain&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si1, Si2&gt; Freeze for Fanout&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Feed&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Flush&lt;'a, Si, Item&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, E&gt; Freeze for SinkErrInto&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, F&gt; Freeze for SinkMapErr&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, Item&gt; Freeze for Send&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, Si:&nbsp;?Sized, St:&nbsp;?Sized&gt; Freeze for SendAll&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as TryStream&gt;::Ok: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F, R&gt; Freeze for Unfold&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Freeze for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; Freeze for WithFlatMap&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Si, Item&gt; Freeze for Buffer&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AllowStdIo&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for Close&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Freeze for Copy&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; Freeze for CopyBuf&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for FillBuf&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for Flush&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, Item&gt; Freeze for IntoSink&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for Read&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadVectored&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadExact&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadLine&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadToEnd&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadToString&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReadUntil&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Sink","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReuniteError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Window&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for Write&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteVectored&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W:&nbsp;?Sized&gt; Freeze for WriteAll&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, U:&nbsp;?Sized&gt; Freeze for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]}];
implementors["fxhash"] = [{"text":"impl Freeze for FxHasher","synthetic":true,"types":[]},{"text":"impl Freeze for FxHasher64","synthetic":true,"types":[]},{"text":"impl Freeze for FxHasher32","synthetic":true,"types":[]}];
implementors["gdk"] = [{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl Freeze for AppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for Cursor","synthetic":true,"types":[]},{"text":"impl Freeze for CursorClass","synthetic":true,"types":[]},{"text":"impl Freeze for Device","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceClass","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceManager","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceManagerClass","synthetic":true,"types":[]},{"text":"impl Freeze for Display","synthetic":true,"types":[]},{"text":"impl Freeze for DisplayClass","synthetic":true,"types":[]},{"text":"impl Freeze for DisplayManager","synthetic":true,"types":[]},{"text":"impl Freeze for DisplayManagerClass","synthetic":true,"types":[]},{"text":"impl Freeze for DragContext","synthetic":true,"types":[]},{"text":"impl Freeze for DragContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for FrameClock","synthetic":true,"types":[]},{"text":"impl Freeze for FrameClockClass","synthetic":true,"types":[]},{"text":"impl Freeze for Keymap","synthetic":true,"types":[]},{"text":"impl Freeze for KeymapClass","synthetic":true,"types":[]},{"text":"impl Freeze for Screen","synthetic":true,"types":[]},{"text":"impl Freeze for ScreenClass","synthetic":true,"types":[]},{"text":"impl Freeze for Visual","synthetic":true,"types":[]},{"text":"impl Freeze for VisualClass","synthetic":true,"types":[]},{"text":"impl Freeze for Window","synthetic":true,"types":[]},{"text":"impl Freeze for WindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for EventSequence","synthetic":true,"types":[]},{"text":"impl Freeze for FrameTimings","synthetic":true,"types":[]},{"text":"impl Freeze for AxisUse","synthetic":true,"types":[]},{"text":"impl Freeze for ByteOrder","synthetic":true,"types":[]},{"text":"impl Freeze for CrossingMode","synthetic":true,"types":[]},{"text":"impl Freeze for CursorType","synthetic":true,"types":[]},{"text":"impl Freeze for DeviceType","synthetic":true,"types":[]},{"text":"impl Freeze for DragProtocol","synthetic":true,"types":[]},{"text":"impl Freeze for EventType","synthetic":true,"types":[]},{"text":"impl Freeze for FullscreenMode","synthetic":true,"types":[]},{"text":"impl Freeze for GrabOwnership","synthetic":true,"types":[]},{"text":"impl Freeze for GrabStatus","synthetic":true,"types":[]},{"text":"impl Freeze for Gravity","synthetic":true,"types":[]},{"text":"impl Freeze for InputMode","synthetic":true,"types":[]},{"text":"impl Freeze for InputSource","synthetic":true,"types":[]},{"text":"impl Freeze for ModifierIntent","synthetic":true,"types":[]},{"text":"impl Freeze for NotifyType","synthetic":true,"types":[]},{"text":"impl Freeze for OwnerChange","synthetic":true,"types":[]},{"text":"impl Freeze for PropMode","synthetic":true,"types":[]},{"text":"impl Freeze for PropertyState","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollDirection","synthetic":true,"types":[]},{"text":"impl Freeze for SettingAction","synthetic":true,"types":[]},{"text":"impl Freeze for VisibilityState","synthetic":true,"types":[]},{"text":"impl Freeze for VisualType","synthetic":true,"types":[]},{"text":"impl Freeze for WindowEdge","synthetic":true,"types":[]},{"text":"impl Freeze for WindowType","synthetic":true,"types":[]},{"text":"impl Freeze for WindowTypeHint","synthetic":true,"types":[]},{"text":"impl Freeze for WindowWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for DragAction","synthetic":true,"types":[]},{"text":"impl Freeze for EventMask","synthetic":true,"types":[]},{"text":"impl Freeze for FrameClockPhase","synthetic":true,"types":[]},{"text":"impl Freeze for ModifierType","synthetic":true,"types":[]},{"text":"impl Freeze for WMDecoration","synthetic":true,"types":[]},{"text":"impl Freeze for WMFunction","synthetic":true,"types":[]},{"text":"impl Freeze for WindowHints","synthetic":true,"types":[]},{"text":"impl Freeze for WindowState","synthetic":true,"types":[]},{"text":"impl Freeze for Atom","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ChangeData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EventButton","synthetic":true,"types":[]},{"text":"impl Freeze for EventConfigure","synthetic":true,"types":[]},{"text":"impl Freeze for EventCrossing","synthetic":true,"types":[]},{"text":"impl Freeze for EventDND","synthetic":true,"types":[]},{"text":"impl Freeze for EventExpose","synthetic":true,"types":[]},{"text":"impl Freeze for EventFocus","synthetic":true,"types":[]},{"text":"impl Freeze for EventGrabBroken","synthetic":true,"types":[]},{"text":"impl Freeze for EventKey","synthetic":true,"types":[]},{"text":"impl Freeze for EventMotion","synthetic":true,"types":[]},{"text":"impl Freeze for EventOwnerChange","synthetic":true,"types":[]},{"text":"impl Freeze for EventProperty","synthetic":true,"types":[]},{"text":"impl Freeze for EventProximity","synthetic":true,"types":[]},{"text":"impl Freeze for EventScroll","synthetic":true,"types":[]},{"text":"impl Freeze for EventSelection","synthetic":true,"types":[]},{"text":"impl Freeze for EventSetting","synthetic":true,"types":[]},{"text":"impl Freeze for EventTouch","synthetic":true,"types":[]},{"text":"impl Freeze for EventVisibility","synthetic":true,"types":[]},{"text":"impl Freeze for EventWindowState","synthetic":true,"types":[]},{"text":"impl Freeze for GRange","synthetic":true,"types":[]},{"text":"impl Freeze for Geometry","synthetic":true,"types":[]},{"text":"impl Freeze for KeymapKey","synthetic":true,"types":[]},{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl Freeze for Rectangle","synthetic":true,"types":[]},{"text":"impl Freeze for RgbaParseError","synthetic":true,"types":[]},{"text":"impl Freeze for RGBA","synthetic":true,"types":[]},{"text":"impl Freeze for TimeCoord","synthetic":true,"types":[]},{"text":"impl Freeze for WindowAttr","synthetic":true,"types":[]}];
implementors["gdk_pixbuf"] = [{"text":"impl Freeze for Pixbuf","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufClass","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufLoader","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufFormat","synthetic":true,"types":[]},{"text":"impl Freeze for Colorspace","synthetic":true,"types":[]},{"text":"impl Freeze for InterpType","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufAlphaMode","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufError","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufRotation","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl Freeze for PixbufAnimation","synthetic":true,"types":[]}];
implementors["gdk_pixbuf_sys"] = [{"text":"impl Freeze for GdkPixbufFormat","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbufLoaderClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkPixbufSimpleAnimClass","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbuf","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbufAnimation","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbufAnimationIter","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbufLoader","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbufSimpleAnim","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPixbufSimpleAnimIter","synthetic":true,"types":[]}];
implementors["gdk_sys"] = [{"text":"impl Freeze for GdkEvent","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkAtom","synthetic":true,"types":[]},{"text":"impl Freeze for GdkColor","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkDevicePadInterface","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkDrawingContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventAny","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventButton","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventConfigure","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventCrossing","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventDND","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventExpose","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventFocus","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventGrabBroken","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventKey","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventMotion","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventOwnerChange","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventPadAxis","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventPadButton","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventPadGroupMode","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventProperty","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventProximity","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventScroll","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventSelection","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventSequence","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventSetting","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventTouch","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventTouchpadPinch","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventTouchpadSwipe","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventVisibility","synthetic":true,"types":[]},{"text":"impl Freeze for GdkEventWindowState","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkFrameClockClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkFrameClockPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GdkFrameTimings","synthetic":true,"types":[]},{"text":"impl Freeze for GdkGeometry","synthetic":true,"types":[]},{"text":"impl Freeze for GdkKeymapKey","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GdkPoint","synthetic":true,"types":[]},{"text":"impl Freeze for GdkRGBA","synthetic":true,"types":[]},{"text":"impl Freeze for GdkRectangle","synthetic":true,"types":[]},{"text":"impl Freeze for GdkTimeCoord","synthetic":true,"types":[]},{"text":"impl Freeze for GdkWindowAttr","synthetic":true,"types":[]},{"text":"impl Freeze for GdkWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GdkWindowRedirect","synthetic":true,"types":[]},{"text":"impl Freeze for GdkAppLaunchContext","synthetic":true,"types":[]},{"text":"impl Freeze for GdkCursor","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDevice","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDeviceManager","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDeviceTool","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDisplay","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDisplayManager","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDragContext","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDrawingContext","synthetic":true,"types":[]},{"text":"impl Freeze for GdkFrameClock","synthetic":true,"types":[]},{"text":"impl Freeze for GdkGLContext","synthetic":true,"types":[]},{"text":"impl Freeze for GdkKeymap","synthetic":true,"types":[]},{"text":"impl Freeze for GdkMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GdkScreen","synthetic":true,"types":[]},{"text":"impl Freeze for GdkSeat","synthetic":true,"types":[]},{"text":"impl Freeze for GdkVisual","synthetic":true,"types":[]},{"text":"impl Freeze for GdkWindow","synthetic":true,"types":[]},{"text":"impl Freeze for GdkDevicePad","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["gimli"] = [{"text":"impl Freeze for Format","synthetic":true,"types":[]},{"text":"impl Freeze for Encoding","synthetic":true,"types":[]},{"text":"impl Freeze for LineEncoding","synthetic":true,"types":[]},{"text":"impl Freeze for Register","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugAbbrevOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugAddrBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugAddrIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugInfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugLineOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugLineStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LocationListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugLocListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugLocListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugMacinfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugMacroOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RangeListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugRngListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugRngListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugStrOffsetsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugStrOffsetsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugTypesOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DebugTypeSignature","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for EhFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnitSectionOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SectionId","synthetic":true,"types":[]},{"text":"impl Freeze for DwoId","synthetic":true,"types":[]},{"text":"impl Freeze for DwarfFileType","synthetic":true,"types":[]},{"text":"impl Freeze for Arm","synthetic":true,"types":[]},{"text":"impl Freeze for X86","synthetic":true,"types":[]},{"text":"impl Freeze for X86_64","synthetic":true,"types":[]},{"text":"impl Freeze for DwUt","synthetic":true,"types":[]},{"text":"impl Freeze for DwCfa","synthetic":true,"types":[]},{"text":"impl Freeze for DwChildren","synthetic":true,"types":[]},{"text":"impl Freeze for DwTag","synthetic":true,"types":[]},{"text":"impl Freeze for DwAt","synthetic":true,"types":[]},{"text":"impl Freeze for DwForm","synthetic":true,"types":[]},{"text":"impl Freeze for DwAte","synthetic":true,"types":[]},{"text":"impl Freeze for DwLle","synthetic":true,"types":[]},{"text":"impl Freeze for DwDs","synthetic":true,"types":[]},{"text":"impl Freeze for DwEnd","synthetic":true,"types":[]},{"text":"impl Freeze for DwAccess","synthetic":true,"types":[]},{"text":"impl Freeze for DwVis","synthetic":true,"types":[]},{"text":"impl Freeze for DwVirtuality","synthetic":true,"types":[]},{"text":"impl Freeze for DwLang","synthetic":true,"types":[]},{"text":"impl Freeze for DwAddr","synthetic":true,"types":[]},{"text":"impl Freeze for DwId","synthetic":true,"types":[]},{"text":"impl Freeze for DwCc","synthetic":true,"types":[]},{"text":"impl Freeze for DwInl","synthetic":true,"types":[]},{"text":"impl Freeze for DwOrd","synthetic":true,"types":[]},{"text":"impl Freeze for DwDsc","synthetic":true,"types":[]},{"text":"impl Freeze for DwIdx","synthetic":true,"types":[]},{"text":"impl Freeze for DwDefaulted","synthetic":true,"types":[]},{"text":"impl Freeze for DwLns","synthetic":true,"types":[]},{"text":"impl Freeze for DwLne","synthetic":true,"types":[]},{"text":"impl Freeze for DwLnct","synthetic":true,"types":[]},{"text":"impl Freeze for DwMacro","synthetic":true,"types":[]},{"text":"impl Freeze for DwRle","synthetic":true,"types":[]},{"text":"impl Freeze for DwOp","synthetic":true,"types":[]},{"text":"impl Freeze for DwEhPe","synthetic":true,"types":[]},{"text":"impl Freeze for RunTimeEndian","synthetic":true,"types":[]},{"text":"impl Freeze for LittleEndian","synthetic":true,"types":[]},{"text":"impl Freeze for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugAddr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for EhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ParsedEhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for EhHdrTable&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for EhFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for BaseAddresses","synthetic":true,"types":[]},{"text":"impl Freeze for SectionBaseAddresses","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Freeze for CfiEntriesIter&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Freeze for CieOrFde&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Augmentation","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for CommonInformationEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Freeze for PartialFrameDescriptionEntry&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for FrameDescriptionEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for UninitializedUnwindContext&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for UnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for UnwindTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'iter, R&gt; Freeze for RegisterRuleIter&lt;'iter, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for UnwindTableRow&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for CfaRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RegisterRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for CallFrameInstruction&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Freeze for CallFrameInstructionIter&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Pointer","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Dwarf&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for Unit&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RangeIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, Endian&gt; Freeze for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ReaderOffsetId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugAbbrev&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Abbreviations","synthetic":true,"types":[]},{"text":"impl Freeze for Abbreviation","synthetic":true,"types":[]},{"text":"impl Freeze for AttributeSpecification","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ArangeEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugAranges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ArangeEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugLine&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Program, Offset&gt; Freeze for LineRows&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for LineInstruction&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for LineInstructions&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for LineRow","synthetic":true,"types":[]},{"text":"impl Freeze for ColumnType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for LineSequence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for LineProgramHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for IncompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for CompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for FileEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for FileEntryFormat","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugLoc&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugLocLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for LocationLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawLocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawLocListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for LocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for LocationListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DieReference&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for Operation&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for Location&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for Piece&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for EvaluationResult&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Expression&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for OperationIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Evaluation&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PubNamesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugPubNames&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PubNamesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PubTypesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugPubTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for PubTypesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugRanges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugRngLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RangeLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RawRngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawRngListEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for RngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Range","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugStrOffsets&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugLineStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnitOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugInfo&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugInfoUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Offset&gt; Freeze for UnitType&lt;Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for UnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R, Offset&nbsp;=&nbsp;&lt;R as Reader&gt;::Offset&gt; !Freeze for DebuggingInformationEntry&lt;'abbrev, 'unit, R, Offset&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Freeze for AttributeValue&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Attribute&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R&gt; Freeze for AttrsIter&lt;'abbrev, 'entry, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Freeze for EntriesRaw&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Freeze for EntriesCursor&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Freeze for EntriesTree&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Freeze for EntriesTreeNode&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; Freeze for EntriesTreeIter&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for DebugTypesUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ValueType","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["gio"] = [{"text":"impl Freeze for OwnerId","synthetic":true,"types":[]},{"text":"impl Freeze for RegistrationId","synthetic":true,"types":[]},{"text":"impl Freeze for WatcherId","synthetic":true,"types":[]},{"text":"impl Freeze for ActionGroupExportId","synthetic":true,"types":[]},{"text":"impl Freeze for MenuModelExportId","synthetic":true,"types":[]},{"text":"impl Freeze for FilterId","synthetic":true,"types":[]},{"text":"impl Freeze for SignalSubscriptionId","synthetic":true,"types":[]},{"text":"impl Freeze for FileAttributematcherIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for InetAddressBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IOStreamAsyncReadWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for InputStreamRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for InputStreamAsyncBufRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for OutputStreamWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for InputStreamAsyncRead&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for OutputStreamAsyncWrite&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnixSocketAddressPath&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Action","synthetic":true,"types":[]},{"text":"impl Freeze for ActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ActionMap","synthetic":true,"types":[]},{"text":"impl Freeze for AppInfo","synthetic":true,"types":[]},{"text":"impl Freeze for AppInfoMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for AppInfoMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for AppLaunchContext","synthetic":true,"types":[]},{"text":"impl Freeze for AppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for Application","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationClass","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for BufferedOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for BytesIcon","synthetic":true,"types":[]},{"text":"impl Freeze for BytesIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for Cancellable","synthetic":true,"types":[]},{"text":"impl Freeze for CancellableClass","synthetic":true,"types":[]},{"text":"impl Freeze for CharsetConverter","synthetic":true,"types":[]},{"text":"impl Freeze for CharsetConverterClass","synthetic":true,"types":[]},{"text":"impl Freeze for CharsetConverterBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Converter","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Credentials","synthetic":true,"types":[]},{"text":"impl Freeze for CredentialsClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusAuthObserver","synthetic":true,"types":[]},{"text":"impl Freeze for DBusAuthObserverClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusConnection","synthetic":true,"types":[]},{"text":"impl Freeze for DBusConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusInterface","synthetic":true,"types":[]},{"text":"impl Freeze for DBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl Freeze for DBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMenuModel","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMenuModelClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMessage","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMessageClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMethodInvocationClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusObject","synthetic":true,"types":[]},{"text":"impl Freeze for DBusProxy","synthetic":true,"types":[]},{"text":"impl Freeze for DBusProxyClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusServer","synthetic":true,"types":[]},{"text":"impl Freeze for DBusServerClass","synthetic":true,"types":[]},{"text":"impl Freeze for DataInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for DataInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for DataInputStreamBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for DataOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for DataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for DataOutputStreamBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for DesktopAppInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl Freeze for Drive","synthetic":true,"types":[]},{"text":"impl Freeze for Emblem","synthetic":true,"types":[]},{"text":"impl Freeze for EmblemClass","synthetic":true,"types":[]},{"text":"impl Freeze for EmblemedIcon","synthetic":true,"types":[]},{"text":"impl Freeze for EmblemedIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for File","synthetic":true,"types":[]},{"text":"impl Freeze for FileEnumerator","synthetic":true,"types":[]},{"text":"impl Freeze for FileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileIOStream","synthetic":true,"types":[]},{"text":"impl Freeze for FileIOStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileIcon","synthetic":true,"types":[]},{"text":"impl Freeze for FileIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FileInfoClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for FileInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for FileMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for FileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for FilenameCompleter","synthetic":true,"types":[]},{"text":"impl Freeze for FilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl Freeze for FilterInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for FilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for FilterOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for FilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for IOStream","synthetic":true,"types":[]},{"text":"impl Freeze for IOStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for Icon","synthetic":true,"types":[]},{"text":"impl Freeze for InetAddress","synthetic":true,"types":[]},{"text":"impl Freeze for InetAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for InetAddressMask","synthetic":true,"types":[]},{"text":"impl Freeze for InetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl Freeze for InetSocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for InetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for InputStream","synthetic":true,"types":[]},{"text":"impl Freeze for InputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for LoadableIcon","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for Menu","synthetic":true,"types":[]},{"text":"impl Freeze for MenuClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuAttributeIter","synthetic":true,"types":[]},{"text":"impl Freeze for MenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for MenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuLinkIter","synthetic":true,"types":[]},{"text":"impl Freeze for MenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuModel","synthetic":true,"types":[]},{"text":"impl Freeze for MenuModelClass","synthetic":true,"types":[]},{"text":"impl Freeze for Mount","synthetic":true,"types":[]},{"text":"impl Freeze for MountOperation","synthetic":true,"types":[]},{"text":"impl Freeze for MountOperationClass","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkAddress","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkService","synthetic":true,"types":[]},{"text":"impl Freeze for NetworkServiceClass","synthetic":true,"types":[]},{"text":"impl Freeze for Notification","synthetic":true,"types":[]},{"text":"impl Freeze for NotificationClass","synthetic":true,"types":[]},{"text":"impl Freeze for OutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for OutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for Permission","synthetic":true,"types":[]},{"text":"impl Freeze for PermissionClass","synthetic":true,"types":[]},{"text":"impl Freeze for PollableInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for PollableOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for PropertyAction","synthetic":true,"types":[]},{"text":"impl Freeze for PropertyActionClass","synthetic":true,"types":[]},{"text":"impl Freeze for Proxy","synthetic":true,"types":[]},{"text":"impl Freeze for ProxyAddress","synthetic":true,"types":[]},{"text":"impl Freeze for ProxyAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for ProxyResolver","synthetic":true,"types":[]},{"text":"impl Freeze for RemoteActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for Resolver","synthetic":true,"types":[]},{"text":"impl Freeze for ResolverClass","synthetic":true,"types":[]},{"text":"impl Freeze for Seekable","synthetic":true,"types":[]},{"text":"impl Freeze for Settings","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsClass","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsBackend","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsBackendClass","synthetic":true,"types":[]},{"text":"impl Freeze for SimpleAction","synthetic":true,"types":[]},{"text":"impl Freeze for SimpleActionClass","synthetic":true,"types":[]},{"text":"impl Freeze for SimpleActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for SimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for SimplePermission","synthetic":true,"types":[]},{"text":"impl Freeze for SimplePermissionClass","synthetic":true,"types":[]},{"text":"impl Freeze for Socket","synthetic":true,"types":[]},{"text":"impl Freeze for SocketClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketClient","synthetic":true,"types":[]},{"text":"impl Freeze for SocketClientClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketConnectable","synthetic":true,"types":[]},{"text":"impl Freeze for SocketConnection","synthetic":true,"types":[]},{"text":"impl Freeze for SocketConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketListener","synthetic":true,"types":[]},{"text":"impl Freeze for SocketListenerClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketService","synthetic":true,"types":[]},{"text":"impl Freeze for SocketServiceClass","synthetic":true,"types":[]},{"text":"impl Freeze for Subprocess","synthetic":true,"types":[]},{"text":"impl Freeze for SubprocessClass","synthetic":true,"types":[]},{"text":"impl Freeze for SubprocessLauncher","synthetic":true,"types":[]},{"text":"impl Freeze for SubprocessLauncherClass","synthetic":true,"types":[]},{"text":"impl Freeze for TcpConnection","synthetic":true,"types":[]},{"text":"impl Freeze for TcpConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for ThemedIcon","synthetic":true,"types":[]},{"text":"impl Freeze for ThemedIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadedSocketService","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl Freeze for TlsCertificate","synthetic":true,"types":[]},{"text":"impl Freeze for TlsCertificateClass","synthetic":true,"types":[]},{"text":"impl Freeze for TlsClientConnection","synthetic":true,"types":[]},{"text":"impl Freeze for TlsConnection","synthetic":true,"types":[]},{"text":"impl Freeze for TlsConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for TlsDatabase","synthetic":true,"types":[]},{"text":"impl Freeze for TlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl Freeze for TlsFileDatabase","synthetic":true,"types":[]},{"text":"impl Freeze for TlsInteraction","synthetic":true,"types":[]},{"text":"impl Freeze for TlsInteractionClass","synthetic":true,"types":[]},{"text":"impl Freeze for TlsPassword","synthetic":true,"types":[]},{"text":"impl Freeze for TlsPasswordClass","synthetic":true,"types":[]},{"text":"impl Freeze for TlsServerConnection","synthetic":true,"types":[]},{"text":"impl Freeze for UnixFDList","synthetic":true,"types":[]},{"text":"impl Freeze for UnixFDListClass","synthetic":true,"types":[]},{"text":"impl Freeze for UnixInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for UnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for UnixOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for UnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for UnixSocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for UnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for Vfs","synthetic":true,"types":[]},{"text":"impl Freeze for VfsClass","synthetic":true,"types":[]},{"text":"impl Freeze for Volume","synthetic":true,"types":[]},{"text":"impl Freeze for VolumeMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for VolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for ZlibCompressor","synthetic":true,"types":[]},{"text":"impl Freeze for ZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl Freeze for ZlibDecompressor","synthetic":true,"types":[]},{"text":"impl Freeze for ZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl Freeze for DBusArgInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMethodInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DBusNodeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl Freeze for DBusSignalInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl Freeze for Resource","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsSchema","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl Freeze for SrvTarget","synthetic":true,"types":[]},{"text":"impl Freeze for BusType","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterResult","synthetic":true,"types":[]},{"text":"impl Freeze for CredentialsType","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMessageByteOrder","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMessageHeaderField","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMessageType","synthetic":true,"types":[]},{"text":"impl Freeze for DataStreamByteOrder","synthetic":true,"types":[]},{"text":"impl Freeze for DataStreamNewlineType","synthetic":true,"types":[]},{"text":"impl Freeze for DriveStartStopType","synthetic":true,"types":[]},{"text":"impl Freeze for EmblemOrigin","synthetic":true,"types":[]},{"text":"impl Freeze for FileAttributeStatus","synthetic":true,"types":[]},{"text":"impl Freeze for FileAttributeType","synthetic":true,"types":[]},{"text":"impl Freeze for FileMonitorEvent","synthetic":true,"types":[]},{"text":"impl Freeze for FileType","synthetic":true,"types":[]},{"text":"impl Freeze for IOErrorEnum","synthetic":true,"types":[]},{"text":"impl Freeze for MountOperationResult","synthetic":true,"types":[]},{"text":"impl Freeze for NotificationPriority","synthetic":true,"types":[]},{"text":"impl Freeze for PasswordSave","synthetic":true,"types":[]},{"text":"impl Freeze for ResolverRecordType","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceError","synthetic":true,"types":[]},{"text":"impl Freeze for SocketClientEvent","synthetic":true,"types":[]},{"text":"impl Freeze for SocketFamily","synthetic":true,"types":[]},{"text":"impl Freeze for SocketProtocol","synthetic":true,"types":[]},{"text":"impl Freeze for SocketType","synthetic":true,"types":[]},{"text":"impl Freeze for TlsAuthenticationMode","synthetic":true,"types":[]},{"text":"impl Freeze for TlsCertificateRequestFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TlsDatabaseLookupFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TlsInteractionResult","synthetic":true,"types":[]},{"text":"impl Freeze for TlsRehandshakeMode","synthetic":true,"types":[]},{"text":"impl Freeze for UnixSocketAddressType","synthetic":true,"types":[]},{"text":"impl Freeze for ZlibCompressorFormat","synthetic":true,"types":[]},{"text":"impl Freeze for AppInfoCreateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationFlags","synthetic":true,"types":[]},{"text":"impl Freeze for AskPasswordFlags","synthetic":true,"types":[]},{"text":"impl Freeze for BusNameOwnerFlags","synthetic":true,"types":[]},{"text":"impl Freeze for BusNameWatcherFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ConverterFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusCallFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusCapabilityFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusConnectionFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusInterfaceSkeletonFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusMessageFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusProxyFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusSendMessageFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusServerFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DBusSignalFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DriveStartFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileCopyFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileCreateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileMeasureFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileMonitorFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileQueryInfoFlags","synthetic":true,"types":[]},{"text":"impl Freeze for IOStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MountMountFlags","synthetic":true,"types":[]},{"text":"impl Freeze for MountUnmountFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OutputStreamSpliceFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ResourceLookupFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsBindFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SubprocessFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TlsCertificateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TlsDatabaseVerifyFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TlsPasswordFlags","synthetic":true,"types":[]},{"text":"impl&lt;F, O, T, E&gt; Freeze for GioFuture&lt;F, O, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Freeze for GioFutureResult&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentList","synthetic":true,"types":[]},{"text":"impl Freeze for ReadInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for WriteOutputStream","synthetic":true,"types":[]}];
implementors["gio_sys"] = [{"text":"impl Freeze for GActionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GActionGroupInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GActionInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GActionMapInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GAppInfoIface","synthetic":true,"types":[]},{"text":"impl Freeze for GAppLaunchContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GAppLaunchContextPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GApplicationClass","synthetic":true,"types":[]},{"text":"impl Freeze for GApplicationCommandLineClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GApplicationCommandLinePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GApplicationPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GAsyncInitableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GAsyncResultIface","synthetic":true,"types":[]},{"text":"impl Freeze for GBufferedInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GBufferedInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GBufferedOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GBufferedOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GCancellableClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GCancellablePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GCharsetConverterClass","synthetic":true,"types":[]},{"text":"impl Freeze for GConverterIface","synthetic":true,"types":[]},{"text":"impl Freeze for GConverterInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GConverterInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GConverterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GConverterOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GCredentialsClass","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusAnnotationInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusArgInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusErrorEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusInterfaceIface","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusInterfaceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusInterfaceSkeletonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDBusInterfaceSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusInterfaceVTable","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusMethodInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusNodeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectIface","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectManagerClientClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDBusObjectManagerClientPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectManagerIface","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectManagerServerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDBusObjectManagerServerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectProxyClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDBusObjectProxyPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectSkeletonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDBusObjectSkeletonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusPropertyInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusProxyClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDBusProxyPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusSignalInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusSubtreeVTable","synthetic":true,"types":[]},{"text":"impl Freeze for GDataInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDataInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDataOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GDataOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GDatagramBasedInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GDesktopAppInfoClass","synthetic":true,"types":[]},{"text":"impl Freeze for GDesktopAppInfoLookupIface","synthetic":true,"types":[]},{"text":"impl Freeze for GDriveIface","synthetic":true,"types":[]},{"text":"impl Freeze for GDtlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GDtlsConnectionInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GDtlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl Freeze for _GEmblemClass","synthetic":true,"types":[]},{"text":"impl Freeze for GEmblemedIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GEmblemedIconPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GFileAttributeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GFileAttributeInfoList","synthetic":true,"types":[]},{"text":"impl Freeze for GFileAttributeMatcher","synthetic":true,"types":[]},{"text":"impl Freeze for GFileDescriptorBasedIface","synthetic":true,"types":[]},{"text":"impl Freeze for GFileEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GFileIOStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for GFileIface","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileInfoClass","synthetic":true,"types":[]},{"text":"impl Freeze for GFileInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GFileMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileMonitorPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GFileOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GFileOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GFilenameCompleterClass","synthetic":true,"types":[]},{"text":"impl Freeze for GFilterInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for GFilterOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOExtension","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOExtensionPoint","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOModuleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOModuleScope","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOSchedulerJob","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOStreamAdapter","synthetic":true,"types":[]},{"text":"impl Freeze for GIOStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GIOStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GIconIface","synthetic":true,"types":[]},{"text":"impl Freeze for GInetAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for GInetAddressMaskClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GInetAddressMaskPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GInetAddressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GInetSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GInetSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GInitableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GInputMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GInputVector","synthetic":true,"types":[]},{"text":"impl Freeze for GListModelInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GListStoreClass","synthetic":true,"types":[]},{"text":"impl Freeze for GLoadableIconIface","synthetic":true,"types":[]},{"text":"impl Freeze for GMemoryInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GMemoryInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GMemoryMonitorInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GMemoryOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GMemoryOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuAttributeIterClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GMenuAttributeIterPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuLinkIterClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GMenuLinkIterPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuModelClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GMenuModelPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GMountIface","synthetic":true,"types":[]},{"text":"impl Freeze for GMountOperationClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GNativeSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GNativeSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GNativeVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GNetworkAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GNetworkAddressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GNetworkMonitorInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GNetworkServiceClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GNetworkServicePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GOutputMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GOutputVector","synthetic":true,"types":[]},{"text":"impl Freeze for GPermissionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GPermissionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GPollableInputStreamInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GPollableOutputStreamInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GProxyAddressEnumeratorPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GProxyAddressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyResolverInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GRemoteActionGroupInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GResolverClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GResolverPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GResource","synthetic":true,"types":[]},{"text":"impl Freeze for GSeekableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GSettingsBackendClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSettingsBackendPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSettingsClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSettingsPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSettingsSchema","synthetic":true,"types":[]},{"text":"impl Freeze for GSettingsSchemaKey","synthetic":true,"types":[]},{"text":"impl Freeze for GSettingsSchemaSource","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleActionGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSimpleActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GSimpleAsyncResultClass","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleProxyResolverClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSimpleProxyResolverPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketAddressEnumeratorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketClass","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketClientClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSocketClientPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketConnectableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSocketConnectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketControlMessageClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSocketControlMessagePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketListenerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSocketListenerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GSocketPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketServiceClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GSrvTarget","synthetic":true,"types":[]},{"text":"impl Freeze for GStaticResource","synthetic":true,"types":[]},{"text":"impl Freeze for _GTaskClass","synthetic":true,"types":[]},{"text":"impl Freeze for GTcpConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTcpConnectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTcpWrapperConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTcpWrapperConnectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GThemedIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for GThreadedSocketServiceClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GThreadedSocketServicePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsBackendInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsCertificateClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTlsCertificatePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsClientConnectionInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTlsConnectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsDatabaseClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTlsDatabasePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsFileDatabaseInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsInteractionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTlsInteractionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsPasswordClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GTlsPasswordPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsServerConnectionInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixConnectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixConnectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixCredentialsMessageClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixCredentialsMessagePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixFDListClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixFDListPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixFDMessageClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixFDMessagePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixInputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixInputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixMountEntry","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixMountMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixMountPoint","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixOutputStreamClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixOutputStreamPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixSocketAddressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GUnixSocketAddressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GVfsClass","synthetic":true,"types":[]},{"text":"impl Freeze for GVolumeIface","synthetic":true,"types":[]},{"text":"impl Freeze for GVolumeMonitorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GZlibCompressorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GZlibDecompressorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GAppInfoMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GAppLaunchContext","synthetic":true,"types":[]},{"text":"impl Freeze for GApplication","synthetic":true,"types":[]},{"text":"impl Freeze for GApplicationCommandLine","synthetic":true,"types":[]},{"text":"impl Freeze for GBufferedInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GBufferedOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GBytesIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GCancellable","synthetic":true,"types":[]},{"text":"impl Freeze for GCharsetConverter","synthetic":true,"types":[]},{"text":"impl Freeze for GConverterInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GConverterOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GCredentials","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusAuthObserver","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusInterfaceSkeleton","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusMenuModel","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusMethodInvocation","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectManagerClient","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectManagerServer","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectProxy","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectSkeleton","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusProxy","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusServer","synthetic":true,"types":[]},{"text":"impl Freeze for GDataInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GDataOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GDesktopAppInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GEmblem","synthetic":true,"types":[]},{"text":"impl Freeze for GEmblemedIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GFileEnumerator","synthetic":true,"types":[]},{"text":"impl Freeze for GFileIOStream","synthetic":true,"types":[]},{"text":"impl Freeze for GFileIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GFileInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GFileInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GFileMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GFileOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GFilenameCompleter","synthetic":true,"types":[]},{"text":"impl Freeze for GFilterInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GFilterOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GIOModule","synthetic":true,"types":[]},{"text":"impl Freeze for GIOStream","synthetic":true,"types":[]},{"text":"impl Freeze for GInetAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GInetAddressMask","synthetic":true,"types":[]},{"text":"impl Freeze for GInetSocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GListStore","synthetic":true,"types":[]},{"text":"impl Freeze for GMemoryInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GMemoryOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GMenu","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuAttributeIter","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuLinkIter","synthetic":true,"types":[]},{"text":"impl Freeze for GMenuModel","synthetic":true,"types":[]},{"text":"impl Freeze for GMountOperation","synthetic":true,"types":[]},{"text":"impl Freeze for GNativeSocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GNativeVolumeMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GNetworkAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GNetworkService","synthetic":true,"types":[]},{"text":"impl Freeze for GNotification","synthetic":true,"types":[]},{"text":"impl Freeze for GOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GPermission","synthetic":true,"types":[]},{"text":"impl Freeze for GPropertyAction","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyAddressEnumerator","synthetic":true,"types":[]},{"text":"impl Freeze for GResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GSettings","synthetic":true,"types":[]},{"text":"impl Freeze for GSettingsBackend","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleAction","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleAsyncResult","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleIOStream","synthetic":true,"types":[]},{"text":"impl Freeze for GSimplePermission","synthetic":true,"types":[]},{"text":"impl Freeze for GSimpleProxyResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GSocket","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketAddressEnumerator","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketClient","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketControlMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketListener","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketService","synthetic":true,"types":[]},{"text":"impl Freeze for GSubprocess","synthetic":true,"types":[]},{"text":"impl Freeze for GSubprocessLauncher","synthetic":true,"types":[]},{"text":"impl Freeze for GTask","synthetic":true,"types":[]},{"text":"impl Freeze for GTcpConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GTcpWrapperConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GTestDBus","synthetic":true,"types":[]},{"text":"impl Freeze for GThemedIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GThreadedSocketService","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsCertificate","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsDatabase","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsInteraction","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsPassword","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixCredentialsMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixFDList","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixFDMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixMountMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GUnixSocketAddress","synthetic":true,"types":[]},{"text":"impl Freeze for GVfs","synthetic":true,"types":[]},{"text":"impl Freeze for GVolumeMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GZlibCompressor","synthetic":true,"types":[]},{"text":"impl Freeze for GZlibDecompressor","synthetic":true,"types":[]},{"text":"impl Freeze for GAction","synthetic":true,"types":[]},{"text":"impl Freeze for GActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GActionMap","synthetic":true,"types":[]},{"text":"impl Freeze for GAppInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GAsyncInitable","synthetic":true,"types":[]},{"text":"impl Freeze for GAsyncResult","synthetic":true,"types":[]},{"text":"impl Freeze for GConverter","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObject","synthetic":true,"types":[]},{"text":"impl Freeze for GDBusObjectManager","synthetic":true,"types":[]},{"text":"impl Freeze for GDatagramBased","synthetic":true,"types":[]},{"text":"impl Freeze for GDesktopAppInfoLookup","synthetic":true,"types":[]},{"text":"impl Freeze for GDrive","synthetic":true,"types":[]},{"text":"impl Freeze for GDtlsClientConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GDtlsConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GDtlsServerConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GFile","synthetic":true,"types":[]},{"text":"impl Freeze for GFileDescriptorBased","synthetic":true,"types":[]},{"text":"impl Freeze for GIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GInitable","synthetic":true,"types":[]},{"text":"impl Freeze for GListModel","synthetic":true,"types":[]},{"text":"impl Freeze for GLoadableIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GMemoryMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GMount","synthetic":true,"types":[]},{"text":"impl Freeze for GNetworkMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for GPollableInputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GPollableOutputStream","synthetic":true,"types":[]},{"text":"impl Freeze for GProxy","synthetic":true,"types":[]},{"text":"impl Freeze for GProxyResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GRemoteActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GSeekable","synthetic":true,"types":[]},{"text":"impl Freeze for GSocketConnectable","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsBackend","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsClientConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsFileDatabase","synthetic":true,"types":[]},{"text":"impl Freeze for GTlsServerConnection","synthetic":true,"types":[]},{"text":"impl Freeze for GVolume","synthetic":true,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T, MM&gt; Freeze for Boxed&lt;T, MM&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, MM&gt; Freeze for Shared&lt;T, MM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for BoolError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ClassRef&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectRef","synthetic":true,"types":[]},{"text":"impl Freeze for Object","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectClass","synthetic":true,"types":[]},{"text":"impl Freeze for InitiallyUnowned","synthetic":true,"types":[]},{"text":"impl Freeze for InitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WeakRef&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendWeakRef&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Checksum","synthetic":true,"types":[]},{"text":"impl Freeze for DateTime","synthetic":true,"types":[]},{"text":"impl Freeze for KeyFile","synthetic":true,"types":[]},{"text":"impl Freeze for MainContext","synthetic":true,"types":[]},{"text":"impl Freeze for MainLoop","synthetic":true,"types":[]},{"text":"impl Freeze for Source","synthetic":true,"types":[]},{"text":"impl Freeze for TimeZone","synthetic":true,"types":[]},{"text":"impl Freeze for ChecksumType","synthetic":true,"types":[]},{"text":"impl Freeze for DateMonth","synthetic":true,"types":[]},{"text":"impl Freeze for DateWeekday","synthetic":true,"types":[]},{"text":"impl Freeze for KeyFileError","synthetic":true,"types":[]},{"text":"impl Freeze for OptionArg","synthetic":true,"types":[]},{"text":"impl Freeze for SeekType","synthetic":true,"types":[]},{"text":"impl Freeze for TimeType","synthetic":true,"types":[]},{"text":"impl Freeze for FileTest","synthetic":true,"types":[]},{"text":"impl Freeze for FormatSizeFlags","synthetic":true,"types":[]},{"text":"impl Freeze for IOCondition","synthetic":true,"types":[]},{"text":"impl Freeze for KeyFileFlags","synthetic":true,"types":[]},{"text":"impl Freeze for LogLevelFlags","synthetic":true,"types":[]},{"text":"impl Freeze for OptionFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SpawnFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for BindingClass","synthetic":true,"types":[]},{"text":"impl Freeze for BindingFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ParamFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SignalFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ByteArray","synthetic":true,"types":[]},{"text":"impl Freeze for Bytes","synthetic":true,"types":[]},{"text":"impl Freeze for Char","synthetic":true,"types":[]},{"text":"impl Freeze for UChar","synthetic":true,"types":[]},{"text":"impl Freeze for String","synthetic":true,"types":[]},{"text":"impl Freeze for Closure","synthetic":true,"types":[]},{"text":"impl Freeze for UserDirectory","synthetic":true,"types":[]},{"text":"impl Freeze for EnumClass","synthetic":true,"types":[]},{"text":"impl Freeze for EnumValue","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsClass","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FlagsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FileError","synthetic":true,"types":[]},{"text":"impl Freeze for SignalHandlerId","synthetic":true,"types":[]},{"text":"impl Freeze for Inhibit","synthetic":true,"types":[]},{"text":"impl Freeze for SourceId","synthetic":true,"types":[]},{"text":"impl Freeze for Pid","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Priority","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; Freeze for Stash&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtr&lt;'a, P&gt;&gt;::Storage: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; Freeze for StashMut&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtrMut&lt;'a, P&gt;&gt;::Storage: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Borrowed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for List","synthetic":true,"types":[]},{"text":"impl Freeze for SList","synthetic":true,"types":[]},{"text":"impl Freeze for HashTable","synthetic":true,"types":[]},{"text":"impl Freeze for Array","synthetic":true,"types":[]},{"text":"impl Freeze for PtrArray","synthetic":true,"types":[]},{"text":"impl Freeze for GString","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GetError","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for ValueArray","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TypedValue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SendValue","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for VariantDict","synthetic":true,"types":[]},{"text":"impl Freeze for VariantType","synthetic":true,"types":[]},{"text":"impl Freeze for VariantTy","synthetic":true,"types":[]},{"text":"impl Freeze for Date","synthetic":true,"types":[]},{"text":"impl Freeze for ValueArray","synthetic":true,"types":[]},{"text":"impl Freeze for ParamSpec","synthetic":true,"types":[]},{"text":"impl Freeze for Quark","synthetic":true,"types":[]},{"text":"impl Freeze for LogHandlerId","synthetic":true,"types":[]},{"text":"impl Freeze for LogLevel","synthetic":true,"types":[]},{"text":"impl Freeze for LogLevels","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for SendUniqueCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BorrowError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for InstanceStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibType: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ClassStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibClassType: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for InitializingType&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TypeData","synthetic":true,"types":[]},{"text":"impl Freeze for SignalInvocationHint","synthetic":true,"types":[]},{"text":"impl Freeze for SignalClassHandlerToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Property&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Boxed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Freeze for SourceFuture&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Freeze for SourceStream&lt;F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadPool","synthetic":true,"types":[]}];
implementors["glib_sys"] = [{"text":"impl Freeze for GPollFD","synthetic":true,"types":[]},{"text":"impl Freeze for GDoubleIEEE754","synthetic":true,"types":[]},{"text":"impl Freeze for GFloatIEEE754","synthetic":true,"types":[]},{"text":"impl Freeze for GMutex","synthetic":true,"types":[]},{"text":"impl Freeze for GTokenValue","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantBuilder_u","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantDict_u","synthetic":true,"types":[]},{"text":"impl Freeze for GArray","synthetic":true,"types":[]},{"text":"impl Freeze for _GAsyncQueue","synthetic":true,"types":[]},{"text":"impl Freeze for _GBookmarkFile","synthetic":true,"types":[]},{"text":"impl Freeze for GByteArray","synthetic":true,"types":[]},{"text":"impl Freeze for GBytes","synthetic":true,"types":[]},{"text":"impl Freeze for GChecksum","synthetic":true,"types":[]},{"text":"impl Freeze for GCond","synthetic":true,"types":[]},{"text":"impl Freeze for _GData","synthetic":true,"types":[]},{"text":"impl Freeze for GDate","synthetic":true,"types":[]},{"text":"impl Freeze for GDateTime","synthetic":true,"types":[]},{"text":"impl Freeze for GDebugKey","synthetic":true,"types":[]},{"text":"impl Freeze for _GDir","synthetic":true,"types":[]},{"text":"impl Freeze for GDoubleIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl Freeze for GError","synthetic":true,"types":[]},{"text":"impl Freeze for GFloatIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl Freeze for GHashTable","synthetic":true,"types":[]},{"text":"impl Freeze for GHashTableIter","synthetic":true,"types":[]},{"text":"impl Freeze for _GHmac","synthetic":true,"types":[]},{"text":"impl Freeze for GHook","synthetic":true,"types":[]},{"text":"impl Freeze for GHookList","synthetic":true,"types":[]},{"text":"impl Freeze for _GIConv","synthetic":true,"types":[]},{"text":"impl Freeze for GIOChannel","synthetic":true,"types":[]},{"text":"impl Freeze for GIOFuncs","synthetic":true,"types":[]},{"text":"impl Freeze for GKeyFile","synthetic":true,"types":[]},{"text":"impl Freeze for GList","synthetic":true,"types":[]},{"text":"impl Freeze for GLogField","synthetic":true,"types":[]},{"text":"impl Freeze for GMainContext","synthetic":true,"types":[]},{"text":"impl Freeze for GMainLoop","synthetic":true,"types":[]},{"text":"impl Freeze for GMappedFile","synthetic":true,"types":[]},{"text":"impl Freeze for GMarkupParseContext","synthetic":true,"types":[]},{"text":"impl Freeze for GMarkupParser","synthetic":true,"types":[]},{"text":"impl Freeze for GMatchInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GMemVTable","synthetic":true,"types":[]},{"text":"impl Freeze for GNode","synthetic":true,"types":[]},{"text":"impl Freeze for GOnce","synthetic":true,"types":[]},{"text":"impl Freeze for _GOptionContext","synthetic":true,"types":[]},{"text":"impl Freeze for GOptionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GOptionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for _GPatternSpec","synthetic":true,"types":[]},{"text":"impl Freeze for GPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GPtrArray","synthetic":true,"types":[]},{"text":"impl Freeze for GQueue","synthetic":true,"types":[]},{"text":"impl Freeze for GRWLock","synthetic":true,"types":[]},{"text":"impl Freeze for _GRand","synthetic":true,"types":[]},{"text":"impl Freeze for GRecMutex","synthetic":true,"types":[]},{"text":"impl Freeze for GRegex","synthetic":true,"types":[]},{"text":"impl Freeze for GSList","synthetic":true,"types":[]},{"text":"impl Freeze for GScanner","synthetic":true,"types":[]},{"text":"impl Freeze for GScannerConfig","synthetic":true,"types":[]},{"text":"impl Freeze for _GSequence","synthetic":true,"types":[]},{"text":"impl Freeze for _GSequenceIter","synthetic":true,"types":[]},{"text":"impl Freeze for GSource","synthetic":true,"types":[]},{"text":"impl Freeze for GSourceCallbackFuncs","synthetic":true,"types":[]},{"text":"impl Freeze for GSourceFuncs","synthetic":true,"types":[]},{"text":"impl Freeze for _GSourcePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GStatBuf","synthetic":true,"types":[]},{"text":"impl Freeze for GString","synthetic":true,"types":[]},{"text":"impl Freeze for _GStringChunk","synthetic":true,"types":[]},{"text":"impl Freeze for _GTestCase","synthetic":true,"types":[]},{"text":"impl Freeze for GTestConfig","synthetic":true,"types":[]},{"text":"impl Freeze for GTestLogBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for GTestLogMsg","synthetic":true,"types":[]},{"text":"impl Freeze for _GTestSuite","synthetic":true,"types":[]},{"text":"impl Freeze for GThread","synthetic":true,"types":[]},{"text":"impl Freeze for GThreadPool","synthetic":true,"types":[]},{"text":"impl Freeze for GTimeVal","synthetic":true,"types":[]},{"text":"impl Freeze for GTimeZone","synthetic":true,"types":[]},{"text":"impl Freeze for _GTimer","synthetic":true,"types":[]},{"text":"impl Freeze for GTrashStack","synthetic":true,"types":[]},{"text":"impl Freeze for _GTree","synthetic":true,"types":[]},{"text":"impl Freeze for GVariant","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantBuilder_u_s","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantDict","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantDict_u_s","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantIter","synthetic":true,"types":[]},{"text":"impl Freeze for GVariantType","synthetic":true,"types":[]}];
implementors["gobject_sys"] = [{"text":"impl Freeze for GTypeCValue","synthetic":true,"types":[]},{"text":"impl Freeze for GValue_data","synthetic":true,"types":[]},{"text":"impl Freeze for GWeakRef_priv","synthetic":true,"types":[]},{"text":"impl Freeze for GCClosure","synthetic":true,"types":[]},{"text":"impl Freeze for GClosure","synthetic":true,"types":[]},{"text":"impl Freeze for GClosureNotifyData","synthetic":true,"types":[]},{"text":"impl Freeze for GEnumClass","synthetic":true,"types":[]},{"text":"impl Freeze for GEnumValue","synthetic":true,"types":[]},{"text":"impl Freeze for GFlagsClass","synthetic":true,"types":[]},{"text":"impl Freeze for GFlagsValue","synthetic":true,"types":[]},{"text":"impl Freeze for GInitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl Freeze for GInterfaceInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GObjectClass","synthetic":true,"types":[]},{"text":"impl Freeze for GObjectConstructParam","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GParamSpecPool","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecTypeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GParameter","synthetic":true,"types":[]},{"text":"impl Freeze for GSignalInvocationHint","synthetic":true,"types":[]},{"text":"impl Freeze for GSignalQuery","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeClass","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeFundamentalInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeInstance","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeModuleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GTypePluginClass","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeQuery","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeValueTable","synthetic":true,"types":[]},{"text":"impl Freeze for GValue","synthetic":true,"types":[]},{"text":"impl Freeze for GValueArray","synthetic":true,"types":[]},{"text":"impl Freeze for GWeakRef","synthetic":true,"types":[]},{"text":"impl Freeze for GBinding","synthetic":true,"types":[]},{"text":"impl Freeze for GInitiallyUnowned","synthetic":true,"types":[]},{"text":"impl Freeze for GObject","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpec","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecBoolean","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecBoxed","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecChar","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecDouble","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecEnum","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecFlags","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecFloat","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecGType","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecInt","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecInt64","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecLong","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecObject","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecOverride","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecParam","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecPointer","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecString","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecUChar","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecUInt","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecUInt64","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecULong","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecUnichar","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecValueArray","synthetic":true,"types":[]},{"text":"impl Freeze for GParamSpecVariant","synthetic":true,"types":[]},{"text":"impl Freeze for GTypeModule","synthetic":true,"types":[]},{"text":"impl Freeze for GTypePlugin","synthetic":true,"types":[]}];
implementors["gtk"] = [{"text":"impl Freeze for AboutDialog","synthetic":true,"types":[]},{"text":"impl Freeze for AboutDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for AboutDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for AccelGroup","synthetic":true,"types":[]},{"text":"impl Freeze for AccelGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for AccelLabel","synthetic":true,"types":[]},{"text":"impl Freeze for AccelLabelClass","synthetic":true,"types":[]},{"text":"impl Freeze for AccelLabelBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ActionBar","synthetic":true,"types":[]},{"text":"impl Freeze for ActionBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for ActionBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Actionable","synthetic":true,"types":[]},{"text":"impl Freeze for Adjustment","synthetic":true,"types":[]},{"text":"impl Freeze for AdjustmentClass","synthetic":true,"types":[]},{"text":"impl Freeze for AdjustmentBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserButton","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Application","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationClass","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationWindow","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationWindowBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for AspectFrame","synthetic":true,"types":[]},{"text":"impl Freeze for AspectFrameClass","synthetic":true,"types":[]},{"text":"impl Freeze for AspectFrameBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Assistant","synthetic":true,"types":[]},{"text":"impl Freeze for AssistantClass","synthetic":true,"types":[]},{"text":"impl Freeze for AssistantBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Bin","synthetic":true,"types":[]},{"text":"impl Freeze for BinClass","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for BoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for BoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Buildable","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for BuilderClass","synthetic":true,"types":[]},{"text":"impl Freeze for Button","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonBox","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonBoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Calendar","synthetic":true,"types":[]},{"text":"impl Freeze for CalendarClass","synthetic":true,"types":[]},{"text":"impl Freeze for CalendarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellArea","synthetic":true,"types":[]},{"text":"impl Freeze for CellAreaClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellAreaBox","synthetic":true,"types":[]},{"text":"impl Freeze for CellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellAreaBoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellAreaContext","synthetic":true,"types":[]},{"text":"impl Freeze for CellAreaContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellEditable","synthetic":true,"types":[]},{"text":"impl Freeze for CellLayout","synthetic":true,"types":[]},{"text":"impl Freeze for CellRenderer","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererAccel","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererAccelBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererCombo","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererComboClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererComboBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererPixbufBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererProgress","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererProgressBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererSpin","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererSpinBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererSpinner","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererSpinnerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererText","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererTextClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererTextBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererToggle","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererToggleBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CellView","synthetic":true,"types":[]},{"text":"impl Freeze for CellViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for CellViewBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CheckButton","synthetic":true,"types":[]},{"text":"impl Freeze for CheckButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for CheckButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for CheckMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for CheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for CheckMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Clipboard","synthetic":true,"types":[]},{"text":"impl Freeze for ClipboardClass","synthetic":true,"types":[]},{"text":"impl Freeze for ColorButton","synthetic":true,"types":[]},{"text":"impl Freeze for ColorButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for ColorButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooser","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for ColorChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ComboBox","synthetic":true,"types":[]},{"text":"impl Freeze for ComboBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for ComboBoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ComboBoxText","synthetic":true,"types":[]},{"text":"impl Freeze for ComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl Freeze for ComboBoxTextBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Container","synthetic":true,"types":[]},{"text":"impl Freeze for ContainerClass","synthetic":true,"types":[]},{"text":"impl Freeze for CssProvider","synthetic":true,"types":[]},{"text":"impl Freeze for CssProviderClass","synthetic":true,"types":[]},{"text":"impl Freeze for Dialog","synthetic":true,"types":[]},{"text":"impl Freeze for DialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for DialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for DrawingArea","synthetic":true,"types":[]},{"text":"impl Freeze for DrawingAreaClass","synthetic":true,"types":[]},{"text":"impl Freeze for DrawingAreaBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Editable","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for EntryClass","synthetic":true,"types":[]},{"text":"impl Freeze for EntryBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for EntryCompletion","synthetic":true,"types":[]},{"text":"impl Freeze for EntryCompletionClass","synthetic":true,"types":[]},{"text":"impl Freeze for EntryCompletionBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for EventBox","synthetic":true,"types":[]},{"text":"impl Freeze for EventBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for EventBoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for EventController","synthetic":true,"types":[]},{"text":"impl Freeze for EventControllerClass","synthetic":true,"types":[]},{"text":"impl Freeze for Expander","synthetic":true,"types":[]},{"text":"impl Freeze for ExpanderClass","synthetic":true,"types":[]},{"text":"impl Freeze for ExpanderBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooser","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserButton","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FileFilter","synthetic":true,"types":[]},{"text":"impl Freeze for FileFilterClass","synthetic":true,"types":[]},{"text":"impl Freeze for Fixed","synthetic":true,"types":[]},{"text":"impl Freeze for FixedClass","synthetic":true,"types":[]},{"text":"impl Freeze for FixedBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FlowBox","synthetic":true,"types":[]},{"text":"impl Freeze for FlowBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for FlowBoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FlowBoxChild","synthetic":true,"types":[]},{"text":"impl Freeze for FlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl Freeze for FlowBoxChildBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FontButton","synthetic":true,"types":[]},{"text":"impl Freeze for FontButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooser","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Frame","synthetic":true,"types":[]},{"text":"impl Freeze for FrameClass","synthetic":true,"types":[]},{"text":"impl Freeze for FrameBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Gesture","synthetic":true,"types":[]},{"text":"impl Freeze for GestureClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureDrag","synthetic":true,"types":[]},{"text":"impl Freeze for GestureDragClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureDragBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GestureLongPress","synthetic":true,"types":[]},{"text":"impl Freeze for GestureLongPressClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureLongPressBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GestureMultiPress","synthetic":true,"types":[]},{"text":"impl Freeze for GestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureMultiPressBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GesturePan","synthetic":true,"types":[]},{"text":"impl Freeze for GesturePanClass","synthetic":true,"types":[]},{"text":"impl Freeze for GesturePanBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GestureRotate","synthetic":true,"types":[]},{"text":"impl Freeze for GestureRotateClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureRotateBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GestureSingle","synthetic":true,"types":[]},{"text":"impl Freeze for GestureSingleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureSwipe","synthetic":true,"types":[]},{"text":"impl Freeze for GestureSwipeClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureSwipeBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GestureZoom","synthetic":true,"types":[]},{"text":"impl Freeze for GestureZoomClass","synthetic":true,"types":[]},{"text":"impl Freeze for GestureZoomBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Grid","synthetic":true,"types":[]},{"text":"impl Freeze for GridClass","synthetic":true,"types":[]},{"text":"impl Freeze for GridBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderBar","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for IMContext","synthetic":true,"types":[]},{"text":"impl Freeze for IMContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for IMContextSimple","synthetic":true,"types":[]},{"text":"impl Freeze for IMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl Freeze for IMContextSimpleBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for IMMulticontext","synthetic":true,"types":[]},{"text":"impl Freeze for IMMulticontextClass","synthetic":true,"types":[]},{"text":"impl Freeze for IMMulticontextBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for IconInfo","synthetic":true,"types":[]},{"text":"impl Freeze for IconInfoClass","synthetic":true,"types":[]},{"text":"impl Freeze for IconTheme","synthetic":true,"types":[]},{"text":"impl Freeze for IconThemeClass","synthetic":true,"types":[]},{"text":"impl Freeze for IconView","synthetic":true,"types":[]},{"text":"impl Freeze for IconViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for IconViewBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Image","synthetic":true,"types":[]},{"text":"impl Freeze for ImageClass","synthetic":true,"types":[]},{"text":"impl Freeze for ImageBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for InfoBar","synthetic":true,"types":[]},{"text":"impl Freeze for InfoBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for InfoBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Invisible","synthetic":true,"types":[]},{"text":"impl Freeze for InvisibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for InvisibleBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for LabelClass","synthetic":true,"types":[]},{"text":"impl Freeze for LabelBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Layout","synthetic":true,"types":[]},{"text":"impl Freeze for LayoutClass","synthetic":true,"types":[]},{"text":"impl Freeze for LayoutBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for LevelBar","synthetic":true,"types":[]},{"text":"impl Freeze for LevelBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for LevelBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for LinkButton","synthetic":true,"types":[]},{"text":"impl Freeze for LinkButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for LinkButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ListBox","synthetic":true,"types":[]},{"text":"impl Freeze for ListBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for ListBoxBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ListBoxRow","synthetic":true,"types":[]},{"text":"impl Freeze for ListBoxRowClass","synthetic":true,"types":[]},{"text":"impl Freeze for ListBoxRowBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ListStore","synthetic":true,"types":[]},{"text":"impl Freeze for ListStoreClass","synthetic":true,"types":[]},{"text":"impl Freeze for LockButton","synthetic":true,"types":[]},{"text":"impl Freeze for LockButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for LockButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Menu","synthetic":true,"types":[]},{"text":"impl Freeze for MenuClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MenuBar","synthetic":true,"types":[]},{"text":"impl Freeze for MenuBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MenuButton","synthetic":true,"types":[]},{"text":"impl Freeze for MenuButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for MenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuItemBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MenuShell","synthetic":true,"types":[]},{"text":"impl Freeze for MenuShellClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for MenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for MenuToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for MessageDialog","synthetic":true,"types":[]},{"text":"impl Freeze for MessageDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for MessageDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Misc","synthetic":true,"types":[]},{"text":"impl Freeze for MiscClass","synthetic":true,"types":[]},{"text":"impl Freeze for MountOperation","synthetic":true,"types":[]},{"text":"impl Freeze for MountOperationClass","synthetic":true,"types":[]},{"text":"impl Freeze for MountOperationBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Notebook","synthetic":true,"types":[]},{"text":"impl Freeze for NotebookClass","synthetic":true,"types":[]},{"text":"impl Freeze for NotebookBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for OffscreenWindow","synthetic":true,"types":[]},{"text":"impl Freeze for OffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for OffscreenWindowBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Orientable","synthetic":true,"types":[]},{"text":"impl Freeze for Overlay","synthetic":true,"types":[]},{"text":"impl Freeze for OverlayClass","synthetic":true,"types":[]},{"text":"impl Freeze for OverlayBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for PageSetup","synthetic":true,"types":[]},{"text":"impl Freeze for PageSetupClass","synthetic":true,"types":[]},{"text":"impl Freeze for Paned","synthetic":true,"types":[]},{"text":"impl Freeze for PanedClass","synthetic":true,"types":[]},{"text":"impl Freeze for PanedBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for PlacesSidebar","synthetic":true,"types":[]},{"text":"impl Freeze for PlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl Freeze for PlacesSidebarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Plug","synthetic":true,"types":[]},{"text":"impl Freeze for PlugClass","synthetic":true,"types":[]},{"text":"impl Freeze for PlugBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Popover","synthetic":true,"types":[]},{"text":"impl Freeze for PopoverClass","synthetic":true,"types":[]},{"text":"impl Freeze for PopoverBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for PrintContext","synthetic":true,"types":[]},{"text":"impl Freeze for PrintContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for PrintOperation","synthetic":true,"types":[]},{"text":"impl Freeze for PrintOperationClass","synthetic":true,"types":[]},{"text":"impl Freeze for PrintOperationBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for PrintOperationPreview","synthetic":true,"types":[]},{"text":"impl Freeze for PrintSettings","synthetic":true,"types":[]},{"text":"impl Freeze for PrintSettingsClass","synthetic":true,"types":[]},{"text":"impl Freeze for ProgressBar","synthetic":true,"types":[]},{"text":"impl Freeze for ProgressBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for ProgressBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RadioButton","synthetic":true,"types":[]},{"text":"impl Freeze for RadioButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for RadioButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RadioMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for RadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for RadioMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RadioToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for RadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for RadioToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Range","synthetic":true,"types":[]},{"text":"impl Freeze for RangeClass","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooser","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserDialogBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserMenu","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserMenuBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserWidgetBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RecentFilter","synthetic":true,"types":[]},{"text":"impl Freeze for RecentFilterClass","synthetic":true,"types":[]},{"text":"impl Freeze for RecentManager","synthetic":true,"types":[]},{"text":"impl Freeze for RecentManagerClass","synthetic":true,"types":[]},{"text":"impl Freeze for RecentManagerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Revealer","synthetic":true,"types":[]},{"text":"impl Freeze for RevealerClass","synthetic":true,"types":[]},{"text":"impl Freeze for RevealerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Scale","synthetic":true,"types":[]},{"text":"impl Freeze for ScaleClass","synthetic":true,"types":[]},{"text":"impl Freeze for ScaleBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ScaleButton","synthetic":true,"types":[]},{"text":"impl Freeze for ScaleButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for ScaleButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Scrollable","synthetic":true,"types":[]},{"text":"impl Freeze for Scrollbar","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollbarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ScrolledWindow","synthetic":true,"types":[]},{"text":"impl Freeze for ScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for ScrolledWindowBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SearchBar","synthetic":true,"types":[]},{"text":"impl Freeze for SearchBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for SearchBarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SearchEntry","synthetic":true,"types":[]},{"text":"impl Freeze for SearchEntryClass","synthetic":true,"types":[]},{"text":"impl Freeze for SearchEntryBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Separator","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorClass","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorMenuItemBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorToolItem","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorToolItemBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Settings","synthetic":true,"types":[]},{"text":"impl Freeze for SettingsClass","synthetic":true,"types":[]},{"text":"impl Freeze for SizeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for SizeGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for SizeGroupBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Socket","synthetic":true,"types":[]},{"text":"impl Freeze for SocketClass","synthetic":true,"types":[]},{"text":"impl Freeze for SocketBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for SpinButton","synthetic":true,"types":[]},{"text":"impl Freeze for SpinButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for SpinButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Spinner","synthetic":true,"types":[]},{"text":"impl Freeze for SpinnerClass","synthetic":true,"types":[]},{"text":"impl Freeze for SpinnerBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Stack","synthetic":true,"types":[]},{"text":"impl Freeze for StackClass","synthetic":true,"types":[]},{"text":"impl Freeze for StackBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for StackSwitcher","synthetic":true,"types":[]},{"text":"impl Freeze for StackSwitcherClass","synthetic":true,"types":[]},{"text":"impl Freeze for StackSwitcherBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Statusbar","synthetic":true,"types":[]},{"text":"impl Freeze for StatusbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for StatusbarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for StyleContext","synthetic":true,"types":[]},{"text":"impl Freeze for StyleContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for StyleContextBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for StyleProperties","synthetic":true,"types":[]},{"text":"impl Freeze for StylePropertiesClass","synthetic":true,"types":[]},{"text":"impl Freeze for StyleProvider","synthetic":true,"types":[]},{"text":"impl Freeze for Switch","synthetic":true,"types":[]},{"text":"impl Freeze for SwitchClass","synthetic":true,"types":[]},{"text":"impl Freeze for SwitchBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TextBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for TextBufferClass","synthetic":true,"types":[]},{"text":"impl Freeze for TextBufferBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TextChildAnchor","synthetic":true,"types":[]},{"text":"impl Freeze for TextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl Freeze for TextMark","synthetic":true,"types":[]},{"text":"impl Freeze for TextMarkClass","synthetic":true,"types":[]},{"text":"impl Freeze for TextMarkBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TextTag","synthetic":true,"types":[]},{"text":"impl Freeze for TextTagClass","synthetic":true,"types":[]},{"text":"impl Freeze for TextTagBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TextTagTable","synthetic":true,"types":[]},{"text":"impl Freeze for TextTagTableClass","synthetic":true,"types":[]},{"text":"impl Freeze for TextView","synthetic":true,"types":[]},{"text":"impl Freeze for TextViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for TextViewBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToggleButton","synthetic":true,"types":[]},{"text":"impl Freeze for ToggleButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToggleButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToggleToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for ToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToggleToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for ToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToolButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToolItem","synthetic":true,"types":[]},{"text":"impl Freeze for ToolItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToolItemBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToolItemGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToolItemGroupBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToolPalette","synthetic":true,"types":[]},{"text":"impl Freeze for ToolPaletteClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToolPaletteBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for ToolShell","synthetic":true,"types":[]},{"text":"impl Freeze for Toolbar","synthetic":true,"types":[]},{"text":"impl Freeze for ToolbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for ToolbarBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Tooltip","synthetic":true,"types":[]},{"text":"impl Freeze for TooltipClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeDragDest","synthetic":true,"types":[]},{"text":"impl Freeze for TreeDragSource","synthetic":true,"types":[]},{"text":"impl Freeze for TreeModel","synthetic":true,"types":[]},{"text":"impl Freeze for TreeModelFilter","synthetic":true,"types":[]},{"text":"impl Freeze for TreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeModelSort","synthetic":true,"types":[]},{"text":"impl Freeze for TreeModelSortClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeSelection","synthetic":true,"types":[]},{"text":"impl Freeze for TreeSelectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeSortable","synthetic":true,"types":[]},{"text":"impl Freeze for TreeStore","synthetic":true,"types":[]},{"text":"impl Freeze for TreeStoreClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeView","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewColumn","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewColumnBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Viewport","synthetic":true,"types":[]},{"text":"impl Freeze for ViewportClass","synthetic":true,"types":[]},{"text":"impl Freeze for ViewportBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for VolumeButton","synthetic":true,"types":[]},{"text":"impl Freeze for VolumeButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for VolumeButtonBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Widget","synthetic":true,"types":[]},{"text":"impl Freeze for WidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for Window","synthetic":true,"types":[]},{"text":"impl Freeze for WindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for WindowBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for WindowGroup","synthetic":true,"types":[]},{"text":"impl Freeze for WindowGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for CssSection","synthetic":true,"types":[]},{"text":"impl Freeze for PaperSize","synthetic":true,"types":[]},{"text":"impl Freeze for RecentInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SelectionData","synthetic":true,"types":[]},{"text":"impl Freeze for TargetList","synthetic":true,"types":[]},{"text":"impl Freeze for TextAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for TextIter","synthetic":true,"types":[]},{"text":"impl Freeze for TreeIter","synthetic":true,"types":[]},{"text":"impl Freeze for TreePath","synthetic":true,"types":[]},{"text":"impl Freeze for TreeRowReference","synthetic":true,"types":[]},{"text":"impl Freeze for WidgetPath","synthetic":true,"types":[]},{"text":"impl Freeze for Align","synthetic":true,"types":[]},{"text":"impl Freeze for ArrowType","synthetic":true,"types":[]},{"text":"impl Freeze for AssistantPageType","synthetic":true,"types":[]},{"text":"impl Freeze for BaselinePosition","synthetic":true,"types":[]},{"text":"impl Freeze for BorderStyle","synthetic":true,"types":[]},{"text":"impl Freeze for BuilderError","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonBoxStyle","synthetic":true,"types":[]},{"text":"impl Freeze for ButtonsType","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererAccelMode","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererMode","synthetic":true,"types":[]},{"text":"impl Freeze for CornerType","synthetic":true,"types":[]},{"text":"impl Freeze for CssProviderError","synthetic":true,"types":[]},{"text":"impl Freeze for CssSectionType","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteType","synthetic":true,"types":[]},{"text":"impl Freeze for DirectionType","synthetic":true,"types":[]},{"text":"impl Freeze for DragResult","synthetic":true,"types":[]},{"text":"impl Freeze for EntryIconPosition","synthetic":true,"types":[]},{"text":"impl Freeze for EventSequenceState","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserAction","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserConfirmation","synthetic":true,"types":[]},{"text":"impl Freeze for FileChooserError","synthetic":true,"types":[]},{"text":"impl Freeze for IMPreeditStyle","synthetic":true,"types":[]},{"text":"impl Freeze for IMStatusStyle","synthetic":true,"types":[]},{"text":"impl Freeze for IconSize","synthetic":true,"types":[]},{"text":"impl Freeze for IconThemeError","synthetic":true,"types":[]},{"text":"impl Freeze for IconViewDropPosition","synthetic":true,"types":[]},{"text":"impl Freeze for ImageType","synthetic":true,"types":[]},{"text":"impl Freeze for InputPurpose","synthetic":true,"types":[]},{"text":"impl Freeze for Justification","synthetic":true,"types":[]},{"text":"impl Freeze for LevelBarMode","synthetic":true,"types":[]},{"text":"impl Freeze for License","synthetic":true,"types":[]},{"text":"impl Freeze for MenuDirectionType","synthetic":true,"types":[]},{"text":"impl Freeze for MessageType","synthetic":true,"types":[]},{"text":"impl Freeze for MovementStep","synthetic":true,"types":[]},{"text":"impl Freeze for NotebookTab","synthetic":true,"types":[]},{"text":"impl Freeze for NumberUpLayout","synthetic":true,"types":[]},{"text":"impl Freeze for Orientation","synthetic":true,"types":[]},{"text":"impl Freeze for PackDirection","synthetic":true,"types":[]},{"text":"impl Freeze for PackType","synthetic":true,"types":[]},{"text":"impl Freeze for PageOrientation","synthetic":true,"types":[]},{"text":"impl Freeze for PageSet","synthetic":true,"types":[]},{"text":"impl Freeze for PanDirection","synthetic":true,"types":[]},{"text":"impl Freeze for PolicyType","synthetic":true,"types":[]},{"text":"impl Freeze for PositionType","synthetic":true,"types":[]},{"text":"impl Freeze for PrintDuplex","synthetic":true,"types":[]},{"text":"impl Freeze for PrintError","synthetic":true,"types":[]},{"text":"impl Freeze for PrintOperationAction","synthetic":true,"types":[]},{"text":"impl Freeze for PrintOperationResult","synthetic":true,"types":[]},{"text":"impl Freeze for PrintPages","synthetic":true,"types":[]},{"text":"impl Freeze for PrintQuality","synthetic":true,"types":[]},{"text":"impl Freeze for PrintStatus","synthetic":true,"types":[]},{"text":"impl Freeze for PropagationPhase","synthetic":true,"types":[]},{"text":"impl Freeze for RecentChooserError","synthetic":true,"types":[]},{"text":"impl Freeze for RecentManagerError","synthetic":true,"types":[]},{"text":"impl Freeze for RecentSortType","synthetic":true,"types":[]},{"text":"impl Freeze for ReliefStyle","synthetic":true,"types":[]},{"text":"impl Freeze for ResizeMode","synthetic":true,"types":[]},{"text":"impl Freeze for RevealerTransitionType","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollStep","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollType","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollablePolicy","synthetic":true,"types":[]},{"text":"impl Freeze for SelectionMode","synthetic":true,"types":[]},{"text":"impl Freeze for SensitivityType","synthetic":true,"types":[]},{"text":"impl Freeze for ShadowType","synthetic":true,"types":[]},{"text":"impl Freeze for SizeGroupMode","synthetic":true,"types":[]},{"text":"impl Freeze for SizeRequestMode","synthetic":true,"types":[]},{"text":"impl Freeze for SortType","synthetic":true,"types":[]},{"text":"impl Freeze for SpinButtonUpdatePolicy","synthetic":true,"types":[]},{"text":"impl Freeze for SpinType","synthetic":true,"types":[]},{"text":"impl Freeze for StackTransitionType","synthetic":true,"types":[]},{"text":"impl Freeze for StateType","synthetic":true,"types":[]},{"text":"impl Freeze for TextDirection","synthetic":true,"types":[]},{"text":"impl Freeze for TextViewLayer","synthetic":true,"types":[]},{"text":"impl Freeze for TextWindowType","synthetic":true,"types":[]},{"text":"impl Freeze for ToolbarStyle","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewColumnSizing","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewDropPosition","synthetic":true,"types":[]},{"text":"impl Freeze for TreeViewGridLines","synthetic":true,"types":[]},{"text":"impl Freeze for Unit","synthetic":true,"types":[]},{"text":"impl Freeze for WidgetHelpType","synthetic":true,"types":[]},{"text":"impl Freeze for WindowPosition","synthetic":true,"types":[]},{"text":"impl Freeze for WindowType","synthetic":true,"types":[]},{"text":"impl Freeze for WrapMode","synthetic":true,"types":[]},{"text":"impl Freeze for AccelFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ApplicationInhibitFlags","synthetic":true,"types":[]},{"text":"impl Freeze for CalendarDisplayOptions","synthetic":true,"types":[]},{"text":"impl Freeze for CellRendererState","synthetic":true,"types":[]},{"text":"impl Freeze for DestDefaults","synthetic":true,"types":[]},{"text":"impl Freeze for DialogFlags","synthetic":true,"types":[]},{"text":"impl Freeze for FileFilterFlags","synthetic":true,"types":[]},{"text":"impl Freeze for IconLookupFlags","synthetic":true,"types":[]},{"text":"impl Freeze for InputHints","synthetic":true,"types":[]},{"text":"impl Freeze for JunctionSides","synthetic":true,"types":[]},{"text":"impl Freeze for PlacesOpenFlags","synthetic":true,"types":[]},{"text":"impl Freeze for RecentFilterFlags","synthetic":true,"types":[]},{"text":"impl Freeze for RegionFlags","synthetic":true,"types":[]},{"text":"impl Freeze for StateFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TargetFlags","synthetic":true,"types":[]},{"text":"impl Freeze for TextSearchFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ToolPaletteDragTargets","synthetic":true,"types":[]},{"text":"impl Freeze for TreeModelFlags","synthetic":true,"types":[]},{"text":"impl Freeze for AppChooser","synthetic":true,"types":[]},{"text":"impl Freeze for Border","synthetic":true,"types":[]},{"text":"impl Freeze for EntryBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for PageRange","synthetic":true,"types":[]},{"text":"impl Freeze for RecentData","synthetic":true,"types":[]},{"text":"impl Freeze for Requisition","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseType","synthetic":true,"types":[]},{"text":"impl Freeze for TargetEntry","synthetic":true,"types":[]},{"text":"impl Freeze for SortColumn","synthetic":true,"types":[]},{"text":"impl Freeze for TickCallbackId","synthetic":true,"types":[]}];
implementors["gtk_sys"] = [{"text":"impl Freeze for GtkBindingArg_d","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextAppearance_u1","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextAttributes_u1","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAboutDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAboutDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelGroupEntry","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAccelGroupPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelKey","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelLabelClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAccelLabelPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAccelMapClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkActionBarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkActionGroupPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkActionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionableInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActivatableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAdjustmentClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAdjustmentPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAlignmentClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAlignmentPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooserButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAppChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAppChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAppChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkApplicationClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkApplicationPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkApplicationWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkApplicationWindowPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkArrowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkArrowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkArrowClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkArrowPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAspectFrameClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAspectFramePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAssistantClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkAssistantPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBinClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkBinPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBindingArg","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBindingEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBindingSet","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBindingSignal","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBooleanCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkBooleanCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBorder","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkBoxPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBuildableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBuilderClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkBuilderPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkButtonBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkButtonBoxPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCalendarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCalendarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAccessibleParentIface","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAreaBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellAreaBoxPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAreaClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAreaContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellAreaContextPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellAreaPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellEditableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellLayoutIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererAccelClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererAccelPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererClassPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererComboClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererComboPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererPixbufClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererPixbufPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererProgressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererProgressPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererSpinClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererSpinPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererSpinnerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererTextClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererTextPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererToggleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellRendererTogglePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCellViewPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCheckButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCheckMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCheckMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCheckMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCheckMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkColorButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkColorChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorChooserInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkColorChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorSelectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkColorSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkColorSelectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkComboBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkComboBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkComboBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkComboBoxPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkComboBoxTextClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkComboBoxTextPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkContainerAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkContainerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkContainerCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkContainerCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkContainerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkContainerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCssProviderClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkCssProviderPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCssSection","synthetic":true,"types":[]},{"text":"impl Freeze for GtkDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkDrawingAreaClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEditableInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEntryAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryBufferClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEntryBufferPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryCompletionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEntryCompletionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEntryPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEventBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEventBoxPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEventControllerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEventControllerKeyClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEventControllerMotionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkEventControllerScrollClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkExpanderAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkExpanderAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkExpanderClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkExpanderPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFileChooserButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFileChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserNativeClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFileChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileFilterInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFixedChild","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFixedClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFixedPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFlowBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxChildAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxChildClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFontButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFontChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontChooserIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFontChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontSelectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontSelectionDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFontSelectionDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFontSelectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFrameAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFrameAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFrameClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkFramePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGLAreaClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureDragClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureLongPressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureMultiPressClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGesturePanClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureRotateClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureSingleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureStylusClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureSwipeClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGestureZoomClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGradient","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGridClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkGridPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHButtonBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHPanedClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHSVClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkHSVPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHScaleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHScrollbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHSeparatorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHandleBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkHandleBoxPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHeaderBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkHeaderBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHeaderBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkHeaderBarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMContextInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMContextSimpleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIMContextSimplePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMMulticontextClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIMMulticontextPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconFactoryClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIconFactoryPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIconInfoClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconSet","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconSource","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconThemeClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIconThemePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIconViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkIconViewPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkImageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkImageCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkImageMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkImagePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkInfoBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkInfoBarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkInvisibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkInvisiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLabelAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLabelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLabelClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLabelPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLabelSelectionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLayoutClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLayoutPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLevelBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLevelBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLevelBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLevelBarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLinkButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLinkButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLinkButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLinkButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkListBoxAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxRowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxRowClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListStoreClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkListStorePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLockButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLockButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLockButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkLockButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuBarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuShellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuShellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuShellClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuShellPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMenuToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMessageDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMessageDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMiscClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMiscPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMountOperationClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkMountOperationPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNativeDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNotebookAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkNotebookAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNotebookClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNotebookPageAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkNotebookPageAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkNotebookPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNumerableIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkNumerableIconPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkOffscreenWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkOrientableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkOverlayClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkOverlayPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPadActionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPadControllerClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPageRange","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPanedAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPanedAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPanedClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPanedPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPaperSize","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPlacesSidebarClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPlugClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPlugPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPopoverAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPopoverClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPopoverMenuClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPopoverPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPrintOperationClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPrintOperationPreviewIface","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkPrintOperationPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkProgressBarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkProgressBarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkProgressBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkProgressBarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioActionClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioActionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRadioActionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRadioButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRadioButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioMenuItemAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRadioMenuItemAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRadioMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRangeAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRangeAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRangeClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRangePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRcContext","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRcProperty","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRcStyleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentActionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRecentActionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserDialogClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRecentChooserDialogPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserMenuClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRecentChooserMenuPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRecentChooserWidgetPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentData","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentFilterInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentManagerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRecentManagerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRendererCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkRendererCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRequestedSize","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRequisition","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRevealerClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkScaleAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkScaleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkScaleButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkScalePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrollableInterface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrollbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrolledWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkScrolledWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrolledWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkScrolledWindowPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSearchBarClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSearchEntryClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSelectionData","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSeparatorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSeparatorMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSeparatorPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSeparatorToolItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSeparatorToolItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSettingsClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSettingsPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSettingsValue","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkShortcutLabelClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkShortcutsGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkShortcutsSectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkShortcutsShortcutClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkShortcutsWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSizeGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSizeGroupPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSocketClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSocketPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSpinButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSpinButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinnerAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSpinnerAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinnerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSpinnerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackSidebarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkStackSidebarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackSwitcherClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStatusIconClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkStatusIconPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStatusbarAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkStatusbarAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStatusbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkStatusbarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStockItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyleContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkStyleContextPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStylePropertiesClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkStylePropertiesPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyleProviderIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSwitchAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSwitchAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSwitchClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkSwitchPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSymbolicColor","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTableChild","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTableClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTablePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTableRowCol","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTargetEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTargetList","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTargetPair","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTearoffMenuItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTearoffMenuItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextAppearance","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextBTree","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextBufferClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextBufferPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextCellAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextCellAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextChildAnchorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextIter","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextMarkClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextTagClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextTagPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextTagTableClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextTagTablePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTextViewPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkThemeEngine","synthetic":true,"types":[]},{"text":"impl Freeze for GtkThemingEngineClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkThemingEnginePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleActionClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleActionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToggleActionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleButtonAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToggleButtonAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToggleButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToggleToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToolButtonPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolItemClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolItemGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToolItemGroupPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToolItemPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolPaletteClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToolPalettePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolShellIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToolbarPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToplevelAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkToplevelAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeDragDestIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeDragSourceIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeIter","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeModelFilterClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeModelFilterPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeModelIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeModelSortClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeModelSortPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreePath","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeRowReference","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeSelectionClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeSelectionPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeSortableIface","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeStoreClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeStorePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeViewAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeViewAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeViewClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeViewColumnClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeViewColumnPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkTreeViewPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkUIManagerClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkUIManagerPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVButtonBoxClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVPanedClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVScaleClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVScrollbarClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVSeparatorClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkViewportClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkViewportPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVolumeButtonClass","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWidgetAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWidgetAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWidgetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWidgetClassPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWidgetPath","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWidgetPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWindowAccessibleClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWindowAccessiblePrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWindowClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWindowGeometryInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWindowGroupClass","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWindowGroupPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for _GtkWindowPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAboutDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelLabel","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccelMap","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAction","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAdjustment","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAlignment","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooserButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for GtkApplication","synthetic":true,"types":[]},{"text":"impl Freeze for GtkApplicationWindow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkArrow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkArrowAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAspectFrame","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAssistant","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBin","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBooleanCellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for GtkButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkButtonBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCalendar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellArea","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAreaBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAreaContext","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRenderer","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererAccel","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererCombo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererPixbuf","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererProgress","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererSpin","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererSpinner","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererText","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellRendererToggle","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellView","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCheckButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCheckMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCheckMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkClipboard","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorSelection","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorSelectionDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkComboBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkComboBoxAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkComboBoxText","synthetic":true,"types":[]},{"text":"impl Freeze for GtkContainer","synthetic":true,"types":[]},{"text":"impl Freeze for GtkContainerAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkContainerCellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCssProvider","synthetic":true,"types":[]},{"text":"impl Freeze for GtkDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkDrawingArea","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryCompletion","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEntryIconAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEventBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEventController","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEventControllerKey","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEventControllerMotion","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEventControllerScroll","synthetic":true,"types":[]},{"text":"impl Freeze for GtkExpander","synthetic":true,"types":[]},{"text":"impl Freeze for GtkExpanderAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserNative","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileFilter","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFixed","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxChild","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFlowBoxChildAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontSelection","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontSelectionDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFrame","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFrameAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGLArea","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGesture","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureDrag","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureLongPress","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureMultiPress","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGesturePan","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureRotate","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureSingle","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureStylus","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureSwipe","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGestureZoom","synthetic":true,"types":[]},{"text":"impl Freeze for GtkGrid","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHButtonBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHPaned","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHSV","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHScale","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHScrollbar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHSeparator","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHandleBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHeaderBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkHeaderBarAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMContext","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMContextSimple","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIMMulticontext","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconFactory","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconTheme","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconView","synthetic":true,"types":[]},{"text":"impl Freeze for GtkIconViewAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImage","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageCellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkImageMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkInfoBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkInvisible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLabel","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLabelAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLayout","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLevelBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLevelBarAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLinkButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLinkButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxRow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListBoxRowAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkListStore","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLockButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkLockButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenu","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuShell","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuShellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMenuToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMessageDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMisc","synthetic":true,"types":[]},{"text":"impl Freeze for GtkModelButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkMountOperation","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNativeDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNotebook","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNotebookAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNotebookPageAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkNumerableIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GtkOffscreenWindow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkOverlay","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPadController","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPageSetup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPaned","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPanedAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPlacesSidebar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPlug","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPopover","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPopoverAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPopoverMenu","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPrintContext","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPrintOperation","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPrintSettings","synthetic":true,"types":[]},{"text":"impl Freeze for GtkProgressBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkProgressBarAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioAction","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioMenuItemAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRadioToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRange","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRangeAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRcStyle","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentAction","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserDialog","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserMenu","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooserWidget","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentFilter","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentManager","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRendererCellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRevealer","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScale","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScaleButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrollbar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrolledWindow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrolledWindowAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSearchBar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSearchEntry","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSeparator","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSeparatorMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSeparatorToolItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSettings","synthetic":true,"types":[]},{"text":"impl Freeze for GtkShortcutLabel","synthetic":true,"types":[]},{"text":"impl Freeze for GtkShortcutsGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkShortcutsSection","synthetic":true,"types":[]},{"text":"impl Freeze for GtkShortcutsShortcut","synthetic":true,"types":[]},{"text":"impl Freeze for GtkShortcutsWindow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSizeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSocket","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinner","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSpinnerAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStack","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackSidebar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStackSwitcher","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStatusIcon","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStatusbar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStatusbarAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyle","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyleContext","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyleProperties","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSwitch","synthetic":true,"types":[]},{"text":"impl Freeze for GtkSwitchAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTearoffMenuItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextBuffer","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextCellAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextChildAnchor","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextMark","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextTag","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextTagTable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextView","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTextViewAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkThemingEngine","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleAction","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleButtonAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToggleToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolItem","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolItemGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolPalette","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolbar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTooltip","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToplevelAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeModelFilter","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeModelSort","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeSelection","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeStore","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeView","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeViewAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeViewColumn","synthetic":true,"types":[]},{"text":"impl Freeze for GtkUIManager","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVButtonBox","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVPaned","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVScale","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVScrollbar","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVSeparator","synthetic":true,"types":[]},{"text":"impl Freeze for GtkViewport","synthetic":true,"types":[]},{"text":"impl Freeze for GtkVolumeButton","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWidget","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWidgetAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWindow","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWindowAccessible","synthetic":true,"types":[]},{"text":"impl Freeze for GtkWindowGroup","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActionable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkActivatable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkAppChooser","synthetic":true,"types":[]},{"text":"impl Freeze for GtkBuildable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellAccessibleParent","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellEditable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkCellLayout","synthetic":true,"types":[]},{"text":"impl Freeze for GtkColorChooser","synthetic":true,"types":[]},{"text":"impl Freeze for GtkEditable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFileChooser","synthetic":true,"types":[]},{"text":"impl Freeze for GtkFontChooser","synthetic":true,"types":[]},{"text":"impl Freeze for GtkOrientable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkPrintOperationPreview","synthetic":true,"types":[]},{"text":"impl Freeze for GtkRecentChooser","synthetic":true,"types":[]},{"text":"impl Freeze for GtkScrollable","synthetic":true,"types":[]},{"text":"impl Freeze for GtkStyleProvider","synthetic":true,"types":[]},{"text":"impl Freeze for GtkToolShell","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeDragDest","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeDragSource","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeModel","synthetic":true,"types":[]},{"text":"impl Freeze for GtkTreeSortable","synthetic":true,"types":[]}];
implementors["h2"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Reason","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for ReadySendRequest&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !Freeze for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseFuture","synthetic":true,"types":[]},{"text":"impl Freeze for PushedResponseFuture","synthetic":true,"types":[]},{"text":"impl !Freeze for PushPromise","synthetic":true,"types":[]},{"text":"impl Freeze for PushPromises","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T, B&nbsp;=&nbsp;Bytes&gt; !Freeze for Handshake&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !Freeze for Connection&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendPushedResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for SendStream&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StreamId","synthetic":true,"types":[]},{"text":"impl Freeze for RecvStream","synthetic":true,"types":[]},{"text":"impl Freeze for FlowControl","synthetic":true,"types":[]},{"text":"impl Freeze for PingPong","synthetic":true,"types":[]},{"text":"impl Freeze for Ping","synthetic":true,"types":[]},{"text":"impl Freeze for Pong","synthetic":true,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Freeze for Bucket&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawTable&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RawIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for RawDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for RawIterHash&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Freeze for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Freeze for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawOccupiedEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Freeze for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for IntoIter&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for Drain&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Freeze for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryReserveError","synthetic":true,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Freeze for HeaderMap&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Keys&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Values&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValuesMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for GetAll&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Freeze for Entry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Freeze for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for OccupiedEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValueIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValueIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ValueDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for HeaderName","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidHeaderName","synthetic":true,"types":[]},{"text":"impl !Freeze for HeaderValue","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidHeaderValue","synthetic":true,"types":[]},{"text":"impl Freeze for ToStrError","synthetic":true,"types":[]},{"text":"impl Freeze for Method","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidMethod","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Request&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Parts","synthetic":true,"types":[]},{"text":"impl !Freeze for Builder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Response&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Parts","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for StatusCode","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidStatusCode","synthetic":true,"types":[]},{"text":"impl !Freeze for Authority","synthetic":true,"types":[]},{"text":"impl !Freeze for Builder","synthetic":true,"types":[]},{"text":"impl !Freeze for PathAndQuery","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Port&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Scheme","synthetic":true,"types":[]},{"text":"impl !Freeze for Uri","synthetic":true,"types":[]},{"text":"impl !Freeze for Parts","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidUri","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidUriParts","synthetic":true,"types":[]},{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Extensions","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for Request&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for Response&lt;'headers, 'buf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Freeze for Idna","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Freeze for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Freeze for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for SymmetricDifference&lt;'a, T, S1, S2&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["iovec"] = [{"text":"impl Freeze for IoVec","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, Pred&gt; Freeze for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; Freeze for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Freeze for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Freeze for TakeWhileRef&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Freeze for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for MultiProduct&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; !Freeze for Format&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; !Freeze for FormatWith&lt;'a, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; !Freeze for IntoChunks&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Freeze for Chunk&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Freeze for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; !Freeze for GroupBy&lt;K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for Group&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Freeze for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Freeze for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Freeze for PeekingTakeWhile&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; Freeze for ProcessResults&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Freeze for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Freeze for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Freeze for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; Freeze for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Freeze for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Freeze for Buffer","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for LanguageTag","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Freeze for statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for max_align_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for statfs","synthetic":true,"types":[]},{"text":"impl Freeze for flock","synthetic":true,"types":[]},{"text":"impl Freeze for flock64","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]},{"text":"impl Freeze for stack_t","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for stat64","synthetic":true,"types":[]},{"text":"impl Freeze for statfs64","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs64","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Freeze for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Freeze for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for user","synthetic":true,"types":[]},{"text":"impl Freeze for mcontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for ipc_perm","synthetic":true,"types":[]},{"text":"impl Freeze for shmid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for termios2","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Freeze for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Freeze for ucontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigset_t","synthetic":true,"types":[]},{"text":"impl Freeze for sysinfo","synthetic":true,"types":[]},{"text":"impl Freeze for msqid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for sem_t","synthetic":true,"types":[]},{"text":"impl Freeze for statx","synthetic":true,"types":[]},{"text":"impl Freeze for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Freeze for aiocb","synthetic":true,"types":[]},{"text":"impl Freeze for __exit_status","synthetic":true,"types":[]},{"text":"impl Freeze for __timeval","synthetic":true,"types":[]},{"text":"impl Freeze for glob64_t","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for termios","synthetic":true,"types":[]},{"text":"impl Freeze for mallinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Freeze for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Freeze for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Freeze for nlattr","synthetic":true,"types":[]},{"text":"impl Freeze for rtentry","synthetic":true,"types":[]},{"text":"impl Freeze for timex","synthetic":true,"types":[]},{"text":"impl Freeze for ntptimeval","synthetic":true,"types":[]},{"text":"impl Freeze for regex_t","synthetic":true,"types":[]},{"text":"impl Freeze for utmpx","synthetic":true,"types":[]},{"text":"impl Freeze for fpos64_t","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit64","synthetic":true,"types":[]},{"text":"impl Freeze for glob_t","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for spwd","synthetic":true,"types":[]},{"text":"impl Freeze for dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Freeze for itimerspec","synthetic":true,"types":[]},{"text":"impl Freeze for fsid_t","synthetic":true,"types":[]},{"text":"impl Freeze for packet_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Freeze for if_nameindex","synthetic":true,"types":[]},{"text":"impl Freeze for msginfo","synthetic":true,"types":[]},{"text":"impl Freeze for sembuf","synthetic":true,"types":[]},{"text":"impl Freeze for input_event","synthetic":true,"types":[]},{"text":"impl Freeze for input_id","synthetic":true,"types":[]},{"text":"impl Freeze for input_absinfo","synthetic":true,"types":[]},{"text":"impl Freeze for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Freeze for input_mask","synthetic":true,"types":[]},{"text":"impl Freeze for ff_replay","synthetic":true,"types":[]},{"text":"impl Freeze for ff_trigger","synthetic":true,"types":[]},{"text":"impl Freeze for ff_envelope","synthetic":true,"types":[]},{"text":"impl Freeze for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Freeze for ff_effect","synthetic":true,"types":[]},{"text":"impl Freeze for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Freeze for ucred","synthetic":true,"types":[]},{"text":"impl Freeze for mntent","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Freeze for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for arpd_request","synthetic":true,"types":[]},{"text":"impl Freeze for inotify_event","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_response","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Freeze for regmatch_t","synthetic":true,"types":[]},{"text":"impl Freeze for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_tp","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_j1939","synthetic":true,"types":[]},{"text":"impl Freeze for can_filter","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for dirent64","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Freeze for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Freeze for mq_attr","synthetic":true,"types":[]},{"text":"impl Freeze for __c_anonymous_sockaddr_can_can_addr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_can","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Freeze for can_frame","synthetic":true,"types":[]},{"text":"impl Freeze for canfd_frame","synthetic":true,"types":[]},{"text":"impl Freeze for timezone","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for sched_param","synthetic":true,"types":[]},{"text":"impl Freeze for Dl_info","synthetic":true,"types":[]},{"text":"impl Freeze for lconv","synthetic":true,"types":[]},{"text":"impl Freeze for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for ifaddrs","synthetic":true,"types":[]},{"text":"impl Freeze for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq","synthetic":true,"types":[]},{"text":"impl Freeze for arpreq_old","synthetic":true,"types":[]},{"text":"impl Freeze for arphdr","synthetic":true,"types":[]},{"text":"impl Freeze for mmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for epoll_event","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for utsname","synthetic":true,"types":[]},{"text":"impl Freeze for sigevent","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for DIR","synthetic":true,"types":[]},{"text":"impl Freeze for group","synthetic":true,"types":[]},{"text":"impl Freeze for utimbuf","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit","synthetic":true,"types":[]},{"text":"impl Freeze for rusage","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for itimerval","synthetic":true,"types":[]},{"text":"impl Freeze for tms","synthetic":true,"types":[]},{"text":"impl Freeze for servent","synthetic":true,"types":[]},{"text":"impl Freeze for protoent","synthetic":true,"types":[]},{"text":"impl Freeze for FILE","synthetic":true,"types":[]},{"text":"impl Freeze for fpos_t","synthetic":true,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K, V, S&gt; Freeze for LinkedHashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for Entries&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for OccupiedEntry&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T&gt; !Freeze for Mutex&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T&gt; !Freeze for ReentrantMutex&lt;R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Freeze for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Freeze for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !Freeze for RwLock&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GuardSend","synthetic":true,"types":[]},{"text":"impl Freeze for GuardNoSend","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]}];
implementors["lru_cache"] = [{"text":"impl&lt;K, V, S&gt; Freeze for LruCache&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl Freeze for Mime","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Name&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FromStrError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Params&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Freeze for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Freeze for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Freeze for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Freeze for MinReset","synthetic":true,"types":[]},{"text":"impl Freeze for ZeroReset","synthetic":true,"types":[]},{"text":"impl Freeze for FullReset","synthetic":true,"types":[]},{"text":"impl Freeze for InflateState","synthetic":true,"types":[]},{"text":"impl Freeze for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Freeze for MZFlush","synthetic":true,"types":[]},{"text":"impl Freeze for MZStatus","synthetic":true,"types":[]},{"text":"impl Freeze for MZError","synthetic":true,"types":[]},{"text":"impl Freeze for DataFormat","synthetic":true,"types":[]},{"text":"impl Freeze for StreamResult","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Freeze for PollOpt","synthetic":true,"types":[]},{"text":"impl Freeze for Ready","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl !Freeze for Poll","synthetic":true,"types":[]},{"text":"impl Freeze for Registration","synthetic":true,"types":[]},{"text":"impl Freeze for SetReadiness","synthetic":true,"types":[]},{"text":"impl Freeze for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for EventedFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UnixReady","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpStream","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpListener","synthetic":true,"types":[]},{"text":"impl !Freeze for UdpSocket","synthetic":true,"types":[]}];
implementors["mio_uds"] = [{"text":"impl Freeze for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Freeze for UnixListener","synthetic":true,"types":[]},{"text":"impl Freeze for UnixStream","synthetic":true,"types":[]}];
implementors["net2"] = [{"text":"impl !Freeze for TcpBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for UdpBuilder","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Freeze for FloatErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for ParseFloatError","synthetic":true,"types":[]}];
implementors["object"] = [{"text":"impl Freeze for Architecture","synthetic":true,"types":[]},{"text":"impl Freeze for AddressSize","synthetic":true,"types":[]},{"text":"impl Freeze for BinaryFormat","synthetic":true,"types":[]},{"text":"impl Freeze for SectionKind","synthetic":true,"types":[]},{"text":"impl Freeze for ComdatKind","synthetic":true,"types":[]},{"text":"impl Freeze for SymbolKind","synthetic":true,"types":[]},{"text":"impl Freeze for SymbolScope","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationKind","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationEncoding","synthetic":true,"types":[]},{"text":"impl Freeze for FileFlags","synthetic":true,"types":[]},{"text":"impl Freeze for SectionFlags","synthetic":true,"types":[]},{"text":"impl&lt;Section&gt; Freeze for SymbolFlags&lt;Section&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Endianness","synthetic":true,"types":[]},{"text":"impl Freeze for LittleEndian","synthetic":true,"types":[]},{"text":"impl Freeze for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U16Bytes&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U32Bytes&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U64Bytes&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I16Bytes&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I32Bytes&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I64Bytes&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for Bytes&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for StringTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for File&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for SegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for Segment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for SectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for Section&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for ComdatIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for Comdat&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for ComdatSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for SymbolTable&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for SymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for Symbol&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for DynamicRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for SectionRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ArchiveKind","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ArchiveFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ArchiveMemberIterator&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ArchiveMember&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for CoffFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for SectionTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSegment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSection&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for SymbolTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSymbolTable&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffSymbol&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffComdatIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffComdat&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for CoffComdatSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Freeze for ElfFile&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSegmentIterator&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSegment&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Freeze for SectionTable&lt;'data, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSectionIterator&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSection&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Freeze for SymbolTable&lt;'data, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSymbolTable&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSymbolIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSymbol&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationSections","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfDynamicRelocationIterator&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfSectionRelocationIterator&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfComdatIterator&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfComdat&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Freeze for ElfComdatSectionIterator&lt;'data, 'file, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Freeze for NoteIterator&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Freeze for Note&lt;'data, Elf&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Freeze for MachOFile&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOComdatIterator&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOComdat&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOComdatSectionIterator&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSegmentIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSegment&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSectionIterator&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSection&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Freeze for SymbolTable&lt;'data, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSymbolTable&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSymbolIterator&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachOSymbol&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Freeze for MachORelocationIterator&lt;'data, 'file, Mach&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Pe&gt; Freeze for PeFile&lt;'data, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeComdatIterator&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeComdat&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeComdatSectionIterator&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeSegmentIterator&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeSegment&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeSectionIterator&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Freeze for PeSection&lt;'data, 'file, Pe&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Freeze for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NoDynamicRelocationIterator","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for FileKind","synthetic":true,"types":[]},{"text":"impl Freeze for SectionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for SymbolIndex","synthetic":true,"types":[]},{"text":"impl Freeze for SymbolSection","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SymbolMap&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for SymbolMapName&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ObjectMap&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ObjectMapEntry&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for Import&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for Export&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Freeze for Relocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for CompressedData&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CompressionFormat","synthetic":true,"types":[]},{"text":"impl Freeze for Header","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for FileHeader32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for FileHeader64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SectionHeader32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SectionHeader64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CompressionHeader32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CompressionHeader64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Sym32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Sym64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Syminfo32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Syminfo64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Rel32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Rela32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Rel64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Rela64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ProgramHeader32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ProgramHeader64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Dyn32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Dyn64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for NoteHeader32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for NoteHeader64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FatHeader","synthetic":true,"types":[]},{"text":"impl Freeze for FatArch32","synthetic":true,"types":[]},{"text":"impl Freeze for FatArch64","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for MachHeader32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for MachHeader64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for LoadCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for LcStr&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SegmentCommand32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SegmentCommand64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Section32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Section64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Fvmlib&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for FvmlibCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Dylib&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DylibCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SubFrameworkCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SubClientCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SubUmbrellaCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SubLibraryCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for PreboundDylibCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DylinkerCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ThreadCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for RoutinesCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for RoutinesCommand_64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SymtabCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DysymtabCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DylibTableOfContents&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DylibModule32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DylibModule64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DylibReference&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for TwolevelHintsCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for TwolevelHint&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for PrebindCksumCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UuidCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for RpathCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for LinkeditDataCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for EncryptionInfoCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for EncryptionInfoCommand64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for VersionMinCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BuildVersionCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BuildToolVersion&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DyldInfoCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for LinkerOptionCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SymSegCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for IdentCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for FvmfileCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for EntryPointCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for SourceVersionCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for DataInCodeEntry&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for NoteCommand&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Nlist32&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Nlist64&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Relocation&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ScatteredRelocationInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDosHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageOs2Header","synthetic":true,"types":[]},{"text":"impl Freeze for ImageVxdHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageFileHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDataDirectory","synthetic":true,"types":[]},{"text":"impl Freeze for ImageOptionalHeader32","synthetic":true,"types":[]},{"text":"impl Freeze for ImageRomOptionalHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageOptionalHeader64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageNtHeaders64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageNtHeaders32","synthetic":true,"types":[]},{"text":"impl Freeze for ImageRomHeaders","synthetic":true,"types":[]},{"text":"impl Freeze for Guid","synthetic":true,"types":[]},{"text":"impl Freeze for AnonObjectHeader","synthetic":true,"types":[]},{"text":"impl Freeze for AnonObjectHeaderV2","synthetic":true,"types":[]},{"text":"impl Freeze for AnonObjectHeaderBigobj","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSectionHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSymbol","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSymbolBytes","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSymbolEx","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSymbolExBytes","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAuxSymbolTokenDef","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAuxSymbolFunction","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAuxSymbolFunctionBeginEnd","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAuxSymbolWeak","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAuxSymbolSection","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAuxSymbolCrc","synthetic":true,"types":[]},{"text":"impl Freeze for ImageRelocation","synthetic":true,"types":[]},{"text":"impl Freeze for ImageLinenumber","synthetic":true,"types":[]},{"text":"impl Freeze for ImageBaseRelocation","synthetic":true,"types":[]},{"text":"impl Freeze for ImageArchiveMemberHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageExportDirectory","synthetic":true,"types":[]},{"text":"impl Freeze for ImageImportByName","synthetic":true,"types":[]},{"text":"impl Freeze for ImageTlsDirectory64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageTlsDirectory32","synthetic":true,"types":[]},{"text":"impl Freeze for ImageImportDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for ImageBoundImportDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for ImageBoundForwarderRef","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDelayloadDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for ImageResourceDirectory","synthetic":true,"types":[]},{"text":"impl Freeze for ImageResourceDirectoryEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageResourceDirectoryString","synthetic":true,"types":[]},{"text":"impl Freeze for ImageResourceDirStringU","synthetic":true,"types":[]},{"text":"impl Freeze for ImageResourceDataEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageLoadConfigCodeIntegrity","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDynamicRelocationTable","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDynamicRelocation32","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDynamicRelocation64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDynamicRelocation32V2","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDynamicRelocation64V2","synthetic":true,"types":[]},{"text":"impl Freeze for ImagePrologueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageEpilogueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageLoadConfigDirectory32","synthetic":true,"types":[]},{"text":"impl Freeze for ImageLoadConfigDirectory64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageHotPatchInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ImageHotPatchBase","synthetic":true,"types":[]},{"text":"impl Freeze for ImageHotPatchHashes","synthetic":true,"types":[]},{"text":"impl Freeze for ImageArmRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageArm64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAlpha64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageAlphaRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageEnclaveConfig32","synthetic":true,"types":[]},{"text":"impl Freeze for ImageEnclaveConfig64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageEnclaveImport","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDebugDirectory","synthetic":true,"types":[]},{"text":"impl Freeze for ImageCoffSymbolsHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageDebugMisc","synthetic":true,"types":[]},{"text":"impl Freeze for ImageFunctionEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImageFunctionEntry64","synthetic":true,"types":[]},{"text":"impl Freeze for ImageSeparateDebugHeader","synthetic":true,"types":[]},{"text":"impl Freeze for NonPagedDebugInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ImageArchitectureEntry","synthetic":true,"types":[]},{"text":"impl Freeze for ImportObjectHeader","synthetic":true,"types":[]},{"text":"impl Freeze for ImageCor20Header","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for OnceCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T&gt; !Freeze for Lazy&lt;T, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for OnceCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, F&nbsp;=&nbsp;fn() -&gt; T&gt; !Freeze for Lazy&lt;T, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for OnceBox&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for OnceNonZeroUsize","synthetic":true,"types":[]},{"text":"impl !Freeze for OnceBool","synthetic":true,"types":[]}];
implementors["pango"] = [{"text":"impl Freeze for Context","synthetic":true,"types":[]},{"text":"impl Freeze for ContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for EngineLang","synthetic":true,"types":[]},{"text":"impl Freeze for EngineLangClass","synthetic":true,"types":[]},{"text":"impl Freeze for EngineShape","synthetic":true,"types":[]},{"text":"impl Freeze for EngineShapeClass","synthetic":true,"types":[]},{"text":"impl Freeze for Font","synthetic":true,"types":[]},{"text":"impl Freeze for FontClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontFace","synthetic":true,"types":[]},{"text":"impl Freeze for FontFaceClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontFamily","synthetic":true,"types":[]},{"text":"impl Freeze for FontFamilyClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontMap","synthetic":true,"types":[]},{"text":"impl Freeze for FontMapClass","synthetic":true,"types":[]},{"text":"impl Freeze for Fontset","synthetic":true,"types":[]},{"text":"impl Freeze for FontsetClass","synthetic":true,"types":[]},{"text":"impl Freeze for FontsetSimple","synthetic":true,"types":[]},{"text":"impl Freeze for FontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl Freeze for Layout","synthetic":true,"types":[]},{"text":"impl Freeze for LayoutClass","synthetic":true,"types":[]},{"text":"impl Freeze for Renderer","synthetic":true,"types":[]},{"text":"impl Freeze for RendererClass","synthetic":true,"types":[]},{"text":"impl Freeze for AttrIterator","synthetic":true,"types":[]},{"text":"impl Freeze for AttrList","synthetic":true,"types":[]},{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for Color","synthetic":true,"types":[]},{"text":"impl Freeze for FontDescription","synthetic":true,"types":[]},{"text":"impl Freeze for FontMetrics","synthetic":true,"types":[]},{"text":"impl Freeze for GlyphItem","synthetic":true,"types":[]},{"text":"impl Freeze for GlyphItemIter","synthetic":true,"types":[]},{"text":"impl Freeze for GlyphString","synthetic":true,"types":[]},{"text":"impl Freeze for Item","synthetic":true,"types":[]},{"text":"impl Freeze for LayoutIter","synthetic":true,"types":[]},{"text":"impl Freeze for LayoutLine","synthetic":true,"types":[]},{"text":"impl Freeze for Matrix","synthetic":true,"types":[]},{"text":"impl Freeze for TabArray","synthetic":true,"types":[]},{"text":"impl Freeze for Alignment","synthetic":true,"types":[]},{"text":"impl Freeze for AttrType","synthetic":true,"types":[]},{"text":"impl Freeze for BidiType","synthetic":true,"types":[]},{"text":"impl Freeze for CoverageLevel","synthetic":true,"types":[]},{"text":"impl Freeze for Direction","synthetic":true,"types":[]},{"text":"impl Freeze for EllipsizeMode","synthetic":true,"types":[]},{"text":"impl Freeze for Gravity","synthetic":true,"types":[]},{"text":"impl Freeze for GravityHint","synthetic":true,"types":[]},{"text":"impl Freeze for RenderPart","synthetic":true,"types":[]},{"text":"impl Freeze for Script","synthetic":true,"types":[]},{"text":"impl Freeze for Stretch","synthetic":true,"types":[]},{"text":"impl Freeze for Style","synthetic":true,"types":[]},{"text":"impl Freeze for TabAlign","synthetic":true,"types":[]},{"text":"impl Freeze for Underline","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for Weight","synthetic":true,"types":[]},{"text":"impl Freeze for WrapMode","synthetic":true,"types":[]},{"text":"impl Freeze for FontMask","synthetic":true,"types":[]},{"text":"impl Freeze for Analysis","synthetic":true,"types":[]},{"text":"impl Freeze for AttrClass","synthetic":true,"types":[]},{"text":"impl Freeze for Language","synthetic":true,"types":[]},{"text":"impl Freeze for Rectangle","synthetic":true,"types":[]},{"text":"impl Freeze for GlyphInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GlyphGeometry","synthetic":true,"types":[]},{"text":"impl Freeze for Coverage","synthetic":true,"types":[]}];
implementors["pango_sys"] = [{"text":"impl Freeze for PangoAnalysis","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrColor","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrFloat","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrFontDesc","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrFontFeatures","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrInt","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrIterator","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrLanguage","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrList","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrShape","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrSize","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttrString","synthetic":true,"types":[]},{"text":"impl Freeze for PangoAttribute","synthetic":true,"types":[]},{"text":"impl Freeze for PangoColor","synthetic":true,"types":[]},{"text":"impl Freeze for _PangoContextClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineInfo","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineLangClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineScriptInfo","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineShapeClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontDescription","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontFaceClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontFamilyClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontMapClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontMetrics","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontsetClass","synthetic":true,"types":[]},{"text":"impl Freeze for _PangoFontsetSimpleClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoGlyphGeometry","synthetic":true,"types":[]},{"text":"impl Freeze for PangoGlyphInfo","synthetic":true,"types":[]},{"text":"impl Freeze for PangoGlyphItem","synthetic":true,"types":[]},{"text":"impl Freeze for PangoGlyphItemIter","synthetic":true,"types":[]},{"text":"impl Freeze for PangoGlyphString","synthetic":true,"types":[]},{"text":"impl Freeze for PangoGlyphVisAttr","synthetic":true,"types":[]},{"text":"impl Freeze for PangoIncludedModule","synthetic":true,"types":[]},{"text":"impl Freeze for PangoItem","synthetic":true,"types":[]},{"text":"impl Freeze for PangoLanguage","synthetic":true,"types":[]},{"text":"impl Freeze for _PangoLayoutClass","synthetic":true,"types":[]},{"text":"impl Freeze for PangoLayoutIter","synthetic":true,"types":[]},{"text":"impl Freeze for PangoLayoutLine","synthetic":true,"types":[]},{"text":"impl Freeze for PangoLogAttr","synthetic":true,"types":[]},{"text":"impl Freeze for _PangoMap","synthetic":true,"types":[]},{"text":"impl Freeze for _PangoMapEntry","synthetic":true,"types":[]},{"text":"impl Freeze for PangoMatrix","synthetic":true,"types":[]},{"text":"impl Freeze for PangoRectangle","synthetic":true,"types":[]},{"text":"impl Freeze for PangoRendererClass","synthetic":true,"types":[]},{"text":"impl Freeze for _PangoRendererPrivate","synthetic":true,"types":[]},{"text":"impl Freeze for PangoScriptIter","synthetic":true,"types":[]},{"text":"impl Freeze for PangoTabArray","synthetic":true,"types":[]},{"text":"impl Freeze for PangoContext","synthetic":true,"types":[]},{"text":"impl Freeze for PangoCoverage","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngine","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineLang","synthetic":true,"types":[]},{"text":"impl Freeze for PangoEngineShape","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFont","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontFace","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontFamily","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontMap","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontset","synthetic":true,"types":[]},{"text":"impl Freeze for PangoFontsetSimple","synthetic":true,"types":[]},{"text":"impl Freeze for PangoLayout","synthetic":true,"types":[]},{"text":"impl Freeze for PangoRenderer","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Freeze for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl !Freeze for Condvar","synthetic":true,"types":[]},{"text":"impl Freeze for OnceState","synthetic":true,"types":[]},{"text":"impl !Freeze for Once","synthetic":true,"types":[]},{"text":"impl !Freeze for RawFairMutex","synthetic":true,"types":[]},{"text":"impl !Freeze for RawMutex","synthetic":true,"types":[]},{"text":"impl !Freeze for RawRwLock","synthetic":true,"types":[]},{"text":"impl Freeze for RawThreadId","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for ParkResult","synthetic":true,"types":[]},{"text":"impl Freeze for UnparkResult","synthetic":true,"types":[]},{"text":"impl Freeze for RequeueOp","synthetic":true,"types":[]},{"text":"impl Freeze for FilterOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnparkToken","synthetic":true,"types":[]},{"text":"impl Freeze for ParkToken","synthetic":true,"types":[]},{"text":"impl Freeze for SpinWait","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for YesS3","synthetic":true,"types":[]},{"text":"impl Freeze for NoS3","synthetic":true,"types":[]},{"text":"impl Freeze for YesS4","synthetic":true,"types":[]},{"text":"impl Freeze for NoS4","synthetic":true,"types":[]},{"text":"impl Freeze for YesA1","synthetic":true,"types":[]},{"text":"impl Freeze for NoA1","synthetic":true,"types":[]},{"text":"impl Freeze for YesA2","synthetic":true,"types":[]},{"text":"impl Freeze for NoA2","synthetic":true,"types":[]},{"text":"impl Freeze for YesNI","synthetic":true,"types":[]},{"text":"impl Freeze for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for SseMachine&lt;S3, S4, NI&gt;","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Freeze for Avx2Machine&lt;NI&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for vec128_storage","synthetic":true,"types":[]},{"text":"impl Freeze for vec256_storage","synthetic":true,"types":[]},{"text":"impl Freeze for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for TokenStream","synthetic":true,"types":[]},{"text":"impl Freeze for LexError","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for TokenTree","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Delimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Punct","synthetic":true,"types":[]},{"text":"impl Freeze for Spacing","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for Diagnostic","synthetic":true,"types":[]},{"text":"impl Freeze for SpanRange","synthetic":true,"types":[]}];
implementors["quick_error"] = [{"text":"impl&lt;X, E&gt; Freeze for Context&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["quick_xml"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytesStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytesDecl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytesEnd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytesText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Reader&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Freeze for Bernoulli","synthetic":true,"types":[]},{"text":"impl Freeze for BernoulliError","synthetic":true,"types":[]},{"text":"impl Freeze for Binomial","synthetic":true,"types":[]},{"text":"impl Freeze for Cauchy","synthetic":true,"types":[]},{"text":"impl Freeze for Dirichlet","synthetic":true,"types":[]},{"text":"impl Freeze for Exp1","synthetic":true,"types":[]},{"text":"impl Freeze for Exp","synthetic":true,"types":[]},{"text":"impl Freeze for Gamma","synthetic":true,"types":[]},{"text":"impl Freeze for ChiSquared","synthetic":true,"types":[]},{"text":"impl Freeze for FisherF","synthetic":true,"types":[]},{"text":"impl Freeze for StudentT","synthetic":true,"types":[]},{"text":"impl Freeze for Beta","synthetic":true,"types":[]},{"text":"impl Freeze for StandardNormal","synthetic":true,"types":[]},{"text":"impl Freeze for Normal","synthetic":true,"types":[]},{"text":"impl Freeze for LogNormal","synthetic":true,"types":[]},{"text":"impl Freeze for Pareto","synthetic":true,"types":[]},{"text":"impl Freeze for Poisson","synthetic":true,"types":[]},{"text":"impl Freeze for Triangular","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UniformDuration","synthetic":true,"types":[]},{"text":"impl Freeze for UnitCircle","synthetic":true,"types":[]},{"text":"impl Freeze for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl Freeze for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Freeze for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for WeightedError","synthetic":true,"types":[]},{"text":"impl Freeze for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Freeze for Open01","synthetic":true,"types":[]},{"text":"impl Freeze for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Freeze for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Freeze for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for EntropyRng","synthetic":true,"types":[]},{"text":"impl Freeze for StepRng","synthetic":true,"types":[]},{"text":"impl Freeze for StdRng","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadRng","synthetic":true,"types":[]},{"text":"impl Freeze for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Freeze for SliceChooseIter&lt;'a, S, T&gt;","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Freeze for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Freeze for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Freeze for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for OsRng","synthetic":true,"types":[]}];
implementors["regex"] = [{"text":"impl Freeze for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Freeze for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Freeze for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for NoExpand&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for RegexSet","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatches","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for RegexBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for RegexSetBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for RegexSet","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatches","synthetic":true,"types":[]},{"text":"impl Freeze for SetMatchesIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SetMatchesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Match&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Regex","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Freeze for CaptureNames&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Split&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for SplitN&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureLocations","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for Captures&lt;'t&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 't&gt; Freeze for SubCaptureMatches&lt;'c, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for CaptureMatches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r, 't&gt; Freeze for Matches&lt;'r, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized&gt; Freeze for ReplacerRef&lt;'a, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'t&gt; Freeze for NoExpand&lt;'t&gt;","synthetic":true,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Freeze for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Parser","synthetic":true,"types":[]},{"text":"impl Freeze for Printer","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for WithComments","synthetic":true,"types":[]},{"text":"impl Freeze for Comment","synthetic":true,"types":[]},{"text":"impl Freeze for Ast","synthetic":true,"types":[]},{"text":"impl Freeze for Alternation","synthetic":true,"types":[]},{"text":"impl Freeze for Concat","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for LiteralKind","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialLiteralKind","synthetic":true,"types":[]},{"text":"impl Freeze for HexLiteralKind","synthetic":true,"types":[]},{"text":"impl Freeze for Class","synthetic":true,"types":[]},{"text":"impl Freeze for ClassPerl","synthetic":true,"types":[]},{"text":"impl Freeze for ClassPerlKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassAscii","synthetic":true,"types":[]},{"text":"impl Freeze for ClassAsciiKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicode","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicodeKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicodeOpKind","synthetic":true,"types":[]},{"text":"impl Freeze for ClassBracketed","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSet","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetItem","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetRange","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetUnion","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetBinaryOp","synthetic":true,"types":[]},{"text":"impl Freeze for ClassSetBinaryOpKind","synthetic":true,"types":[]},{"text":"impl Freeze for Assertion","synthetic":true,"types":[]},{"text":"impl Freeze for AssertionKind","synthetic":true,"types":[]},{"text":"impl Freeze for Repetition","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionOp","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for GroupKind","synthetic":true,"types":[]},{"text":"impl Freeze for CaptureName","synthetic":true,"types":[]},{"text":"impl Freeze for SetFlags","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsItem","synthetic":true,"types":[]},{"text":"impl Freeze for FlagsItemKind","synthetic":true,"types":[]},{"text":"impl Freeze for Flag","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Literals","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for Printer","synthetic":true,"types":[]},{"text":"impl Freeze for TranslatorBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Translator","synthetic":true,"types":[]},{"text":"impl Freeze for CaseFoldError","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for Hir","synthetic":true,"types":[]},{"text":"impl Freeze for HirKind","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for Class","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ClassUnicodeIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClassUnicodeRange","synthetic":true,"types":[]},{"text":"impl Freeze for ClassBytes","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ClassBytesIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClassBytesRange","synthetic":true,"types":[]},{"text":"impl Freeze for Anchor","synthetic":true,"types":[]},{"text":"impl Freeze for WordBoundary","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for GroupKind","synthetic":true,"types":[]},{"text":"impl Freeze for Repetition","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionKind","synthetic":true,"types":[]},{"text":"impl Freeze for RepetitionRange","synthetic":true,"types":[]},{"text":"impl Freeze for ParserBuilder","synthetic":true,"types":[]},{"text":"impl !Freeze for Parser","synthetic":true,"types":[]},{"text":"impl Freeze for UnicodeWordError","synthetic":true,"types":[]},{"text":"impl Freeze for Utf8Sequence","synthetic":true,"types":[]},{"text":"impl Freeze for Utf8Range","synthetic":true,"types":[]},{"text":"impl Freeze for Utf8Sequences","synthetic":true,"types":[]}];
implementors["resolv_conf"] = [{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Network","synthetic":true,"types":[]},{"text":"impl Freeze for ScopedIp","synthetic":true,"types":[]},{"text":"impl Freeze for AddrParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DomainIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Lookup","synthetic":true,"types":[]},{"text":"impl Freeze for Family","synthetic":true,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Freeze for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryDemangleError","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Freeze for Buffer","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Freeze for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Freeze for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UnitDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for BoolDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for IsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U8Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U16Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for UsizeDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for F64Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for CharDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for I128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U128Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for U32Deserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for StrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for StringDeserializer&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for CowStrDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Freeze for BytesDeserializer&lt;'a, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Freeze for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Freeze for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Freeze for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Freeze for Impossible&lt;Ok, Error&gt;","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Freeze for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Freeze for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Freeze for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CharEscape","synthetic":true,"types":[]},{"text":"impl Freeze for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Serializer","synthetic":true,"types":[]},{"text":"impl Freeze for Number","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Freeze for Deserializer&lt;'de&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for Serializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for SeqSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for TupleSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for TupleStructSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for TupleVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for MapSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for StructSerializer&lt;'input, 'output, Target&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for StructVariantSerializer&lt;'input, 'output, T&gt;","synthetic":true,"types":[]}];
implementors["sha1"] = [{"text":"impl Freeze for Sha1","synthetic":true,"types":[]},{"text":"impl Freeze for Digest","synthetic":true,"types":[]},{"text":"impl Freeze for DigestParseError","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for SigId","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for Slab&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl Freeze for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["socket2"] = [{"text":"impl Freeze for SockAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Socket","synthetic":true,"types":[]},{"text":"impl Freeze for Domain","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Freeze for Underscore","synthetic":true,"types":[]},{"text":"impl Freeze for Abstract","synthetic":true,"types":[]},{"text":"impl Freeze for As","synthetic":true,"types":[]},{"text":"impl Freeze for Async","synthetic":true,"types":[]},{"text":"impl Freeze for Auto","synthetic":true,"types":[]},{"text":"impl Freeze for Await","synthetic":true,"types":[]},{"text":"impl Freeze for Become","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for Break","synthetic":true,"types":[]},{"text":"impl Freeze for Const","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Crate","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl Freeze for Do","synthetic":true,"types":[]},{"text":"impl Freeze for Dyn","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl Freeze for Enum","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Final","synthetic":true,"types":[]},{"text":"impl Freeze for Fn","synthetic":true,"types":[]},{"text":"impl Freeze for For","synthetic":true,"types":[]},{"text":"impl Freeze for If","synthetic":true,"types":[]},{"text":"impl Freeze for Impl","synthetic":true,"types":[]},{"text":"impl Freeze for In","synthetic":true,"types":[]},{"text":"impl Freeze for Let","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Mod","synthetic":true,"types":[]},{"text":"impl Freeze for Move","synthetic":true,"types":[]},{"text":"impl Freeze for Mut","synthetic":true,"types":[]},{"text":"impl Freeze for Override","synthetic":true,"types":[]},{"text":"impl Freeze for Priv","synthetic":true,"types":[]},{"text":"impl Freeze for Pub","synthetic":true,"types":[]},{"text":"impl Freeze for Ref","synthetic":true,"types":[]},{"text":"impl Freeze for Return","synthetic":true,"types":[]},{"text":"impl Freeze for SelfType","synthetic":true,"types":[]},{"text":"impl Freeze for SelfValue","synthetic":true,"types":[]},{"text":"impl Freeze for Static","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for Super","synthetic":true,"types":[]},{"text":"impl Freeze for Trait","synthetic":true,"types":[]},{"text":"impl Freeze for Try","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Typeof","synthetic":true,"types":[]},{"text":"impl Freeze for Union","synthetic":true,"types":[]},{"text":"impl Freeze for Unsafe","synthetic":true,"types":[]},{"text":"impl Freeze for Unsized","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for Virtual","synthetic":true,"types":[]},{"text":"impl Freeze for Where","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Yield","synthetic":true,"types":[]},{"text":"impl Freeze for Add","synthetic":true,"types":[]},{"text":"impl Freeze for AddEq","synthetic":true,"types":[]},{"text":"impl Freeze for And","synthetic":true,"types":[]},{"text":"impl Freeze for AndAnd","synthetic":true,"types":[]},{"text":"impl Freeze for AndEq","synthetic":true,"types":[]},{"text":"impl Freeze for At","synthetic":true,"types":[]},{"text":"impl Freeze for Bang","synthetic":true,"types":[]},{"text":"impl Freeze for Caret","synthetic":true,"types":[]},{"text":"impl Freeze for CaretEq","synthetic":true,"types":[]},{"text":"impl Freeze for Colon","synthetic":true,"types":[]},{"text":"impl Freeze for Colon2","synthetic":true,"types":[]},{"text":"impl Freeze for Comma","synthetic":true,"types":[]},{"text":"impl Freeze for Div","synthetic":true,"types":[]},{"text":"impl Freeze for DivEq","synthetic":true,"types":[]},{"text":"impl Freeze for Dollar","synthetic":true,"types":[]},{"text":"impl Freeze for Dot","synthetic":true,"types":[]},{"text":"impl Freeze for Dot2","synthetic":true,"types":[]},{"text":"impl Freeze for Dot3","synthetic":true,"types":[]},{"text":"impl Freeze for DotDotEq","synthetic":true,"types":[]},{"text":"impl Freeze for Eq","synthetic":true,"types":[]},{"text":"impl Freeze for EqEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ge","synthetic":true,"types":[]},{"text":"impl Freeze for Gt","synthetic":true,"types":[]},{"text":"impl Freeze for Le","synthetic":true,"types":[]},{"text":"impl Freeze for Lt","synthetic":true,"types":[]},{"text":"impl Freeze for MulEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ne","synthetic":true,"types":[]},{"text":"impl Freeze for Or","synthetic":true,"types":[]},{"text":"impl Freeze for OrEq","synthetic":true,"types":[]},{"text":"impl Freeze for OrOr","synthetic":true,"types":[]},{"text":"impl Freeze for Pound","synthetic":true,"types":[]},{"text":"impl Freeze for Question","synthetic":true,"types":[]},{"text":"impl Freeze for RArrow","synthetic":true,"types":[]},{"text":"impl Freeze for LArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Rem","synthetic":true,"types":[]},{"text":"impl Freeze for RemEq","synthetic":true,"types":[]},{"text":"impl Freeze for FatArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Semi","synthetic":true,"types":[]},{"text":"impl Freeze for Shl","synthetic":true,"types":[]},{"text":"impl Freeze for ShlEq","synthetic":true,"types":[]},{"text":"impl Freeze for Shr","synthetic":true,"types":[]},{"text":"impl Freeze for ShrEq","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for Sub","synthetic":true,"types":[]},{"text":"impl Freeze for SubEq","synthetic":true,"types":[]},{"text":"impl Freeze for Tilde","synthetic":true,"types":[]},{"text":"impl Freeze for Brace","synthetic":true,"types":[]},{"text":"impl Freeze for Bracket","synthetic":true,"types":[]},{"text":"impl Freeze for Paren","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for AttrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Meta","synthetic":true,"types":[]},{"text":"impl Freeze for MetaList","synthetic":true,"types":[]},{"text":"impl Freeze for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Freeze for NestedMeta","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for Fields","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Visibility","synthetic":true,"types":[]},{"text":"impl Freeze for VisPublic","synthetic":true,"types":[]},{"text":"impl Freeze for VisCrate","synthetic":true,"types":[]},{"text":"impl Freeze for VisRestricted","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for ExprArray","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssign","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAsync","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAwait","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBinary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBox","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBreak","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCast","synthetic":true,"types":[]},{"text":"impl Freeze for ExprClosure","synthetic":true,"types":[]},{"text":"impl Freeze for ExprContinue","synthetic":true,"types":[]},{"text":"impl Freeze for ExprField","synthetic":true,"types":[]},{"text":"impl Freeze for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIf","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLet","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLit","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMatch","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprParen","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPath","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRange","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReference","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReturn","synthetic":true,"types":[]},{"text":"impl Freeze for ExprStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTry","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTuple","synthetic":true,"types":[]},{"text":"impl Freeze for ExprType","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Freeze for ExprWhile","synthetic":true,"types":[]},{"text":"impl Freeze for ExprYield","synthetic":true,"types":[]},{"text":"impl Freeze for Member","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Freeze for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Freeze for FieldValue","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for Arm","synthetic":true,"types":[]},{"text":"impl Freeze for RangeLimits","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for GenericParam","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParam","synthetic":true,"types":[]},{"text":"impl Freeze for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Freeze for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBound","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Freeze for WhereClause","synthetic":true,"types":[]},{"text":"impl Freeze for WherePredicate","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateType","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateEq","synthetic":true,"types":[]},{"text":"impl Freeze for Item","synthetic":true,"types":[]},{"text":"impl Freeze for ItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for ItemEnum","synthetic":true,"types":[]},{"text":"impl Freeze for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Freeze for ItemFn","synthetic":true,"types":[]},{"text":"impl Freeze for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Freeze for ItemImpl","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Freeze for ItemMod","synthetic":true,"types":[]},{"text":"impl Freeze for ItemStatic","synthetic":true,"types":[]},{"text":"impl Freeze for ItemStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ItemTrait","synthetic":true,"types":[]},{"text":"impl Freeze for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Freeze for ItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ItemUnion","synthetic":true,"types":[]},{"text":"impl Freeze for ItemUse","synthetic":true,"types":[]},{"text":"impl Freeze for UseTree","synthetic":true,"types":[]},{"text":"impl Freeze for UsePath","synthetic":true,"types":[]},{"text":"impl Freeze for UseName","synthetic":true,"types":[]},{"text":"impl Freeze for UseRename","synthetic":true,"types":[]},{"text":"impl Freeze for UseGlob","synthetic":true,"types":[]},{"text":"impl Freeze for UseGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItem","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItem","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemType","synthetic":true,"types":[]},{"text":"impl Freeze for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItem","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemType","synthetic":true,"types":[]},{"text":"impl Freeze for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Freeze for Signature","synthetic":true,"types":[]},{"text":"impl Freeze for FnArg","synthetic":true,"types":[]},{"text":"impl Freeze for Receiver","synthetic":true,"types":[]},{"text":"impl Freeze for File","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for Lit","synthetic":true,"types":[]},{"text":"impl Freeze for LitStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitByteStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitByte","synthetic":true,"types":[]},{"text":"impl Freeze for LitChar","synthetic":true,"types":[]},{"text":"impl Freeze for LitInt","synthetic":true,"types":[]},{"text":"impl Freeze for LitFloat","synthetic":true,"types":[]},{"text":"impl Freeze for LitBool","synthetic":true,"types":[]},{"text":"impl Freeze for StrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for DeriveInput","synthetic":true,"types":[]},{"text":"impl Freeze for Data","synthetic":true,"types":[]},{"text":"impl Freeze for DataStruct","synthetic":true,"types":[]},{"text":"impl Freeze for DataEnum","synthetic":true,"types":[]},{"text":"impl Freeze for DataUnion","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnOp","synthetic":true,"types":[]},{"text":"impl Freeze for Block","synthetic":true,"types":[]},{"text":"impl Freeze for Stmt","synthetic":true,"types":[]},{"text":"impl Freeze for Local","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArray","synthetic":true,"types":[]},{"text":"impl Freeze for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Freeze for TypeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Freeze for TypeInfer","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TypeNever","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParen","synthetic":true,"types":[]},{"text":"impl Freeze for TypePath","synthetic":true,"types":[]},{"text":"impl Freeze for TypePtr","synthetic":true,"types":[]},{"text":"impl Freeze for TypeReference","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSlice","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTuple","synthetic":true,"types":[]},{"text":"impl Freeze for Abi","synthetic":true,"types":[]},{"text":"impl Freeze for BareFnArg","synthetic":true,"types":[]},{"text":"impl Freeze for Variadic","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnType","synthetic":true,"types":[]},{"text":"impl Freeze for Pat","synthetic":true,"types":[]},{"text":"impl Freeze for PatBox","synthetic":true,"types":[]},{"text":"impl Freeze for PatIdent","synthetic":true,"types":[]},{"text":"impl Freeze for PatLit","synthetic":true,"types":[]},{"text":"impl Freeze for PatMacro","synthetic":true,"types":[]},{"text":"impl Freeze for PatOr","synthetic":true,"types":[]},{"text":"impl Freeze for PatPath","synthetic":true,"types":[]},{"text":"impl Freeze for PatRange","synthetic":true,"types":[]},{"text":"impl Freeze for PatReference","synthetic":true,"types":[]},{"text":"impl Freeze for PatRest","synthetic":true,"types":[]},{"text":"impl Freeze for PatSlice","synthetic":true,"types":[]},{"text":"impl Freeze for PatStruct","synthetic":true,"types":[]},{"text":"impl Freeze for PatTuple","synthetic":true,"types":[]},{"text":"impl Freeze for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Freeze for PatType","synthetic":true,"types":[]},{"text":"impl Freeze for PatWild","synthetic":true,"types":[]},{"text":"impl Freeze for FieldPat","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl Freeze for PathArguments","synthetic":true,"types":[]},{"text":"impl Freeze for GenericArgument","synthetic":true,"types":[]},{"text":"impl Freeze for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for QSelf","synthetic":true,"types":[]},{"text":"impl Freeze for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Punctuated&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Freeze for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl Freeze for AddBounds","synthetic":true,"types":[]},{"text":"impl Freeze for BindStyle","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Structure&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T&gt; !Freeze for CachedThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for CachedIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for CachedIntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for ThreadLocal&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]}];
implementors["threadpool"] = [{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl !Freeze for ThreadPool","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Freeze for Duration","synthetic":true,"types":[]},{"text":"impl Freeze for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Freeze for Timespec","synthetic":true,"types":[]},{"text":"impl Freeze for PreciseTime","synthetic":true,"types":[]},{"text":"impl Freeze for SteadyTime","synthetic":true,"types":[]},{"text":"impl Freeze for Tm","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Freeze for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Freeze for ArrayVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ArrayVecDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Freeze for SliceVec&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, 's, T&gt; Freeze for SliceVecDrain&lt;'p, 's, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Freeze for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Freeze for TinyVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio"] = [{"text":"impl&lt;E&gt; !Freeze for PollEvented&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Registration","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ReadHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for WriteHalf&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Freeze for Seek&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RW&gt; Freeze for BufStream&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R:&nbsp;?Sized, W:&nbsp;?Sized&gt; Freeze for Copy&lt;'a, R, W&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Lines&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DuplexStream","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]},{"text":"impl Freeze for Sink","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Split&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, B&gt; Freeze for StreamReader&lt;S, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for ReaderStream&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Take&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Freeze for ReuniteError","synthetic":true,"types":[]},{"text":"impl !Freeze for TcpStream","synthetic":true,"types":[]},{"text":"impl !Freeze for UdpSocket","synthetic":true,"types":[]},{"text":"impl Freeze for SendHalf","synthetic":true,"types":[]},{"text":"impl Freeze for RecvHalf","synthetic":true,"types":[]},{"text":"impl Freeze for ReuniteError","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixDatagram","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecvHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SendHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedSendHalf","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedRecvHalf","synthetic":true,"types":[]},{"text":"impl Freeze for ReuniteError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ReadHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WriteHalf&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedReadHalf","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedWriteHalf","synthetic":true,"types":[]},{"text":"impl Freeze for ReuniteError","synthetic":true,"types":[]},{"text":"impl !Freeze for UnixStream","synthetic":true,"types":[]},{"text":"impl Freeze for UCred","synthetic":true,"types":[]},{"text":"impl !Freeze for JoinError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for JoinHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for Handle","synthetic":true,"types":[]},{"text":"impl Freeze for TryCurrentError","synthetic":true,"types":[]},{"text":"impl Freeze for Runtime","synthetic":true,"types":[]},{"text":"impl Freeze for SignalKind","synthetic":true,"types":[]},{"text":"impl !Freeze for Signal","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Empty&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Iter&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Once&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Pending&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for StreamMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Barrier","synthetic":true,"types":[]},{"text":"impl Freeze for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UnboundedReceiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl Freeze for ClosedError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendTimeoutError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Freeze for OwnedMutexGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TryLockError","synthetic":true,"types":[]},{"text":"impl !Freeze for Notify","synthetic":true,"types":[]},{"text":"impl Freeze for RecvError","synthetic":true,"types":[]},{"text":"impl Freeze for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SemaphorePermit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedSemaphorePermit","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for LocalSet","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DelayQueue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Expired&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl Freeze for Delay","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Instant","synthetic":true,"types":[]},{"text":"impl Freeze for Interval","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Timeout&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Elapsed","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Throttle&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Freeze for BytesCodec","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Framed&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for FramedParts&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; Freeze for FramedRead&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; Freeze for FramedWrite&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for LengthDelimitedCodecError","synthetic":true,"types":[]},{"text":"impl Freeze for LengthDelimitedCodec","synthetic":true,"types":[]},{"text":"impl Freeze for LinesCodec","synthetic":true,"types":[]},{"text":"impl Freeze for LinesCodecError","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Freeze for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Datetime","synthetic":true,"types":[]},{"text":"impl Freeze for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Deserializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Spanned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; Freeze for WithDispatch&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Entered&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EnteredSpan","synthetic":true,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Freeze for Identifier","synthetic":true,"types":[]},{"text":"impl Freeze for Dispatch","synthetic":true,"types":[]},{"text":"impl Freeze for DefaultGuard","synthetic":true,"types":[]},{"text":"impl Freeze for SetGlobalDefaultError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Event&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl Freeze for FieldSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ValueSet&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Iter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DisplayValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DebugValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelFilterError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Freeze for Id","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attributes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Current","synthetic":true,"types":[]},{"text":"impl Freeze for Interest","synthetic":true,"types":[]}];
implementors["tracing_futures"] = [{"text":"impl&lt;T&gt; Freeze for Instrumented&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["trust_dns_proto"] = [{"text":"impl Freeze for SslErrorStack","synthetic":true,"types":[]},{"text":"impl Freeze for Unspecified","synthetic":true,"types":[]},{"text":"impl Freeze for ProtoErrorKind","synthetic":true,"types":[]},{"text":"impl !Freeze for ProtoError","synthetic":true,"types":[]},{"text":"impl Freeze for Edns","synthetic":true,"types":[]},{"text":"impl Freeze for Header","synthetic":true,"types":[]},{"text":"impl Freeze for MessageType","synthetic":true,"types":[]},{"text":"impl Freeze for Message","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderCounts","synthetic":true,"types":[]},{"text":"impl Freeze for NoopMessageFinalizer","synthetic":true,"types":[]},{"text":"impl Freeze for OpCode","synthetic":true,"types":[]},{"text":"impl Freeze for Query","synthetic":true,"types":[]},{"text":"impl Freeze for ResponseCode","synthetic":true,"types":[]},{"text":"impl Freeze for DNSClass","synthetic":true,"types":[]},{"text":"impl Freeze for Label","synthetic":true,"types":[]},{"text":"impl Freeze for Name","synthetic":true,"types":[]},{"text":"impl Freeze for DEFAULT","synthetic":true,"types":[]},{"text":"impl Freeze for IN_ADDR_ARPA","synthetic":true,"types":[]},{"text":"impl Freeze for IP6_ARPA","synthetic":true,"types":[]},{"text":"impl Freeze for LOCALHOST","synthetic":true,"types":[]},{"text":"impl Freeze for IN_ADDR_ARPA_127","synthetic":true,"types":[]},{"text":"impl Freeze for IP6_ARPA_1","synthetic":true,"types":[]},{"text":"impl Freeze for LOCAL","synthetic":true,"types":[]},{"text":"impl Freeze for IN_ADDR_ARPA_169_254","synthetic":true,"types":[]},{"text":"impl Freeze for IP6_ARPA_FE_8","synthetic":true,"types":[]},{"text":"impl Freeze for IP6_ARPA_FE_9","synthetic":true,"types":[]},{"text":"impl Freeze for IP6_ARPA_FE_B","synthetic":true,"types":[]},{"text":"impl Freeze for INVALID","synthetic":true,"types":[]},{"text":"impl Freeze for UserUsage","synthetic":true,"types":[]},{"text":"impl Freeze for AppUsage","synthetic":true,"types":[]},{"text":"impl Freeze for ResolverUsage","synthetic":true,"types":[]},{"text":"impl Freeze for CacheUsage","synthetic":true,"types":[]},{"text":"impl Freeze for AuthUsage","synthetic":true,"types":[]},{"text":"impl Freeze for OpUsage","synthetic":true,"types":[]},{"text":"impl Freeze for RegistryUsage","synthetic":true,"types":[]},{"text":"impl Freeze for ZoneUsage","synthetic":true,"types":[]},{"text":"impl Freeze for CAA","synthetic":true,"types":[]},{"text":"impl Freeze for Property","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for KeyValue","synthetic":true,"types":[]},{"text":"impl Freeze for MX","synthetic":true,"types":[]},{"text":"impl Freeze for NAPTR","synthetic":true,"types":[]},{"text":"impl Freeze for NULL","synthetic":true,"types":[]},{"text":"impl Freeze for OPENPGPKEY","synthetic":true,"types":[]},{"text":"impl Freeze for OPT","synthetic":true,"types":[]},{"text":"impl Freeze for EdnsCode","synthetic":true,"types":[]},{"text":"impl Freeze for EdnsOption","synthetic":true,"types":[]},{"text":"impl Freeze for SOA","synthetic":true,"types":[]},{"text":"impl Freeze for SRV","synthetic":true,"types":[]},{"text":"impl Freeze for SSHFP","synthetic":true,"types":[]},{"text":"impl Freeze for Algorithm","synthetic":true,"types":[]},{"text":"impl Freeze for FingerprintType","synthetic":true,"types":[]},{"text":"impl Freeze for TLSA","synthetic":true,"types":[]},{"text":"impl Freeze for CertUsage","synthetic":true,"types":[]},{"text":"impl Freeze for Selector","synthetic":true,"types":[]},{"text":"impl Freeze for Matching","synthetic":true,"types":[]},{"text":"impl Freeze for TXT","synthetic":true,"types":[]},{"text":"impl Freeze for RData","synthetic":true,"types":[]},{"text":"impl Freeze for RecordType","synthetic":true,"types":[]},{"text":"impl Freeze for Record","synthetic":true,"types":[]},{"text":"impl Freeze for RecordSet","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Freeze for RrsetRecords&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BinDecoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BinEncoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EncodeMode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Restrict&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Verified&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for TcpClientStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for TcpClientConnect&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for TcpStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; Freeze for UdpClientStream&lt;S, MF&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for UdpResponse","synthetic":true,"types":[]},{"text":"impl&lt;S, MF&gt; Freeze for UdpClientConnect&lt;S, MF&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for UdpStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, R&gt; Freeze for DnsExchange&lt;S, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, S, R&gt; !Freeze for DnsExchangeConnect&lt;F, S, R&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StreamHandle","synthetic":true,"types":[]},{"text":"impl Freeze for BasicDnsHandle","synthetic":true,"types":[]},{"text":"impl&lt;S, MF, D&gt; Freeze for DnsMultiplexer&lt;S, MF, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, S, MF&gt; Freeze for DnsMultiplexerConnect&lt;F, S, MF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for DnsMultiplexerSerialResponse","synthetic":true,"types":[]},{"text":"impl Freeze for DnsRequestOptions","synthetic":true,"types":[]},{"text":"impl Freeze for DnsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for DnsResponse","synthetic":true,"types":[]},{"text":"impl&lt;H&gt; Freeze for RetryDnsHandle&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for SerialMessage","synthetic":true,"types":[]},{"text":"impl Freeze for BufStreamHandle","synthetic":true,"types":[]},{"text":"impl Freeze for BufDnsStreamHandle","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for DnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for BufDnsRequestStreamHandle&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for OneshotDnsRequest&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !Freeze for OneshotDnsResponseReceiver&lt;F&gt;","synthetic":true,"types":[]}];
implementors["trust_dns_resolver"] = [{"text":"impl Freeze for AsyncResolver","synthetic":true,"types":[]},{"text":"impl&lt;F, G&gt; Freeze for Background&lt;F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as Future&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ResolverConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Protocol","synthetic":true,"types":[]},{"text":"impl Freeze for NameServerConfig","synthetic":true,"types":[]},{"text":"impl Freeze for NameServerConfigGroup","synthetic":true,"types":[]},{"text":"impl Freeze for LookupIpStrategy","synthetic":true,"types":[]},{"text":"impl Freeze for ResolverOpts","synthetic":true,"types":[]},{"text":"impl Freeze for ResolveErrorKind","synthetic":true,"types":[]},{"text":"impl !Freeze for ResolveError","synthetic":true,"types":[]},{"text":"impl Freeze for Hosts","synthetic":true,"types":[]},{"text":"impl Freeze for Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LookupIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LookupRecordIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for SrvLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for SrvLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SrvLookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for SrvLookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for ReverseLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for ReverseLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReverseLookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for ReverseLookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for Ipv4LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4LookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4LookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6Lookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for Ipv6LookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6LookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6LookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for MxLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for MxLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MxLookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for MxLookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for TxtLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for TxtLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TxtLookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for TxtLookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for SoaLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for SoaLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SoaLookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for SoaLookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for NsLookup","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for NsLookupIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for NsLookupIntoIter","synthetic":true,"types":[]},{"text":"impl Freeze for NsLookupFuture","synthetic":true,"types":[]},{"text":"impl Freeze for LookupIp","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for LookupIpIter&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LookupIpIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Freeze for LookupIpFuture&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Resolver","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for BidiClass","synthetic":true,"types":[]},{"text":"impl Freeze for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Freeze for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Freeze for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Replacements&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Freeze for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl Freeze for GraphemeIncomplete","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Freeze for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Origin","synthetic":true,"types":[]},{"text":"impl Freeze for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl Freeze for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["woab"] = [{"text":"impl Freeze for BuilderFactory","synthetic":true,"types":[]},{"text":"impl !Freeze for BuilderConnector","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Freeze for ActorBuilder&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Freeze for ActorBuilderContext&lt;'a, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, T, I&gt; Freeze for BuilderSingalConnector&lt;S, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, I&gt; Freeze for SignalRouter&lt;S, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Remove","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()